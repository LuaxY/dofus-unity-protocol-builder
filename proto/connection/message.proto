syntax = "proto3";

option go_package = "go-xp-dofus-unity-proto-builder/src/protocol/connection/message";

package com.ankama.dofus.server.connection.protocol;

message Message {
	oneof content {
		.com.ankama.dofus.server.connection.protocol.Request request = 1;
		.com.ankama.dofus.server.connection.protocol.Response response = 2;
		.com.ankama.dofus.server.connection.protocol.Event event = 3;
	}
}

message Request {
	string uuid = 1;
	oneof content {
		.com.ankama.dofus.server.connection.protocol.Ping ping = 2;
		.com.ankama.dofus.server.connection.protocol.IdentificationRequest identification = 3;
		.com.ankama.dofus.server.connection.protocol.SelectServerRequest selectServer = 4;
		.com.ankama.dofus.server.connection.protocol.ForceAccountRequest forceAccount = 5;
		.com.ankama.dofus.server.connection.protocol.ReleaseAccountRequest releaseAccount = 6;
		.com.ankama.dofus.server.connection.protocol.CharactersRequest characters_request = 7;
		.com.ankama.dofus.server.connection.protocol.FriendListRequest friend_list_request = 8;
		.com.ankama.dofus.server.connection.protocol.AcquaintanceServersRequest acquaintance_servers_request = 9;
	}
}

message Response {
	string uuid = 1;
	oneof content {
		.com.ankama.dofus.server.connection.protocol.Pong pong = 2;
		.com.ankama.dofus.server.connection.protocol.IdentificationResponse identification = 3;
		.com.ankama.dofus.server.connection.protocol.SelectServerResponse selectServer = 4;
		.com.ankama.dofus.server.connection.protocol.ForceAccountResponse forceAccount = 5;
		.com.ankama.dofus.server.connection.protocol.CharacterListResponse character_list_response = 6;
		.com.ankama.dofus.server.connection.protocol.FriendListResponse friend_list = 7;
		.com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse acquaintance_servers_response = 8;
	}
}

message Event {
	oneof content {
		.com.ankama.dofus.server.connection.protocol.Server server = 1;
		.com.ankama.dofus.server.connection.protocol.UpdateServerEvent update_server_event = 2;
	}
}

message Ping {
}

message Pong {
}

message UpdateServerEvent {
	.com.ankama.dofus.server.connection.protocol.ServerInformation serverInformation = 1;
}

message IdentificationRequest {
	string device_identifier = 1;
	string client_version = 5;
	oneof identification_type {
		.com.ankama.dofus.server.connection.protocol.TokenRequest tokenRequest = 3;
		.com.ankama.dofus.server.connection.protocol.LoginRequest loginRequest = 4;
	}
}

message TokenRequest {
	string token = 1;
	optional .com.ankama.dofus.server.connection.protocol.TokenRequest.Shield shield = 2;
	message Shield {
		int64 certificateId = 1;
		string certificateHash = 2;
	}

}

message LoginRequest {
	string login = 1;
}

message IdentificationResponse {
	oneof result {
		.com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success success = 1;
		.com.ankama.dofus.server.connection.protocol.IdentificationResponse.Error error = 2;
	}
	message Success {
		int64 account_id = 1;
		string account_nickname = 2;
		string account_tag = 3;
		.com.ankama.dofus.server.connection.protocol.ServerList server_list = 4;
		string subscription_end_date = 5;
		.com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success.Rights rights = 6;
		optional int32 fight_reconnection_server_id = 7;
		message Rights {
			bool show_force_account = 1;
			bool show_console = 2;
			bool unlimited_access = 3;
			bool infinite_subscription = 4;
			bool report = 5;
		}

	}

	message Error {
		.com.ankama.dofus.server.connection.protocol.IdentificationResponse.Error.Reason reason = 1;
		optional string ban_end_date = 2;
		optional string required_version = 3;
		enum Reason {
			UNKNOWN_AUTH_ERROR = 0;
			ALREADY_CONNECTED = 1;
			OTP_TIMEOUT = 2;
			BANNED = 3;
			INVALID_SHIELD_CERTIFICATE = 4;
			LOCKED = 5;
			CREDENTIALS_RESET = 6;
			WRONG_CREDENTIALS = 7;
			EMAIL_UNVALIDATED = 8;
			ANONYMOUS_IP_FORBIDDEN = 9;
			NICKNAME_REGISTRATION = 10;
			UNAUTHORIZED = 11;
			INVALID_CLIENT_VERSION = 12;
			OUTDATED_CLIENT_VERSION = 13;
		}

	}

}

message SelectServerRequest {
	int32 server = 1;
}

message SelectServerResponse {
	oneof result {
		.com.ankama.dofus.server.connection.protocol.SelectServerResponse.Success success = 1;
		.com.ankama.dofus.server.connection.protocol.SelectServerResponse.Error error = 2;
	}
	message Success {
		string token = 1;
		string host = 2;
		repeated int32 ports = 3;
	}

	enum Error {
		REFUSED = 0;
		SUBSCRIBER_ONLY = 1;
		SINGLE_ACCOUNT_VERIFIED_ONLY = 2;
		MAINTENANCE = 3;
	}

}

message ServerList {
	repeated .com.ankama.dofus.server.connection.protocol.ServerInformation servers = 1;
	int32 max_slot_by_type = 2;
}

message ServerInformation {
	.com.ankama.dofus.server.connection.protocol.Server server = 1;
	.com.ankama.dofus.server.connection.protocol.ServerInformation.Accessibility accessibility = 2;
	enum Accessibility {
		ACCESSIBLE = 0;
		SUBSCRIBE_RESTRICTION = 1;
		MONO_ACCOUNT_RESTRICTION = 2;
	}

}

message Server {
	int32 id = 1;
	.com.ankama.dofus.server.connection.protocol.Server.Status status = 2;
	bool limited = 3;
	int32 type = 4;
	bool mono_account = 5;
	enum Status {
		OFFLINE = 0;
		ONLINE = 1;
		MAINTENANCE = 2;
	}

}

message ForceAccountRequest {
	int64 account_id = 1;
}

message ForceAccountResponse {
	oneof content {
		.com.ankama.dofus.server.connection.protocol.ForceAccountStatus success = 2;
		.com.ankama.dofus.server.connection.protocol.ForceAccountError error = 3;
	}
}

message ForceAccountStatus {
	bool is_forced = 1;
	int64 forced_account_id = 2;
	string forced_account_nickname = 3;
	string forced_account_tag = 4;
	.com.ankama.dofus.server.connection.protocol.ServerList server_list = 5;
}

message ForceAccountError {
}

message ReleaseAccountRequest {
}

message CharactersRequest {
}

message CharacterListResponse {
	repeated .com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation character_information = 1;
	message CharacterInformation {
		string name = 1;
		.com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.Breed breed = 2;
		.com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.Gender gender = 3;
		int32 level = 4;
		string last_connection_date = 5;
		int32 server_id = 6;
		enum Gender {
			MALE = 0;
			FEMALE = 1;
		}

		enum Breed {
			FECA = 0;
			OSAMODAS = 1;
			ENUTROF = 2;
			SRAM = 3;
			XELOR = 4;
			ECAFLIP = 5;
			ENIRIPSA = 6;
			IOP = 7;
			CRA = 8;
			SADIDA = 9;
			SACRIER = 10;
			PANDAWA = 11;
			ROGUE = 12;
			MASQUERAIDER = 13;
			FOGGERNAUTS = 14;
			ELIOTROPE = 15;
			HUPPERMAGE = 16;
			OUGINAK = 17;
			FORGELANCE = 18;
		}

	}

}

message FriendListRequest {
}

message FriendListResponse {
	oneof result {
		.com.ankama.dofus.server.connection.protocol.FriendListResponse.FriendList friends = 1;
		.com.ankama.dofus.server.connection.protocol.FriendListResponse.Error error = 2;
	}
	message FriendList {
		repeated .com.ankama.dofus.server.connection.protocol.FriendListResponse.FriendList.Friend friends = 1;
		message Friend {
			string account_name = 1;
			string account_tag = 2;
			repeated int32 servers = 3;
		}

	}

	enum Error {
		UNKNOWN = 0;
		FLOODING = 1;
	}

}

message AcquaintanceServersRequest {
	string name = 1;
	string tag = 2;
}

message AcquaintanceServersResponse {
	oneof result {
		.com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Servers servers = 1;
		.com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Error error = 2;
	}
	message Servers {
		repeated int32 servers = 1;
	}

	message Error {
		.com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Error.Reason reason = 1;
		enum Reason {
			UNKNOWN = 0;
			NO_RESULT = 1;
			FLOOD = 2;
			INVALID_ACCOUNT = 3;
		}

	}

}

