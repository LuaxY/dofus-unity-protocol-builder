// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/treasure_hunt.proto

package treasure_hunt

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TreasureHuntType int32

const (
	TreasureHuntType_CLASSIC   TreasureHuntType = 0
	TreasureHuntType_PORTAL    TreasureHuntType = 1
	TreasureHuntType_LEGENDARY TreasureHuntType = 2
)

// Enum value maps for TreasureHuntType.
var (
	TreasureHuntType_name = map[int32]string{
		0: "CLASSIC",
		1: "PORTAL",
		2: "LEGENDARY",
	}
	TreasureHuntType_value = map[string]int32{
		"CLASSIC":   0,
		"PORTAL":    1,
		"LEGENDARY": 2,
	}
)

func (x TreasureHuntType) Enum() *TreasureHuntType {
	p := new(TreasureHuntType)
	*p = x
	return p
}

func (x TreasureHuntType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreasureHuntType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_treasure_hunt_proto_enumTypes[0].Descriptor()
}

func (TreasureHuntType) Type() protoreflect.EnumType {
	return &file_proto_game_treasure_hunt_proto_enumTypes[0]
}

func (x TreasureHuntType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreasureHuntType.Descriptor instead.
func (TreasureHuntType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{0}
}

type TreasureHuntAnswerEvent_Result int32

const (
	TreasureHuntAnswerEvent_ERROR_UNDEFINED            TreasureHuntAnswerEvent_Result = 0
	TreasureHuntAnswerEvent_ERROR_NO_QUEST_FOUND       TreasureHuntAnswerEvent_Result = 1
	TreasureHuntAnswerEvent_ERROR_ALREADY_HAVE_QUEST   TreasureHuntAnswerEvent_Result = 2
	TreasureHuntAnswerEvent_ERROR_NOT_AVAILABLE        TreasureHuntAnswerEvent_Result = 3
	TreasureHuntAnswerEvent_ERROR_DAILY_LIMIT_EXCEEDED TreasureHuntAnswerEvent_Result = 4
	TreasureHuntAnswerEvent_OK                         TreasureHuntAnswerEvent_Result = 5
)

// Enum value maps for TreasureHuntAnswerEvent_Result.
var (
	TreasureHuntAnswerEvent_Result_name = map[int32]string{
		0: "ERROR_UNDEFINED",
		1: "ERROR_NO_QUEST_FOUND",
		2: "ERROR_ALREADY_HAVE_QUEST",
		3: "ERROR_NOT_AVAILABLE",
		4: "ERROR_DAILY_LIMIT_EXCEEDED",
		5: "OK",
	}
	TreasureHuntAnswerEvent_Result_value = map[string]int32{
		"ERROR_UNDEFINED":            0,
		"ERROR_NO_QUEST_FOUND":       1,
		"ERROR_ALREADY_HAVE_QUEST":   2,
		"ERROR_NOT_AVAILABLE":        3,
		"ERROR_DAILY_LIMIT_EXCEEDED": 4,
		"OK":                         5,
	}
)

func (x TreasureHuntAnswerEvent_Result) Enum() *TreasureHuntAnswerEvent_Result {
	p := new(TreasureHuntAnswerEvent_Result)
	*p = x
	return p
}

func (x TreasureHuntAnswerEvent_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreasureHuntAnswerEvent_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_treasure_hunt_proto_enumTypes[1].Descriptor()
}

func (TreasureHuntAnswerEvent_Result) Type() protoreflect.EnumType {
	return &file_proto_game_treasure_hunt_proto_enumTypes[1]
}

func (x TreasureHuntAnswerEvent_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreasureHuntAnswerEvent_Result.Descriptor instead.
func (TreasureHuntAnswerEvent_Result) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{7, 0}
}

type TreasureHuntEvent_TreasureHuntFlag_FlagState int32

const (
	TreasureHuntEvent_TreasureHuntFlag_UNKNOWN TreasureHuntEvent_TreasureHuntFlag_FlagState = 0
	TreasureHuntEvent_TreasureHuntFlag_OK      TreasureHuntEvent_TreasureHuntFlag_FlagState = 1
	TreasureHuntEvent_TreasureHuntFlag_WRONG   TreasureHuntEvent_TreasureHuntFlag_FlagState = 2
)

// Enum value maps for TreasureHuntEvent_TreasureHuntFlag_FlagState.
var (
	TreasureHuntEvent_TreasureHuntFlag_FlagState_name = map[int32]string{
		0: "UNKNOWN",
		1: "OK",
		2: "WRONG",
	}
	TreasureHuntEvent_TreasureHuntFlag_FlagState_value = map[string]int32{
		"UNKNOWN": 0,
		"OK":      1,
		"WRONG":   2,
	}
)

func (x TreasureHuntEvent_TreasureHuntFlag_FlagState) Enum() *TreasureHuntEvent_TreasureHuntFlag_FlagState {
	p := new(TreasureHuntEvent_TreasureHuntFlag_FlagState)
	*p = x
	return p
}

func (x TreasureHuntEvent_TreasureHuntFlag_FlagState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreasureHuntEvent_TreasureHuntFlag_FlagState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_treasure_hunt_proto_enumTypes[2].Descriptor()
}

func (TreasureHuntEvent_TreasureHuntFlag_FlagState) Type() protoreflect.EnumType {
	return &file_proto_game_treasure_hunt_proto_enumTypes[2]
}

func (x TreasureHuntEvent_TreasureHuntFlag_FlagState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntFlag_FlagState.Descriptor instead.
func (TreasureHuntEvent_TreasureHuntFlag_FlagState) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 1, 0}
}

type TreasureHuntDigAnswerEvent_DigResult int32

const (
	TreasureHuntDigAnswerEvent_ERROR_UNDEFINED       TreasureHuntDigAnswerEvent_DigResult = 0
	TreasureHuntDigAnswerEvent_NEW_HINT              TreasureHuntDigAnswerEvent_DigResult = 1
	TreasureHuntDigAnswerEvent_FINISHED              TreasureHuntDigAnswerEvent_DigResult = 2
	TreasureHuntDigAnswerEvent_WRONG                 TreasureHuntDigAnswerEvent_DigResult = 3
	TreasureHuntDigAnswerEvent_LOST                  TreasureHuntDigAnswerEvent_DigResult = 4
	TreasureHuntDigAnswerEvent_ERROR_IMPOSSIBLE      TreasureHuntDigAnswerEvent_DigResult = 5
	TreasureHuntDigAnswerEvent_WRONG_AND_YOU_KNOW_IT TreasureHuntDigAnswerEvent_DigResult = 6
)

// Enum value maps for TreasureHuntDigAnswerEvent_DigResult.
var (
	TreasureHuntDigAnswerEvent_DigResult_name = map[int32]string{
		0: "ERROR_UNDEFINED",
		1: "NEW_HINT",
		2: "FINISHED",
		3: "WRONG",
		4: "LOST",
		5: "ERROR_IMPOSSIBLE",
		6: "WRONG_AND_YOU_KNOW_IT",
	}
	TreasureHuntDigAnswerEvent_DigResult_value = map[string]int32{
		"ERROR_UNDEFINED":       0,
		"NEW_HINT":              1,
		"FINISHED":              2,
		"WRONG":                 3,
		"LOST":                  4,
		"ERROR_IMPOSSIBLE":      5,
		"WRONG_AND_YOU_KNOW_IT": 6,
	}
)

func (x TreasureHuntDigAnswerEvent_DigResult) Enum() *TreasureHuntDigAnswerEvent_DigResult {
	p := new(TreasureHuntDigAnswerEvent_DigResult)
	*p = x
	return p
}

func (x TreasureHuntDigAnswerEvent_DigResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreasureHuntDigAnswerEvent_DigResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_treasure_hunt_proto_enumTypes[3].Descriptor()
}

func (TreasureHuntDigAnswerEvent_DigResult) Type() protoreflect.EnumType {
	return &file_proto_game_treasure_hunt_proto_enumTypes[3]
}

func (x TreasureHuntDigAnswerEvent_DigResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreasureHuntDigAnswerEvent_DigResult.Descriptor instead.
func (TreasureHuntDigAnswerEvent_DigResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{10, 0}
}

type TreasureHuntFlagAnswerEvent_FlagResult int32

const (
	TreasureHuntFlagAnswerEvent_ERROR_UNDEFINED  TreasureHuntFlagAnswerEvent_FlagResult = 0
	TreasureHuntFlagAnswerEvent_OK               TreasureHuntFlagAnswerEvent_FlagResult = 1
	TreasureHuntFlagAnswerEvent_WRONG            TreasureHuntFlagAnswerEvent_FlagResult = 2
	TreasureHuntFlagAnswerEvent_TOO_MANY         TreasureHuntFlagAnswerEvent_FlagResult = 3
	TreasureHuntFlagAnswerEvent_ERROR_IMPOSSIBLE TreasureHuntFlagAnswerEvent_FlagResult = 4
	TreasureHuntFlagAnswerEvent_WRONG_INDEX      TreasureHuntFlagAnswerEvent_FlagResult = 5
	TreasureHuntFlagAnswerEvent_SAME_MAP         TreasureHuntFlagAnswerEvent_FlagResult = 6
)

// Enum value maps for TreasureHuntFlagAnswerEvent_FlagResult.
var (
	TreasureHuntFlagAnswerEvent_FlagResult_name = map[int32]string{
		0: "ERROR_UNDEFINED",
		1: "OK",
		2: "WRONG",
		3: "TOO_MANY",
		4: "ERROR_IMPOSSIBLE",
		5: "WRONG_INDEX",
		6: "SAME_MAP",
	}
	TreasureHuntFlagAnswerEvent_FlagResult_value = map[string]int32{
		"ERROR_UNDEFINED":  0,
		"OK":               1,
		"WRONG":            2,
		"TOO_MANY":         3,
		"ERROR_IMPOSSIBLE": 4,
		"WRONG_INDEX":      5,
		"SAME_MAP":         6,
	}
)

func (x TreasureHuntFlagAnswerEvent_FlagResult) Enum() *TreasureHuntFlagAnswerEvent_FlagResult {
	p := new(TreasureHuntFlagAnswerEvent_FlagResult)
	*p = x
	return p
}

func (x TreasureHuntFlagAnswerEvent_FlagResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreasureHuntFlagAnswerEvent_FlagResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_treasure_hunt_proto_enumTypes[4].Descriptor()
}

func (TreasureHuntFlagAnswerEvent_FlagResult) Type() protoreflect.EnumType {
	return &file_proto_game_treasure_hunt_proto_enumTypes[4]
}

func (x TreasureHuntFlagAnswerEvent_FlagResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreasureHuntFlagAnswerEvent_FlagResult.Descriptor instead.
func (TreasureHuntFlagAnswerEvent_FlagResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{11, 0}
}

type TreasureHuntLegendaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegendaryId int32 `protobuf:"varint,1,opt,name=legendary_id,json=legendaryId,proto3" json:"legendary_id,omitempty"`
}

func (x *TreasureHuntLegendaryRequest) Reset() {
	*x = TreasureHuntLegendaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntLegendaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntLegendaryRequest) ProtoMessage() {}

func (x *TreasureHuntLegendaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntLegendaryRequest.ProtoReflect.Descriptor instead.
func (*TreasureHuntLegendaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{0}
}

func (x *TreasureHuntLegendaryRequest) GetLegendaryId() int32 {
	if x != nil {
		return x.LegendaryId
	}
	return 0
}

type TreasureHuntDigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType TreasureHuntType `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
}

func (x *TreasureHuntDigRequest) Reset() {
	*x = TreasureHuntDigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntDigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntDigRequest) ProtoMessage() {}

func (x *TreasureHuntDigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntDigRequest.ProtoReflect.Descriptor instead.
func (*TreasureHuntDigRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{1}
}

func (x *TreasureHuntDigRequest) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

type TreasureHuntFlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType TreasureHuntType `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
	Index     int32            `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *TreasureHuntFlagRequest) Reset() {
	*x = TreasureHuntFlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntFlagRequest) ProtoMessage() {}

func (x *TreasureHuntFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntFlagRequest.ProtoReflect.Descriptor instead.
func (*TreasureHuntFlagRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{2}
}

func (x *TreasureHuntFlagRequest) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

func (x *TreasureHuntFlagRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type TreasureHuntFlagRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType TreasureHuntType `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
	Index     int32            `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *TreasureHuntFlagRemoveRequest) Reset() {
	*x = TreasureHuntFlagRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntFlagRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntFlagRemoveRequest) ProtoMessage() {}

func (x *TreasureHuntFlagRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntFlagRemoveRequest.ProtoReflect.Descriptor instead.
func (*TreasureHuntFlagRemoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{3}
}

func (x *TreasureHuntFlagRemoveRequest) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

func (x *TreasureHuntFlagRemoveRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type TreasureHuntGiveUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType TreasureHuntType `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
}

func (x *TreasureHuntGiveUpRequest) Reset() {
	*x = TreasureHuntGiveUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntGiveUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntGiveUpRequest) ProtoMessage() {}

func (x *TreasureHuntGiveUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntGiveUpRequest.ProtoReflect.Descriptor instead.
func (*TreasureHuntGiveUpRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{4}
}

func (x *TreasureHuntGiveUpRequest) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

type PortalUseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortalId int32 `protobuf:"varint,1,opt,name=portal_id,json=portalId,proto3" json:"portal_id,omitempty"`
}

func (x *PortalUseRequest) Reset() {
	*x = PortalUseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalUseRequest) ProtoMessage() {}

func (x *PortalUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalUseRequest.ProtoReflect.Descriptor instead.
func (*PortalUseRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{5}
}

func (x *PortalUseRequest) GetPortalId() int32 {
	if x != nil {
		return x.PortalId
	}
	return 0
}

type TreasureHuntLegendaryEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableLegendaryIds []int32 `protobuf:"varint,1,rep,packed,name=available_legendary_ids,json=availableLegendaryIds,proto3" json:"available_legendary_ids,omitempty"`
}

func (x *TreasureHuntLegendaryEvent) Reset() {
	*x = TreasureHuntLegendaryEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntLegendaryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntLegendaryEvent) ProtoMessage() {}

func (x *TreasureHuntLegendaryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntLegendaryEvent.ProtoReflect.Descriptor instead.
func (*TreasureHuntLegendaryEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{6}
}

func (x *TreasureHuntLegendaryEvent) GetAvailableLegendaryIds() []int32 {
	if x != nil {
		return x.AvailableLegendaryIds
	}
	return nil
}

type TreasureHuntAnswerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType TreasureHuntType               `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
	Result    TreasureHuntAnswerEvent_Result `protobuf:"varint,2,opt,name=result,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntAnswerEvent_Result" json:"result,omitempty"`
}

func (x *TreasureHuntAnswerEvent) Reset() {
	*x = TreasureHuntAnswerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntAnswerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntAnswerEvent) ProtoMessage() {}

func (x *TreasureHuntAnswerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntAnswerEvent.ProtoReflect.Descriptor instead.
func (*TreasureHuntAnswerEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{7}
}

func (x *TreasureHuntAnswerEvent) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

func (x *TreasureHuntAnswerEvent) GetResult() TreasureHuntAnswerEvent_Result {
	if x != nil {
		return x.Result
	}
	return TreasureHuntAnswerEvent_ERROR_UNDEFINED
}

type TreasureHuntEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType           TreasureHuntType                      `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
	StartMapId          int64                                 `protobuf:"varint,2,opt,name=start_map_id,json=startMapId,proto3" json:"start_map_id,omitempty"`
	KnownSteps          []*TreasureHuntEvent_TreasureHuntStep `protobuf:"bytes,3,rep,name=known_steps,json=knownSteps,proto3" json:"known_steps,omitempty"`
	TotalStepCount      int32                                 `protobuf:"varint,4,opt,name=total_step_count,json=totalStepCount,proto3" json:"total_step_count,omitempty"`
	CurrentCheckPoint   int32                                 `protobuf:"varint,5,opt,name=current_check_point,json=currentCheckPoint,proto3" json:"current_check_point,omitempty"`
	TotalCheckPoint     int32                                 `protobuf:"varint,6,opt,name=total_check_point,json=totalCheckPoint,proto3" json:"total_check_point,omitempty"`
	AvailableRetryCount int32                                 `protobuf:"varint,7,opt,name=available_retry_count,json=availableRetryCount,proto3" json:"available_retry_count,omitempty"`
	Flags               []*TreasureHuntEvent_TreasureHuntFlag `protobuf:"bytes,8,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *TreasureHuntEvent) Reset() {
	*x = TreasureHuntEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent) ProtoMessage() {}

func (x *TreasureHuntEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8}
}

func (x *TreasureHuntEvent) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

func (x *TreasureHuntEvent) GetStartMapId() int64 {
	if x != nil {
		return x.StartMapId
	}
	return 0
}

func (x *TreasureHuntEvent) GetKnownSteps() []*TreasureHuntEvent_TreasureHuntStep {
	if x != nil {
		return x.KnownSteps
	}
	return nil
}

func (x *TreasureHuntEvent) GetTotalStepCount() int32 {
	if x != nil {
		return x.TotalStepCount
	}
	return 0
}

func (x *TreasureHuntEvent) GetCurrentCheckPoint() int32 {
	if x != nil {
		return x.CurrentCheckPoint
	}
	return 0
}

func (x *TreasureHuntEvent) GetTotalCheckPoint() int32 {
	if x != nil {
		return x.TotalCheckPoint
	}
	return 0
}

func (x *TreasureHuntEvent) GetAvailableRetryCount() int32 {
	if x != nil {
		return x.AvailableRetryCount
	}
	return 0
}

func (x *TreasureHuntEvent) GetFlags() []*TreasureHuntEvent_TreasureHuntFlag {
	if x != nil {
		return x.Flags
	}
	return nil
}

type TreasureHuntFinishedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType TreasureHuntType `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
}

func (x *TreasureHuntFinishedEvent) Reset() {
	*x = TreasureHuntFinishedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntFinishedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntFinishedEvent) ProtoMessage() {}

func (x *TreasureHuntFinishedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntFinishedEvent.ProtoReflect.Descriptor instead.
func (*TreasureHuntFinishedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{9}
}

func (x *TreasureHuntFinishedEvent) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

type TreasureHuntDigAnswerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType      TreasureHuntType                     `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
	Result         TreasureHuntDigAnswerEvent_DigResult `protobuf:"varint,2,opt,name=result,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigAnswerEvent_DigResult" json:"result,omitempty"`
	WrongFlagCount *int32                               `protobuf:"varint,3,opt,name=wrong_flag_count,json=wrongFlagCount,proto3,oneof" json:"wrong_flag_count,omitempty"`
}

func (x *TreasureHuntDigAnswerEvent) Reset() {
	*x = TreasureHuntDigAnswerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntDigAnswerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntDigAnswerEvent) ProtoMessage() {}

func (x *TreasureHuntDigAnswerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntDigAnswerEvent.ProtoReflect.Descriptor instead.
func (*TreasureHuntDigAnswerEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{10}
}

func (x *TreasureHuntDigAnswerEvent) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

func (x *TreasureHuntDigAnswerEvent) GetResult() TreasureHuntDigAnswerEvent_DigResult {
	if x != nil {
		return x.Result
	}
	return TreasureHuntDigAnswerEvent_ERROR_UNDEFINED
}

func (x *TreasureHuntDigAnswerEvent) GetWrongFlagCount() int32 {
	if x != nil && x.WrongFlagCount != nil {
		return *x.WrongFlagCount
	}
	return 0
}

type TreasureHuntFlagAnswerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestType TreasureHuntType                       `protobuf:"varint,1,opt,name=quest_type,json=questType,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType" json:"quest_type,omitempty"`
	Result    TreasureHuntFlagAnswerEvent_FlagResult `protobuf:"varint,2,opt,name=result,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagAnswerEvent_FlagResult" json:"result,omitempty"`
	Index     int32                                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *TreasureHuntFlagAnswerEvent) Reset() {
	*x = TreasureHuntFlagAnswerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntFlagAnswerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntFlagAnswerEvent) ProtoMessage() {}

func (x *TreasureHuntFlagAnswerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntFlagAnswerEvent.ProtoReflect.Descriptor instead.
func (*TreasureHuntFlagAnswerEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{11}
}

func (x *TreasureHuntFlagAnswerEvent) GetQuestType() TreasureHuntType {
	if x != nil {
		return x.QuestType
	}
	return TreasureHuntType_CLASSIC
}

func (x *TreasureHuntFlagAnswerEvent) GetResult() TreasureHuntFlagAnswerEvent_FlagResult {
	if x != nil {
		return x.Result
	}
	return TreasureHuntFlagAnswerEvent_ERROR_UNDEFINED
}

func (x *TreasureHuntFlagAnswerEvent) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type TreasureHuntEvent_TreasureHuntStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Step:
	//
	//	*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPoi
	//	*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint_
	//	*TreasureHuntEvent_TreasureHuntStep_FollowDirection_
	//	*TreasureHuntEvent_TreasureHuntStep_Fight_
	//	*TreasureHuntEvent_TreasureHuntStep_Dig_
	Step isTreasureHuntEvent_TreasureHuntStep_Step `protobuf_oneof:"step"`
}

func (x *TreasureHuntEvent_TreasureHuntStep) Reset() {
	*x = TreasureHuntEvent_TreasureHuntStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent_TreasureHuntStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent_TreasureHuntStep) ProtoMessage() {}

func (x *TreasureHuntEvent_TreasureHuntStep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntStep.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent_TreasureHuntStep) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 0}
}

func (m *TreasureHuntEvent_TreasureHuntStep) GetStep() isTreasureHuntEvent_TreasureHuntStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *TreasureHuntEvent_TreasureHuntStep) GetFollowDirectionToPoi() *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI {
	if x, ok := x.GetStep().(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPoi); ok {
		return x.FollowDirectionToPoi
	}
	return nil
}

func (x *TreasureHuntEvent_TreasureHuntStep) GetFollowDirectionToHint() *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint {
	if x, ok := x.GetStep().(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint_); ok {
		return x.FollowDirectionToHint
	}
	return nil
}

func (x *TreasureHuntEvent_TreasureHuntStep) GetFollowDirection() *TreasureHuntEvent_TreasureHuntStep_FollowDirection {
	if x, ok := x.GetStep().(*TreasureHuntEvent_TreasureHuntStep_FollowDirection_); ok {
		return x.FollowDirection
	}
	return nil
}

func (x *TreasureHuntEvent_TreasureHuntStep) GetFight() *TreasureHuntEvent_TreasureHuntStep_Fight {
	if x, ok := x.GetStep().(*TreasureHuntEvent_TreasureHuntStep_Fight_); ok {
		return x.Fight
	}
	return nil
}

func (x *TreasureHuntEvent_TreasureHuntStep) GetDig() *TreasureHuntEvent_TreasureHuntStep_Dig {
	if x, ok := x.GetStep().(*TreasureHuntEvent_TreasureHuntStep_Dig_); ok {
		return x.Dig
	}
	return nil
}

type isTreasureHuntEvent_TreasureHuntStep_Step interface {
	isTreasureHuntEvent_TreasureHuntStep_Step()
}

type TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPoi struct {
	FollowDirectionToPoi *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI `protobuf:"bytes,1,opt,name=follow_direction_to_poi,json=followDirectionToPoi,proto3,oneof"`
}

type TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint_ struct {
	FollowDirectionToHint *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint `protobuf:"bytes,2,opt,name=follow_direction_to_hint,json=followDirectionToHint,proto3,oneof"`
}

type TreasureHuntEvent_TreasureHuntStep_FollowDirection_ struct {
	FollowDirection *TreasureHuntEvent_TreasureHuntStep_FollowDirection `protobuf:"bytes,3,opt,name=follow_direction,json=followDirection,proto3,oneof"`
}

type TreasureHuntEvent_TreasureHuntStep_Fight_ struct {
	Fight *TreasureHuntEvent_TreasureHuntStep_Fight `protobuf:"bytes,4,opt,name=fight,proto3,oneof"`
}

type TreasureHuntEvent_TreasureHuntStep_Dig_ struct {
	Dig *TreasureHuntEvent_TreasureHuntStep_Dig `protobuf:"bytes,5,opt,name=dig,proto3,oneof"`
}

func (*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPoi) isTreasureHuntEvent_TreasureHuntStep_Step() {
}

func (*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint_) isTreasureHuntEvent_TreasureHuntStep_Step() {
}

func (*TreasureHuntEvent_TreasureHuntStep_FollowDirection_) isTreasureHuntEvent_TreasureHuntStep_Step() {
}

func (*TreasureHuntEvent_TreasureHuntStep_Fight_) isTreasureHuntEvent_TreasureHuntStep_Step() {}

func (*TreasureHuntEvent_TreasureHuntStep_Dig_) isTreasureHuntEvent_TreasureHuntStep_Step() {}

type TreasureHuntEvent_TreasureHuntFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int64                                        `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	State TreasureHuntEvent_TreasureHuntFlag_FlagState `protobuf:"varint,2,opt,name=state,proto3,enum=com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent_TreasureHuntFlag_FlagState" json:"state,omitempty"`
}

func (x *TreasureHuntEvent_TreasureHuntFlag) Reset() {
	*x = TreasureHuntEvent_TreasureHuntFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent_TreasureHuntFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent_TreasureHuntFlag) ProtoMessage() {}

func (x *TreasureHuntEvent_TreasureHuntFlag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntFlag.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent_TreasureHuntFlag) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 1}
}

func (x *TreasureHuntEvent_TreasureHuntFlag) GetMapId() int64 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *TreasureHuntEvent_TreasureHuntFlag) GetState() TreasureHuntEvent_TreasureHuntFlag_FlagState {
	if x != nil {
		return x.State
	}
	return TreasureHuntEvent_TreasureHuntFlag_UNKNOWN
}

type TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction  common.Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=com.ankama.dofus.server.game.protocol.common.Direction" json:"direction,omitempty"`
	PoiLabelId int32            `protobuf:"varint,2,opt,name=poi_label_id,json=poiLabelId,proto3" json:"poi_label_id,omitempty"`
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI) Reset() {
	*x = TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI) ProtoMessage() {}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI) GetDirection() common.Direction {
	if x != nil {
		return x.Direction
	}
	return common.Direction(0)
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI) GetPoiLabelId() int32 {
	if x != nil {
		return x.PoiLabelId
	}
	return 0
}

type TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction common.Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=com.ankama.dofus.server.game.protocol.common.Direction" json:"direction,omitempty"`
	NpcId     int32            `protobuf:"varint,2,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty"`
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint) Reset() {
	*x = TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint) ProtoMessage() {}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 0, 1}
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint) GetDirection() common.Direction {
	if x != nil {
		return x.Direction
	}
	return common.Direction(0)
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint) GetNpcId() int32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

type TreasureHuntEvent_TreasureHuntStep_FollowDirection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction common.Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=com.ankama.dofus.server.game.protocol.common.Direction" json:"direction,omitempty"`
	MapCount  int32            `protobuf:"varint,2,opt,name=map_count,json=mapCount,proto3" json:"map_count,omitempty"`
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirection) Reset() {
	*x = TreasureHuntEvent_TreasureHuntStep_FollowDirection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent_TreasureHuntStep_FollowDirection) ProtoMessage() {}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntStep_FollowDirection.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent_TreasureHuntStep_FollowDirection) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 0, 2}
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirection) GetDirection() common.Direction {
	if x != nil {
		return x.Direction
	}
	return common.Direction(0)
}

func (x *TreasureHuntEvent_TreasureHuntStep_FollowDirection) GetMapCount() int32 {
	if x != nil {
		return x.MapCount
	}
	return 0
}

type TreasureHuntEvent_TreasureHuntStep_Fight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TreasureHuntEvent_TreasureHuntStep_Fight) Reset() {
	*x = TreasureHuntEvent_TreasureHuntStep_Fight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent_TreasureHuntStep_Fight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent_TreasureHuntStep_Fight) ProtoMessage() {}

func (x *TreasureHuntEvent_TreasureHuntStep_Fight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntStep_Fight.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent_TreasureHuntStep_Fight) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 0, 3}
}

type TreasureHuntEvent_TreasureHuntStep_Dig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TreasureHuntEvent_TreasureHuntStep_Dig) Reset() {
	*x = TreasureHuntEvent_TreasureHuntStep_Dig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_treasure_hunt_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureHuntEvent_TreasureHuntStep_Dig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureHuntEvent_TreasureHuntStep_Dig) ProtoMessage() {}

func (x *TreasureHuntEvent_TreasureHuntStep_Dig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_treasure_hunt_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureHuntEvent_TreasureHuntStep_Dig.ProtoReflect.Descriptor instead.
func (*TreasureHuntEvent_TreasureHuntStep_Dig) Descriptor() ([]byte, []int) {
	return file_proto_game_treasure_hunt_proto_rawDescGZIP(), []int{8, 0, 4}
}

var File_proto_game_treasure_hunt_proto protoreflect.FileDescriptor

var file_proto_game_treasure_hunt_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x74, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x33, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x2e, 0x68, 0x75, 0x6e, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x1c, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48,
	0x75, 0x6e, 0x74, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x16, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x9b,
	0x01, 0x0a, 0x1d, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x81, 0x01, 0x0a,
	0x19, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x47, 0x69, 0x76,
	0x65, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e,
	0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x2f, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49,
	0x64, 0x22, 0x54, 0x0a, 0x1a, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e,
	0x74, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x36, 0x0a, 0x17, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x67,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x67, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x85, 0x03, 0x0a, 0x17, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6b, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x4e, 0x4f, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41, 0x49,
	0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43,
	0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x05, 0x22,
	0xb1, 0x0f, 0x0a, 0x11, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x78, 0x0a,
	0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x57, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x48, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x0a, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x6d, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x57, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48,
	0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x48, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x1a, 0x9e, 0x09, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0xa5, 0x01, 0x0a, 0x17, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x6f,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x50, 0x4f, 0x49, 0x48, 0x00, 0x52, 0x14, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x50, 0x6f, 0x69, 0x12, 0xa8, 0x01,
	0x0a, 0x18, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48,
	0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x48, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x48, 0x69, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x15, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x10, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x2e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x75, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e,
	0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x48, 0x00, 0x52,
	0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x12, 0x6f, 0x0a, 0x03, 0x64, 0x69, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x2e, 0x44, 0x69, 0x67,
	0x48, 0x00, 0x52, 0x03, 0x64, 0x69, 0x67, 0x1a, 0x8f, 0x01, 0x0a, 0x14, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x50, 0x4f, 0x49,
	0x12, 0x55, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6f, 0x69, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6f, 0x69, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x85, 0x01, 0x0a, 0x15, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x48,
	0x69, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x70,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x49,
	0x64, 0x1a, 0x85, 0x01, 0x0a, 0x0f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x07, 0x0a, 0x05, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x1a, 0x05, 0x0a, 0x03, 0x44, 0x69, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x1a, 0xcf, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75,
	0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x77, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x09, 0x46, 0x6c, 0x61, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x4f, 0x4e,
	0x47, 0x10, 0x02, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x48, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x03, 0x0a, 0x1a, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x6e, 0x74,
	0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x71, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x44,
	0x69, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2d, 0x0a, 0x10, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x72, 0x6f,
	0x6e, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x22, 0x82,
	0x01, 0x0a, 0x09, 0x44, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x57, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x53, 0x54,
	0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4d, 0x50, 0x4f,
	0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x52, 0x4f, 0x4e,
	0x47, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x59, 0x4f, 0x55, 0x5f, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x49,
	0x54, 0x10, 0x06, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87, 0x03, 0x0a, 0x1b, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x68, 0x75,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x73,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e,
	0x68, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75, 0x6e,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x77, 0x0a, 0x0a, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x53, 0x53, 0x49, 0x42, 0x4c,
	0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x50,
	0x10, 0x06, 0x2a, 0x3a, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x49,
	0x43, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x10, 0x02, 0x42, 0x41,
	0x5a, 0x3f, 0x67, 0x6f, 0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x75, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_treasure_hunt_proto_rawDescOnce sync.Once
	file_proto_game_treasure_hunt_proto_rawDescData = file_proto_game_treasure_hunt_proto_rawDesc
)

func file_proto_game_treasure_hunt_proto_rawDescGZIP() []byte {
	file_proto_game_treasure_hunt_proto_rawDescOnce.Do(func() {
		file_proto_game_treasure_hunt_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_treasure_hunt_proto_rawDescData)
	})
	return file_proto_game_treasure_hunt_proto_rawDescData
}

var file_proto_game_treasure_hunt_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_game_treasure_hunt_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_game_treasure_hunt_proto_goTypes = []any{
	(TreasureHuntType)(0),                                            // 0: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	(TreasureHuntAnswerEvent_Result)(0),                              // 1: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntAnswerEvent.Result
	(TreasureHuntEvent_TreasureHuntFlag_FlagState)(0),                // 2: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntFlag.FlagState
	(TreasureHuntDigAnswerEvent_DigResult)(0),                        // 3: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigAnswerEvent.DigResult
	(TreasureHuntFlagAnswerEvent_FlagResult)(0),                      // 4: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagAnswerEvent.FlagResult
	(*TreasureHuntLegendaryRequest)(nil),                             // 5: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntLegendaryRequest
	(*TreasureHuntDigRequest)(nil),                                   // 6: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigRequest
	(*TreasureHuntFlagRequest)(nil),                                  // 7: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagRequest
	(*TreasureHuntFlagRemoveRequest)(nil),                            // 8: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagRemoveRequest
	(*TreasureHuntGiveUpRequest)(nil),                                // 9: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntGiveUpRequest
	(*PortalUseRequest)(nil),                                         // 10: com.ankama.dofus.server.game.protocol.treasure.hunt.PortalUseRequest
	(*TreasureHuntLegendaryEvent)(nil),                               // 11: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntLegendaryEvent
	(*TreasureHuntAnswerEvent)(nil),                                  // 12: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntAnswerEvent
	(*TreasureHuntEvent)(nil),                                        // 13: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent
	(*TreasureHuntFinishedEvent)(nil),                                // 14: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFinishedEvent
	(*TreasureHuntDigAnswerEvent)(nil),                               // 15: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigAnswerEvent
	(*TreasureHuntFlagAnswerEvent)(nil),                              // 16: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagAnswerEvent
	(*TreasureHuntEvent_TreasureHuntStep)(nil),                       // 17: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep
	(*TreasureHuntEvent_TreasureHuntFlag)(nil),                       // 18: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntFlag
	(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI)(nil),  // 19: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirectionToPOI
	(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint)(nil), // 20: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirectionToHint
	(*TreasureHuntEvent_TreasureHuntStep_FollowDirection)(nil),       // 21: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirection
	(*TreasureHuntEvent_TreasureHuntStep_Fight)(nil),                 // 22: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.Fight
	(*TreasureHuntEvent_TreasureHuntStep_Dig)(nil),                   // 23: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.Dig
	(common.Direction)(0),                                            // 24: com.ankama.dofus.server.game.protocol.common.Direction
}
var file_proto_game_treasure_hunt_proto_depIdxs = []int32{
	0,  // 0: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigRequest.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	0,  // 1: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagRequest.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	0,  // 2: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagRemoveRequest.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	0,  // 3: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntGiveUpRequest.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	0,  // 4: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntAnswerEvent.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	1,  // 5: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntAnswerEvent.result:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntAnswerEvent.Result
	0,  // 6: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	17, // 7: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.known_steps:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep
	18, // 8: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.flags:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntFlag
	0,  // 9: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFinishedEvent.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	0,  // 10: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigAnswerEvent.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	3,  // 11: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigAnswerEvent.result:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntDigAnswerEvent.DigResult
	0,  // 12: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagAnswerEvent.quest_type:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntType
	4,  // 13: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagAnswerEvent.result:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntFlagAnswerEvent.FlagResult
	19, // 14: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.follow_direction_to_poi:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirectionToPOI
	20, // 15: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.follow_direction_to_hint:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirectionToHint
	21, // 16: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.follow_direction:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirection
	22, // 17: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.fight:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.Fight
	23, // 18: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.dig:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.Dig
	2,  // 19: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntFlag.state:type_name -> com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntFlag.FlagState
	24, // 20: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirectionToPOI.direction:type_name -> com.ankama.dofus.server.game.protocol.common.Direction
	24, // 21: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirectionToHint.direction:type_name -> com.ankama.dofus.server.game.protocol.common.Direction
	24, // 22: com.ankama.dofus.server.game.protocol.treasure.hunt.TreasureHuntEvent.TreasureHuntStep.FollowDirection.direction:type_name -> com.ankama.dofus.server.game.protocol.common.Direction
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_game_treasure_hunt_proto_init() }
func file_proto_game_treasure_hunt_proto_init() {
	if File_proto_game_treasure_hunt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_treasure_hunt_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntLegendaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntDigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntFlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntFlagRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntGiveUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PortalUseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntLegendaryEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntAnswerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntFinishedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntDigAnswerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntFlagAnswerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent_TreasureHuntStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent_TreasureHuntFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPOI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent_TreasureHuntStep_FollowDirection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent_TreasureHuntStep_Fight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_treasure_hunt_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*TreasureHuntEvent_TreasureHuntStep_Dig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_treasure_hunt_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_game_treasure_hunt_proto_msgTypes[12].OneofWrappers = []any{
		(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToPoi)(nil),
		(*TreasureHuntEvent_TreasureHuntStep_FollowDirectionToHint_)(nil),
		(*TreasureHuntEvent_TreasureHuntStep_FollowDirection_)(nil),
		(*TreasureHuntEvent_TreasureHuntStep_Fight_)(nil),
		(*TreasureHuntEvent_TreasureHuntStep_Dig_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_treasure_hunt_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_treasure_hunt_proto_goTypes,
		DependencyIndexes: file_proto_game_treasure_hunt_proto_depIdxs,
		EnumInfos:         file_proto_game_treasure_hunt_proto_enumTypes,
		MessageInfos:      file_proto_game_treasure_hunt_proto_msgTypes,
	}.Build()
	File_proto_game_treasure_hunt_proto = out.File
	file_proto_game_treasure_hunt_proto_rawDesc = nil
	file_proto_game_treasure_hunt_proto_goTypes = nil
	file_proto_game_treasure_hunt_proto_depIdxs = nil
}
