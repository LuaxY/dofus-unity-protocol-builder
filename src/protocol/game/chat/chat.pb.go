// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/chat.proto

package chat

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Channel int32

const (
	Channel_GLOBAL    Channel = 0
	Channel_TEAM      Channel = 1
	Channel_GUILD     Channel = 2
	Channel_ALLIANCE  Channel = 3
	Channel_PARTY     Channel = 4
	Channel_SALES     Channel = 5
	Channel_SEEK      Channel = 6
	Channel_NOOB      Channel = 7
	Channel_ADMIN     Channel = 8
	Channel_ARENA     Channel = 9
	Channel_PRIVATE   Channel = 10
	Channel_INFO      Channel = 12
	Channel_FIGHT_LOG Channel = 13
	Channel_ADS       Channel = 14
	Channel_EVENT     Channel = 15
	Channel_EXCHANGE  Channel = 16
)

// Enum value maps for Channel.
var (
	Channel_name = map[int32]string{
		0:  "GLOBAL",
		1:  "TEAM",
		2:  "GUILD",
		3:  "ALLIANCE",
		4:  "PARTY",
		5:  "SALES",
		6:  "SEEK",
		7:  "NOOB",
		8:  "ADMIN",
		9:  "ARENA",
		10: "PRIVATE",
		12: "INFO",
		13: "FIGHT_LOG",
		14: "ADS",
		15: "EVENT",
		16: "EXCHANGE",
	}
	Channel_value = map[string]int32{
		"GLOBAL":    0,
		"TEAM":      1,
		"GUILD":     2,
		"ALLIANCE":  3,
		"PARTY":     4,
		"SALES":     5,
		"SEEK":      6,
		"NOOB":      7,
		"ADMIN":     8,
		"ARENA":     9,
		"PRIVATE":   10,
		"INFO":      12,
		"FIGHT_LOG": 13,
		"ADS":       14,
		"EVENT":     15,
		"EXCHANGE":  16,
	}
)

func (x Channel) Enum() *Channel {
	p := new(Channel)
	*p = x
	return p
}

func (x Channel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Channel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_chat_proto_enumTypes[0].Descriptor()
}

func (Channel) Type() protoreflect.EnumType {
	return &file_proto_game_chat_proto_enumTypes[0]
}

func (x Channel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Channel.Descriptor instead.
func (Channel) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{0}
}

type ChatErrorEvent_Error int32

const (
	ChatErrorEvent_UNKNOWN            ChatErrorEvent_Error = 0
	ChatErrorEvent_RECEIVER_NOT_FOUND ChatErrorEvent_Error = 1
	ChatErrorEvent_INTERIOR_MONOLOGUE ChatErrorEvent_Error = 2
	ChatErrorEvent_NO_GUILD           ChatErrorEvent_Error = 3
	ChatErrorEvent_NO_PARTY           ChatErrorEvent_Error = 4
	ChatErrorEvent_ALLIANCE           ChatErrorEvent_Error = 5
	ChatErrorEvent_INVALID_MAP        ChatErrorEvent_Error = 6
	ChatErrorEvent_NO_PARTY_ARENA     ChatErrorEvent_Error = 7
	ChatErrorEvent_NO_TEAM            ChatErrorEvent_Error = 8
	ChatErrorEvent_MALFORMED_CONTENT  ChatErrorEvent_Error = 9
	ChatErrorEvent_NO_EXCHANGE        ChatErrorEvent_Error = 10
)

// Enum value maps for ChatErrorEvent_Error.
var (
	ChatErrorEvent_Error_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "RECEIVER_NOT_FOUND",
		2:  "INTERIOR_MONOLOGUE",
		3:  "NO_GUILD",
		4:  "NO_PARTY",
		5:  "ALLIANCE",
		6:  "INVALID_MAP",
		7:  "NO_PARTY_ARENA",
		8:  "NO_TEAM",
		9:  "MALFORMED_CONTENT",
		10: "NO_EXCHANGE",
	}
	ChatErrorEvent_Error_value = map[string]int32{
		"UNKNOWN":            0,
		"RECEIVER_NOT_FOUND": 1,
		"INTERIOR_MONOLOGUE": 2,
		"NO_GUILD":           3,
		"NO_PARTY":           4,
		"ALLIANCE":           5,
		"INVALID_MAP":        6,
		"NO_PARTY_ARENA":     7,
		"NO_TEAM":            8,
		"MALFORMED_CONTENT":  9,
		"NO_EXCHANGE":        10,
	}
)

func (x ChatErrorEvent_Error) Enum() *ChatErrorEvent_Error {
	p := new(ChatErrorEvent_Error)
	*p = x
	return p
}

func (x ChatErrorEvent_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatErrorEvent_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_chat_proto_enumTypes[1].Descriptor()
}

func (ChatErrorEvent_Error) Type() protoreflect.EnumType {
	return &file_proto_game_chat_proto_enumTypes[1]
}

func (x ChatErrorEvent_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatErrorEvent_Error.Descriptor instead.
func (ChatErrorEvent_Error) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{4, 0}
}

type ChatPrivateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string                        `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Object  []*common.ObjectItemInventory `protobuf:"bytes,2,rep,name=object,proto3" json:"object,omitempty"`
	// Types that are assignable to Target:
	//
	//	*ChatPrivateMessageRequest_Name
	//	*ChatPrivateMessageRequest_Tag
	Target isChatPrivateMessageRequest_Target `protobuf_oneof:"target"`
}

func (x *ChatPrivateMessageRequest) Reset() {
	*x = ChatPrivateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPrivateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPrivateMessageRequest) ProtoMessage() {}

func (x *ChatPrivateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPrivateMessageRequest.ProtoReflect.Descriptor instead.
func (*ChatPrivateMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatPrivateMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatPrivateMessageRequest) GetObject() []*common.ObjectItemInventory {
	if x != nil {
		return x.Object
	}
	return nil
}

func (m *ChatPrivateMessageRequest) GetTarget() isChatPrivateMessageRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *ChatPrivateMessageRequest) GetName() string {
	if x, ok := x.GetTarget().(*ChatPrivateMessageRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ChatPrivateMessageRequest) GetTag() *common.AccountTag {
	if x, ok := x.GetTarget().(*ChatPrivateMessageRequest_Tag); ok {
		return x.Tag
	}
	return nil
}

type isChatPrivateMessageRequest_Target interface {
	isChatPrivateMessageRequest_Target()
}

type ChatPrivateMessageRequest_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type ChatPrivateMessageRequest_Tag struct {
	Tag *common.AccountTag `protobuf:"bytes,4,opt,name=tag,proto3,oneof"`
}

func (*ChatPrivateMessageRequest_Name) isChatPrivateMessageRequest_Target() {}

func (*ChatPrivateMessageRequest_Tag) isChatPrivateMessageRequest_Target() {}

type ChatPrivateCopyMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content           string                        `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Date              string                        `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	TargetCharacterId int64                         `protobuf:"varint,3,opt,name=target_character_id,json=targetCharacterId,proto3" json:"target_character_id,omitempty"`
	TargetName        string                        `protobuf:"bytes,4,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	Object            []*common.ObjectItemInventory `protobuf:"bytes,5,rep,name=object,proto3" json:"object,omitempty"`
}

func (x *ChatPrivateCopyMessageEvent) Reset() {
	*x = ChatPrivateCopyMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPrivateCopyMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPrivateCopyMessageEvent) ProtoMessage() {}

func (x *ChatPrivateCopyMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPrivateCopyMessageEvent.ProtoReflect.Descriptor instead.
func (*ChatPrivateCopyMessageEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatPrivateCopyMessageEvent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatPrivateCopyMessageEvent) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ChatPrivateCopyMessageEvent) GetTargetCharacterId() int64 {
	if x != nil {
		return x.TargetCharacterId
	}
	return 0
}

func (x *ChatPrivateCopyMessageEvent) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *ChatPrivateCopyMessageEvent) GetObject() []*common.ObjectItemInventory {
	if x != nil {
		return x.Object
	}
	return nil
}

type ChatChannelMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string                        `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Channel Channel                       `protobuf:"varint,2,opt,name=channel,proto3,enum=com.ankama.dofus.server.game.protocol.chat.Channel" json:"channel,omitempty"`
	Object  []*common.ObjectItemInventory `protobuf:"bytes,3,rep,name=object,proto3" json:"object,omitempty"`
}

func (x *ChatChannelMessageRequest) Reset() {
	*x = ChatChannelMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannelMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannelMessageRequest) ProtoMessage() {}

func (x *ChatChannelMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannelMessageRequest.ProtoReflect.Descriptor instead.
func (*ChatChannelMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatChannelMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatChannelMessageRequest) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_GLOBAL
}

func (x *ChatChannelMessageRequest) GetObject() []*common.ObjectItemInventory {
	if x != nil {
		return x.Object
	}
	return nil
}

type ChatChannelMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content           string                        `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Channel           Channel                       `protobuf:"varint,2,opt,name=channel,proto3,enum=com.ankama.dofus.server.game.protocol.chat.Channel" json:"channel,omitempty"`
	Date              string                        `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	SenderCharacterId int64                         `protobuf:"varint,4,opt,name=sender_character_id,json=senderCharacterId,proto3" json:"sender_character_id,omitempty"`
	SenderAccountId   int64                         `protobuf:"varint,5,opt,name=sender_account_id,json=senderAccountId,proto3" json:"sender_account_id,omitempty"`
	SenderPrefix      string                        `protobuf:"bytes,6,opt,name=sender_prefix,json=senderPrefix,proto3" json:"sender_prefix,omitempty"`
	SenderName        string                        `protobuf:"bytes,7,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	FromAdmin         bool                          `protobuf:"varint,8,opt,name=from_admin,json=fromAdmin,proto3" json:"from_admin,omitempty"`
	Object            []*common.ObjectItemInventory `protobuf:"bytes,9,rep,name=object,proto3" json:"object,omitempty"`
	OriginServerId    *int32                        `protobuf:"varint,10,opt,name=origin_server_id,json=originServerId,proto3,oneof" json:"origin_server_id,omitempty"`
}

func (x *ChatChannelMessageEvent) Reset() {
	*x = ChatChannelMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannelMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannelMessageEvent) ProtoMessage() {}

func (x *ChatChannelMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannelMessageEvent.ProtoReflect.Descriptor instead.
func (*ChatChannelMessageEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ChatChannelMessageEvent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatChannelMessageEvent) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_GLOBAL
}

func (x *ChatChannelMessageEvent) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ChatChannelMessageEvent) GetSenderCharacterId() int64 {
	if x != nil {
		return x.SenderCharacterId
	}
	return 0
}

func (x *ChatChannelMessageEvent) GetSenderAccountId() int64 {
	if x != nil {
		return x.SenderAccountId
	}
	return 0
}

func (x *ChatChannelMessageEvent) GetSenderPrefix() string {
	if x != nil {
		return x.SenderPrefix
	}
	return ""
}

func (x *ChatChannelMessageEvent) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ChatChannelMessageEvent) GetFromAdmin() bool {
	if x != nil {
		return x.FromAdmin
	}
	return false
}

func (x *ChatChannelMessageEvent) GetObject() []*common.ObjectItemInventory {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *ChatChannelMessageEvent) GetOriginServerId() int32 {
	if x != nil && x.OriginServerId != nil {
		return *x.OriginServerId
	}
	return 0
}

type ChatErrorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error ChatErrorEvent_Error `protobuf:"varint,1,opt,name=error,proto3,enum=com.ankama.dofus.server.game.protocol.chat.ChatErrorEvent_Error" json:"error,omitempty"`
}

func (x *ChatErrorEvent) Reset() {
	*x = ChatErrorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatErrorEvent) ProtoMessage() {}

func (x *ChatErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatErrorEvent.ProtoReflect.Descriptor instead.
func (*ChatErrorEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ChatErrorEvent) GetError() ChatErrorEvent_Error {
	if x != nil {
		return x.Error
	}
	return ChatErrorEvent_UNKNOWN
}

type SubscribeChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=com.ankama.dofus.server.game.protocol.chat.Channel" json:"channel,omitempty"`
	Enable  bool    `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *SubscribeChannelRequest) Reset() {
	*x = SubscribeChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeChannelRequest) ProtoMessage() {}

func (x *SubscribeChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeChannelRequest.ProtoReflect.Descriptor instead.
func (*SubscribeChannelRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeChannelRequest) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_GLOBAL
}

func (x *SubscribeChannelRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type ChannelUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=com.ankama.dofus.server.game.protocol.chat.Channel" json:"channel,omitempty"`
	Enable  bool    `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ChannelUpdateEvent) Reset() {
	*x = ChannelUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdateEvent) ProtoMessage() {}

func (x *ChannelUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdateEvent.ProtoReflect.Descriptor instead.
func (*ChannelUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ChannelUpdateEvent) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_GLOBAL
}

func (x *ChannelUpdateEvent) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type ChatChannelsEnabledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveChannels   []Channel `protobuf:"varint,1,rep,packed,name=active_channels,json=activeChannels,proto3,enum=com.ankama.dofus.server.game.protocol.chat.Channel" json:"active_channels,omitempty"`
	DisabledChannels []Channel `protobuf:"varint,2,rep,packed,name=disabled_channels,json=disabledChannels,proto3,enum=com.ankama.dofus.server.game.protocol.chat.Channel" json:"disabled_channels,omitempty"`
}

func (x *ChatChannelsEnabledEvent) Reset() {
	*x = ChatChannelsEnabledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannelsEnabledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannelsEnabledEvent) ProtoMessage() {}

func (x *ChatChannelsEnabledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannelsEnabledEvent.ProtoReflect.Descriptor instead.
func (*ChatChannelsEnabledEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_chat_proto_rawDescGZIP(), []int{7}
}

func (x *ChatChannelsEnabledEvent) GetActiveChannels() []Channel {
	if x != nil {
		return x.ActiveChannels
	}
	return nil
}

func (x *ChatChannelsEnabledEvent) GetDisabledChannels() []Channel {
	if x != nil {
		return x.DisabledChannels
	}
	return nil
}

var File_proto_game_chat_proto protoreflect.FileDescriptor

var file_proto_game_chat_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xfe, 0x01, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x48, 0x00, 0x52, 0x03, 0x74, 0x61, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x70, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x59, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xdf, 0x01, 0x0a,
	0x19, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x59, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xf6,
	0x03, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x59, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x43,
	0x45, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x49, 0x4f, 0x52, 0x5f, 0x4d, 0x4f,
	0x4e, 0x4f, 0x4c, 0x4f, 0x47, 0x55, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f,
	0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x50, 0x41,
	0x52, 0x54, 0x59, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4c, 0x4c, 0x49, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d,
	0x41, 0x50, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59,
	0x5f, 0x41, 0x52, 0x45, 0x4e, 0x41, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x54,
	0x45, 0x41, 0x4d, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d,
	0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b,
	0x4e, 0x4f, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0a, 0x22, 0x80, 0x01,
	0x0a, 0x17, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x22, 0x7b, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xda, 0x01,
	0x0a, 0x18, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x0f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x60, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2a, 0xc0, 0x01, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4c, 0x4c, 0x49, 0x41,
	0x4e, 0x43, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x45, 0x45, 0x4b, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4f, 0x42, 0x10, 0x07, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52,
	0x45, 0x4e, 0x41, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09,
	0x46, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x44, 0x53, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x0f, 0x12,
	0x0c, 0x0a, 0x08, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x10, 0x42, 0x38, 0x5a,
	0x36, 0x67, 0x6f, 0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_chat_proto_rawDescOnce sync.Once
	file_proto_game_chat_proto_rawDescData = file_proto_game_chat_proto_rawDesc
)

func file_proto_game_chat_proto_rawDescGZIP() []byte {
	file_proto_game_chat_proto_rawDescOnce.Do(func() {
		file_proto_game_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_chat_proto_rawDescData)
	})
	return file_proto_game_chat_proto_rawDescData
}

var file_proto_game_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_game_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_game_chat_proto_goTypes = []any{
	(Channel)(0),                        // 0: com.ankama.dofus.server.game.protocol.chat.Channel
	(ChatErrorEvent_Error)(0),           // 1: com.ankama.dofus.server.game.protocol.chat.ChatErrorEvent.Error
	(*ChatPrivateMessageRequest)(nil),   // 2: com.ankama.dofus.server.game.protocol.chat.ChatPrivateMessageRequest
	(*ChatPrivateCopyMessageEvent)(nil), // 3: com.ankama.dofus.server.game.protocol.chat.ChatPrivateCopyMessageEvent
	(*ChatChannelMessageRequest)(nil),   // 4: com.ankama.dofus.server.game.protocol.chat.ChatChannelMessageRequest
	(*ChatChannelMessageEvent)(nil),     // 5: com.ankama.dofus.server.game.protocol.chat.ChatChannelMessageEvent
	(*ChatErrorEvent)(nil),              // 6: com.ankama.dofus.server.game.protocol.chat.ChatErrorEvent
	(*SubscribeChannelRequest)(nil),     // 7: com.ankama.dofus.server.game.protocol.chat.SubscribeChannelRequest
	(*ChannelUpdateEvent)(nil),          // 8: com.ankama.dofus.server.game.protocol.chat.ChannelUpdateEvent
	(*ChatChannelsEnabledEvent)(nil),    // 9: com.ankama.dofus.server.game.protocol.chat.ChatChannelsEnabledEvent
	(*common.ObjectItemInventory)(nil),  // 10: com.ankama.dofus.server.game.protocol.common.ObjectItemInventory
	(*common.AccountTag)(nil),           // 11: com.ankama.dofus.server.game.protocol.common.AccountTag
}
var file_proto_game_chat_proto_depIdxs = []int32{
	10, // 0: com.ankama.dofus.server.game.protocol.chat.ChatPrivateMessageRequest.object:type_name -> com.ankama.dofus.server.game.protocol.common.ObjectItemInventory
	11, // 1: com.ankama.dofus.server.game.protocol.chat.ChatPrivateMessageRequest.tag:type_name -> com.ankama.dofus.server.game.protocol.common.AccountTag
	10, // 2: com.ankama.dofus.server.game.protocol.chat.ChatPrivateCopyMessageEvent.object:type_name -> com.ankama.dofus.server.game.protocol.common.ObjectItemInventory
	0,  // 3: com.ankama.dofus.server.game.protocol.chat.ChatChannelMessageRequest.channel:type_name -> com.ankama.dofus.server.game.protocol.chat.Channel
	10, // 4: com.ankama.dofus.server.game.protocol.chat.ChatChannelMessageRequest.object:type_name -> com.ankama.dofus.server.game.protocol.common.ObjectItemInventory
	0,  // 5: com.ankama.dofus.server.game.protocol.chat.ChatChannelMessageEvent.channel:type_name -> com.ankama.dofus.server.game.protocol.chat.Channel
	10, // 6: com.ankama.dofus.server.game.protocol.chat.ChatChannelMessageEvent.object:type_name -> com.ankama.dofus.server.game.protocol.common.ObjectItemInventory
	1,  // 7: com.ankama.dofus.server.game.protocol.chat.ChatErrorEvent.error:type_name -> com.ankama.dofus.server.game.protocol.chat.ChatErrorEvent.Error
	0,  // 8: com.ankama.dofus.server.game.protocol.chat.SubscribeChannelRequest.channel:type_name -> com.ankama.dofus.server.game.protocol.chat.Channel
	0,  // 9: com.ankama.dofus.server.game.protocol.chat.ChannelUpdateEvent.channel:type_name -> com.ankama.dofus.server.game.protocol.chat.Channel
	0,  // 10: com.ankama.dofus.server.game.protocol.chat.ChatChannelsEnabledEvent.active_channels:type_name -> com.ankama.dofus.server.game.protocol.chat.Channel
	0,  // 11: com.ankama.dofus.server.game.protocol.chat.ChatChannelsEnabledEvent.disabled_channels:type_name -> com.ankama.dofus.server.game.protocol.chat.Channel
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_game_chat_proto_init() }
func file_proto_game_chat_proto_init() {
	if File_proto_game_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_chat_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChatPrivateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_chat_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ChatPrivateCopyMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_chat_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ChatChannelMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_chat_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ChatChannelMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_chat_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ChatErrorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_chat_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SubscribeChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_chat_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ChannelUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_chat_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ChatChannelsEnabledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_chat_proto_msgTypes[0].OneofWrappers = []any{
		(*ChatPrivateMessageRequest_Name)(nil),
		(*ChatPrivateMessageRequest_Tag)(nil),
	}
	file_proto_game_chat_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_chat_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_chat_proto_goTypes,
		DependencyIndexes: file_proto_game_chat_proto_depIdxs,
		EnumInfos:         file_proto_game_chat_proto_enumTypes,
		MessageInfos:      file_proto_game_chat_proto_msgTypes,
	}.Build()
	File_proto_game_chat_proto = out.File
	file_proto_game_chat_proto_rawDesc = nil
	file_proto_game_chat_proto_goTypes = nil
	file_proto_game_chat_proto_depIdxs = nil
}
