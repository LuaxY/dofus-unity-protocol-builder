// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/spell.proto

package spell

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForgettableSpellActionRequest_ForgettableSpellAction int32

const (
	ForgettableSpellActionRequest_FORGET ForgettableSpellActionRequest_ForgettableSpellAction = 0
	ForgettableSpellActionRequest_EQUIP  ForgettableSpellActionRequest_ForgettableSpellAction = 1
	ForgettableSpellActionRequest_REMOVE ForgettableSpellActionRequest_ForgettableSpellAction = 2
)

// Enum value maps for ForgettableSpellActionRequest_ForgettableSpellAction.
var (
	ForgettableSpellActionRequest_ForgettableSpellAction_name = map[int32]string{
		0: "FORGET",
		1: "EQUIP",
		2: "REMOVE",
	}
	ForgettableSpellActionRequest_ForgettableSpellAction_value = map[string]int32{
		"FORGET": 0,
		"EQUIP":  1,
		"REMOVE": 2,
	}
)

func (x ForgettableSpellActionRequest_ForgettableSpellAction) Enum() *ForgettableSpellActionRequest_ForgettableSpellAction {
	p := new(ForgettableSpellActionRequest_ForgettableSpellAction)
	*p = x
	return p
}

func (x ForgettableSpellActionRequest_ForgettableSpellAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgettableSpellActionRequest_ForgettableSpellAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_spell_proto_enumTypes[0].Descriptor()
}

func (ForgettableSpellActionRequest_ForgettableSpellAction) Type() protoreflect.EnumType {
	return &file_proto_game_spell_proto_enumTypes[0]
}

func (x ForgettableSpellActionRequest_ForgettableSpellAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgettableSpellActionRequest_ForgettableSpellAction.Descriptor instead.
func (ForgettableSpellActionRequest_ForgettableSpellAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{1, 0}
}

type ForgettableSpellDeletionEvent_DeletionReason int32

const (
	ForgettableSpellDeletionEvent_UNKNOWN               ForgettableSpellDeletionEvent_DeletionReason = 0
	ForgettableSpellDeletionEvent_ADMIN_COMMAND_REQUEST ForgettableSpellDeletionEvent_DeletionReason = 1
	ForgettableSpellDeletionEvent_FORGOTTEN             ForgettableSpellDeletionEvent_DeletionReason = 2
	ForgettableSpellDeletionEvent_DISABLED              ForgettableSpellDeletionEvent_DeletionReason = 3
	ForgettableSpellDeletionEvent_NOT_FOUND             ForgettableSpellDeletionEvent_DeletionReason = 4
)

// Enum value maps for ForgettableSpellDeletionEvent_DeletionReason.
var (
	ForgettableSpellDeletionEvent_DeletionReason_name = map[int32]string{
		0: "UNKNOWN",
		1: "ADMIN_COMMAND_REQUEST",
		2: "FORGOTTEN",
		3: "DISABLED",
		4: "NOT_FOUND",
	}
	ForgettableSpellDeletionEvent_DeletionReason_value = map[string]int32{
		"UNKNOWN":               0,
		"ADMIN_COMMAND_REQUEST": 1,
		"FORGOTTEN":             2,
		"DISABLED":              3,
		"NOT_FOUND":             4,
	}
)

func (x ForgettableSpellDeletionEvent_DeletionReason) Enum() *ForgettableSpellDeletionEvent_DeletionReason {
	p := new(ForgettableSpellDeletionEvent_DeletionReason)
	*p = x
	return p
}

func (x ForgettableSpellDeletionEvent_DeletionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgettableSpellDeletionEvent_DeletionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_spell_proto_enumTypes[1].Descriptor()
}

func (ForgettableSpellDeletionEvent_DeletionReason) Type() protoreflect.EnumType {
	return &file_proto_game_spell_proto_enumTypes[1]
}

func (x ForgettableSpellDeletionEvent_DeletionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgettableSpellDeletionEvent_DeletionReason.Descriptor instead.
func (ForgettableSpellDeletionEvent_DeletionReason) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{6, 0}
}

type ForgettableSpellsEvent_Action int32

const (
	ForgettableSpellsEvent_DISPATCH ForgettableSpellsEvent_Action = 0
	ForgettableSpellsEvent_UPDATE   ForgettableSpellsEvent_Action = 1
)

// Enum value maps for ForgettableSpellsEvent_Action.
var (
	ForgettableSpellsEvent_Action_name = map[int32]string{
		0: "DISPATCH",
		1: "UPDATE",
	}
	ForgettableSpellsEvent_Action_value = map[string]int32{
		"DISPATCH": 0,
		"UPDATE":   1,
	}
)

func (x ForgettableSpellsEvent_Action) Enum() *ForgettableSpellsEvent_Action {
	p := new(ForgettableSpellsEvent_Action)
	*p = x
	return p
}

func (x ForgettableSpellsEvent_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgettableSpellsEvent_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_spell_proto_enumTypes[2].Descriptor()
}

func (ForgettableSpellsEvent_Action) Type() protoreflect.EnumType {
	return &file_proto_game_spell_proto_enumTypes[2]
}

func (x ForgettableSpellsEvent_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgettableSpellsEvent_Action.Descriptor instead.
func (ForgettableSpellsEvent_Action) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{7, 0}
}

type SpellVariantActivationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId int32 `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
}

func (x *SpellVariantActivationRequest) Reset() {
	*x = SpellVariantActivationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellVariantActivationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellVariantActivationRequest) ProtoMessage() {}

func (x *SpellVariantActivationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellVariantActivationRequest.ProtoReflect.Descriptor instead.
func (*SpellVariantActivationRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{0}
}

func (x *SpellVariantActivationRequest) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

type ForgettableSpellActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId int32                                                `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Action  ForgettableSpellActionRequest_ForgettableSpellAction `protobuf:"varint,2,opt,name=action,proto3,enum=com.ankama.dofus.server.game.protocol.spell.ForgettableSpellActionRequest_ForgettableSpellAction" json:"action,omitempty"`
}

func (x *ForgettableSpellActionRequest) Reset() {
	*x = ForgettableSpellActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellActionRequest) ProtoMessage() {}

func (x *ForgettableSpellActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellActionRequest.ProtoReflect.Descriptor instead.
func (*ForgettableSpellActionRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{1}
}

func (x *ForgettableSpellActionRequest) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *ForgettableSpellActionRequest) GetAction() ForgettableSpellActionRequest_ForgettableSpellAction {
	if x != nil {
		return x.Action
	}
	return ForgettableSpellActionRequest_FORGET
}

type ApplySpellModifierEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId  int64                 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Modifier *common.SpellModifier `protobuf:"bytes,2,opt,name=modifier,proto3" json:"modifier,omitempty"`
}

func (x *ApplySpellModifierEvent) Reset() {
	*x = ApplySpellModifierEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplySpellModifierEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplySpellModifierEvent) ProtoMessage() {}

func (x *ApplySpellModifierEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplySpellModifierEvent.ProtoReflect.Descriptor instead.
func (*ApplySpellModifierEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{2}
}

func (x *ApplySpellModifierEvent) GetActorId() int64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *ApplySpellModifierEvent) GetModifier() *common.SpellModifier {
	if x != nil {
		return x.Modifier
	}
	return nil
}

type RemoveSpellModifierEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId      int64                          `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActionType   common.SpellModifierActionType `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3,enum=com.ankama.dofus.server.game.protocol.common.SpellModifierActionType" json:"action_type,omitempty"`
	ModifierType common.SpellModifierType       `protobuf:"varint,3,opt,name=modifier_type,json=modifierType,proto3,enum=com.ankama.dofus.server.game.protocol.common.SpellModifierType" json:"modifier_type,omitempty"`
	SpellId      int32                          `protobuf:"varint,4,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
}

func (x *RemoveSpellModifierEvent) Reset() {
	*x = RemoveSpellModifierEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSpellModifierEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSpellModifierEvent) ProtoMessage() {}

func (x *RemoveSpellModifierEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSpellModifierEvent.ProtoReflect.Descriptor instead.
func (*RemoveSpellModifierEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveSpellModifierEvent) GetActorId() int64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *RemoveSpellModifierEvent) GetActionType() common.SpellModifierActionType {
	if x != nil {
		return x.ActionType
	}
	return common.SpellModifierActionType(0)
}

func (x *RemoveSpellModifierEvent) GetModifierType() common.SpellModifierType {
	if x != nil {
		return x.ModifierType
	}
	return common.SpellModifierType(0)
}

func (x *RemoveSpellModifierEvent) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

type SpellVariantActivationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId   int32 `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Effective bool  `protobuf:"varint,2,opt,name=effective,proto3" json:"effective,omitempty"`
}

func (x *SpellVariantActivationEvent) Reset() {
	*x = SpellVariantActivationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellVariantActivationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellVariantActivationEvent) ProtoMessage() {}

func (x *SpellVariantActivationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellVariantActivationEvent.ProtoReflect.Descriptor instead.
func (*SpellVariantActivationEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{4}
}

func (x *SpellVariantActivationEvent) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *SpellVariantActivationEvent) GetEffective() bool {
	if x != nil {
		return x.Effective
	}
	return false
}

type ForgettableSpellEquipmentSlotsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int32 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ForgettableSpellEquipmentSlotsEvent) Reset() {
	*x = ForgettableSpellEquipmentSlotsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellEquipmentSlotsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellEquipmentSlotsEvent) ProtoMessage() {}

func (x *ForgettableSpellEquipmentSlotsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellEquipmentSlotsEvent.ProtoReflect.Descriptor instead.
func (*ForgettableSpellEquipmentSlotsEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{5}
}

func (x *ForgettableSpellEquipmentSlotsEvent) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ForgettableSpellDeletionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason ForgettableSpellDeletionEvent_DeletionReason `protobuf:"varint,1,opt,name=reason,proto3,enum=com.ankama.dofus.server.game.protocol.spell.ForgettableSpellDeletionEvent_DeletionReason" json:"reason,omitempty"`
	Spells []int32                                      `protobuf:"varint,2,rep,packed,name=spells,proto3" json:"spells,omitempty"`
}

func (x *ForgettableSpellDeletionEvent) Reset() {
	*x = ForgettableSpellDeletionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellDeletionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellDeletionEvent) ProtoMessage() {}

func (x *ForgettableSpellDeletionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellDeletionEvent.ProtoReflect.Descriptor instead.
func (*ForgettableSpellDeletionEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{6}
}

func (x *ForgettableSpellDeletionEvent) GetReason() ForgettableSpellDeletionEvent_DeletionReason {
	if x != nil {
		return x.Reason
	}
	return ForgettableSpellDeletionEvent_UNKNOWN
}

func (x *ForgettableSpellDeletionEvent) GetSpells() []int32 {
	if x != nil {
		return x.Spells
	}
	return nil
}

type ForgettableSpellsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action ForgettableSpellsEvent_Action `protobuf:"varint,1,opt,name=action,proto3,enum=com.ankama.dofus.server.game.protocol.spell.ForgettableSpellsEvent_Action" json:"action,omitempty"`
	Spells []*SpellItem                  `protobuf:"bytes,2,rep,name=spells,proto3" json:"spells,omitempty"`
}

func (x *ForgettableSpellsEvent) Reset() {
	*x = ForgettableSpellsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellsEvent) ProtoMessage() {}

func (x *ForgettableSpellsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellsEvent.ProtoReflect.Descriptor instead.
func (*ForgettableSpellsEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{7}
}

func (x *ForgettableSpellsEvent) GetAction() ForgettableSpellsEvent_Action {
	if x != nil {
		return x.Action
	}
	return ForgettableSpellsEvent_DISPATCH
}

func (x *ForgettableSpellsEvent) GetSpells() []*SpellItem {
	if x != nil {
		return x.Spells
	}
	return nil
}

type SpellsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellVisualisation bool         `protobuf:"varint,1,opt,name=spell_visualisation,json=spellVisualisation,proto3" json:"spell_visualisation,omitempty"`
	HumanSpells        []*SpellItem `protobuf:"bytes,2,rep,name=human_spells,json=humanSpells,proto3" json:"human_spells,omitempty"`
	MutantSpells       []*SpellItem `protobuf:"bytes,3,rep,name=mutant_spells,json=mutantSpells,proto3" json:"mutant_spells,omitempty"`
}

func (x *SpellsEvent) Reset() {
	*x = SpellsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellsEvent) ProtoMessage() {}

func (x *SpellsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellsEvent.ProtoReflect.Descriptor instead.
func (*SpellsEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{8}
}

func (x *SpellsEvent) GetSpellVisualisation() bool {
	if x != nil {
		return x.SpellVisualisation
	}
	return false
}

func (x *SpellsEvent) GetHumanSpells() []*SpellItem {
	if x != nil {
		return x.HumanSpells
	}
	return nil
}

func (x *SpellsEvent) GetMutantSpells() []*SpellItem {
	if x != nil {
		return x.MutantSpells
	}
	return nil
}

type SpellItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId    int32 `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	SpellLevel int32 `protobuf:"varint,2,opt,name=spell_level,json=spellLevel,proto3" json:"spell_level,omitempty"`
	Available  *bool `protobuf:"varint,3,opt,name=available,proto3,oneof" json:"available,omitempty"`
}

func (x *SpellItem) Reset() {
	*x = SpellItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_spell_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellItem) ProtoMessage() {}

func (x *SpellItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_spell_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellItem.ProtoReflect.Descriptor instead.
func (*SpellItem) Descriptor() ([]byte, []int) {
	return file_proto_game_spell_proto_rawDescGZIP(), []int{9}
}

func (x *SpellItem) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *SpellItem) GetSpellLevel() int32 {
	if x != nil {
		return x.SpellLevel
	}
	return 0
}

func (x *SpellItem) GetAvailable() bool {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return false
}

var File_proto_game_spell_proto protoreflect.FileDescriptor

var file_proto_game_spell_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x1d, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x22,
	0xf2, 0x01, 0x0a, 0x1d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x79, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x51, 0x55, 0x49, 0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x10, 0x02, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x70,
	0x65, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x9e, 0x02, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x64, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x41, 0x0a,
	0x23, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x90, 0x02, 0x0a, 0x1d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x71, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x59, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x64, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x4f, 0x52, 0x47, 0x4f,
	0x54, 0x54, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x04, 0x22, 0xf0, 0x01, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x62,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x2e, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6c,
	0x6c, 0x73, 0x22, 0x22, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x22, 0xf6, 0x01, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c,
	0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x0c, 0x68, 0x75, 0x6d, 0x61, 0x6e,
	0x5f, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x2e, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x6d, 0x75, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0c, 0x6d, 0x75, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x22,
	0x78, 0x0a, 0x09, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x6f, 0x2d,
	0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x73,
	0x70, 0x65, 0x6c, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_spell_proto_rawDescOnce sync.Once
	file_proto_game_spell_proto_rawDescData = file_proto_game_spell_proto_rawDesc
)

func file_proto_game_spell_proto_rawDescGZIP() []byte {
	file_proto_game_spell_proto_rawDescOnce.Do(func() {
		file_proto_game_spell_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_spell_proto_rawDescData)
	})
	return file_proto_game_spell_proto_rawDescData
}

var file_proto_game_spell_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_game_spell_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_game_spell_proto_goTypes = []any{
	(ForgettableSpellActionRequest_ForgettableSpellAction)(0), // 0: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellActionRequest.ForgettableSpellAction
	(ForgettableSpellDeletionEvent_DeletionReason)(0),         // 1: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellDeletionEvent.DeletionReason
	(ForgettableSpellsEvent_Action)(0),                        // 2: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellsEvent.Action
	(*SpellVariantActivationRequest)(nil),                     // 3: com.ankama.dofus.server.game.protocol.spell.SpellVariantActivationRequest
	(*ForgettableSpellActionRequest)(nil),                     // 4: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellActionRequest
	(*ApplySpellModifierEvent)(nil),                           // 5: com.ankama.dofus.server.game.protocol.spell.ApplySpellModifierEvent
	(*RemoveSpellModifierEvent)(nil),                          // 6: com.ankama.dofus.server.game.protocol.spell.RemoveSpellModifierEvent
	(*SpellVariantActivationEvent)(nil),                       // 7: com.ankama.dofus.server.game.protocol.spell.SpellVariantActivationEvent
	(*ForgettableSpellEquipmentSlotsEvent)(nil),               // 8: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellEquipmentSlotsEvent
	(*ForgettableSpellDeletionEvent)(nil),                     // 9: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellDeletionEvent
	(*ForgettableSpellsEvent)(nil),                            // 10: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellsEvent
	(*SpellsEvent)(nil),                                       // 11: com.ankama.dofus.server.game.protocol.spell.SpellsEvent
	(*SpellItem)(nil),                                         // 12: com.ankama.dofus.server.game.protocol.spell.SpellItem
	(*common.SpellModifier)(nil),                              // 13: com.ankama.dofus.server.game.protocol.common.SpellModifier
	(common.SpellModifierActionType)(0),                       // 14: com.ankama.dofus.server.game.protocol.common.SpellModifierActionType
	(common.SpellModifierType)(0),                             // 15: com.ankama.dofus.server.game.protocol.common.SpellModifierType
}
var file_proto_game_spell_proto_depIdxs = []int32{
	0,  // 0: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellActionRequest.action:type_name -> com.ankama.dofus.server.game.protocol.spell.ForgettableSpellActionRequest.ForgettableSpellAction
	13, // 1: com.ankama.dofus.server.game.protocol.spell.ApplySpellModifierEvent.modifier:type_name -> com.ankama.dofus.server.game.protocol.common.SpellModifier
	14, // 2: com.ankama.dofus.server.game.protocol.spell.RemoveSpellModifierEvent.action_type:type_name -> com.ankama.dofus.server.game.protocol.common.SpellModifierActionType
	15, // 3: com.ankama.dofus.server.game.protocol.spell.RemoveSpellModifierEvent.modifier_type:type_name -> com.ankama.dofus.server.game.protocol.common.SpellModifierType
	1,  // 4: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellDeletionEvent.reason:type_name -> com.ankama.dofus.server.game.protocol.spell.ForgettableSpellDeletionEvent.DeletionReason
	2,  // 5: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellsEvent.action:type_name -> com.ankama.dofus.server.game.protocol.spell.ForgettableSpellsEvent.Action
	12, // 6: com.ankama.dofus.server.game.protocol.spell.ForgettableSpellsEvent.spells:type_name -> com.ankama.dofus.server.game.protocol.spell.SpellItem
	12, // 7: com.ankama.dofus.server.game.protocol.spell.SpellsEvent.human_spells:type_name -> com.ankama.dofus.server.game.protocol.spell.SpellItem
	12, // 8: com.ankama.dofus.server.game.protocol.spell.SpellsEvent.mutant_spells:type_name -> com.ankama.dofus.server.game.protocol.spell.SpellItem
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_game_spell_proto_init() }
func file_proto_game_spell_proto_init() {
	if File_proto_game_spell_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_spell_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SpellVariantActivationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ApplySpellModifierEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveSpellModifierEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SpellVariantActivationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellEquipmentSlotsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellDeletionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SpellsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_spell_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SpellItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_spell_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_spell_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_spell_proto_goTypes,
		DependencyIndexes: file_proto_game_spell_proto_depIdxs,
		EnumInfos:         file_proto_game_spell_proto_enumTypes,
		MessageInfos:      file_proto_game_spell_proto_msgTypes,
	}.Build()
	File_proto_game_spell_proto = out.File
	file_proto_game_spell_proto_rawDesc = nil
	file_proto_game_spell_proto_goTypes = nil
	file_proto_game_spell_proto_depIdxs = nil
}
