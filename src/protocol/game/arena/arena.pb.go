// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/arena.proto

package arena

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArenaType int32

const (
	ArenaType_ONE_VS_ONE     ArenaType = 0
	ArenaType_TWO_VS_TWO     ArenaType = 1
	ArenaType_THREE_VS_THREE ArenaType = 2
)

// Enum value maps for ArenaType.
var (
	ArenaType_name = map[int32]string{
		0: "ONE_VS_ONE",
		1: "TWO_VS_TWO",
		2: "THREE_VS_THREE",
	}
	ArenaType_value = map[string]int32{
		"ONE_VS_ONE":     0,
		"TWO_VS_TWO":     1,
		"THREE_VS_THREE": 2,
	}
)

func (x ArenaType) Enum() *ArenaType {
	p := new(ArenaType)
	*p = x
	return p
}

func (x ArenaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArenaType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_arena_proto_enumTypes[0].Descriptor()
}

func (ArenaType) Type() protoreflect.EnumType {
	return &file_proto_game_arena_proto_enumTypes[0]
}

func (x ArenaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArenaType.Descriptor instead.
func (ArenaType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{0}
}

type ArenaRegistrationStatusEvent_Step int32

const (
	ArenaRegistrationStatusEvent_REGISTERED     ArenaRegistrationStatusEvent_Step = 0
	ArenaRegistrationStatusEvent_WAITING_FIGHT  ArenaRegistrationStatusEvent_Step = 1
	ArenaRegistrationStatusEvent_STARTING_FIGHT ArenaRegistrationStatusEvent_Step = 2
	ArenaRegistrationStatusEvent_UNREGISTERED   ArenaRegistrationStatusEvent_Step = 3
)

// Enum value maps for ArenaRegistrationStatusEvent_Step.
var (
	ArenaRegistrationStatusEvent_Step_name = map[int32]string{
		0: "REGISTERED",
		1: "WAITING_FIGHT",
		2: "STARTING_FIGHT",
		3: "UNREGISTERED",
	}
	ArenaRegistrationStatusEvent_Step_value = map[string]int32{
		"REGISTERED":     0,
		"WAITING_FIGHT":  1,
		"STARTING_FIGHT": 2,
		"UNREGISTERED":   3,
	}
)

func (x ArenaRegistrationStatusEvent_Step) Enum() *ArenaRegistrationStatusEvent_Step {
	p := new(ArenaRegistrationStatusEvent_Step)
	*p = x
	return p
}

func (x ArenaRegistrationStatusEvent_Step) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArenaRegistrationStatusEvent_Step) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_arena_proto_enumTypes[1].Descriptor()
}

func (ArenaRegistrationStatusEvent_Step) Type() protoreflect.EnumType {
	return &file_proto_game_arena_proto_enumTypes[1]
}

func (x ArenaRegistrationStatusEvent_Step) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArenaRegistrationStatusEvent_Step.Descriptor instead.
func (ArenaRegistrationStatusEvent_Step) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{4, 0}
}

type ArenaRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArenaType ArenaType `protobuf:"varint,1,opt,name=arena_type,json=arenaType,proto3,enum=com.ankama.dofus.server.game.protocol.arena.ArenaType" json:"arena_type,omitempty"`
}

func (x *ArenaRegisterRequest) Reset() {
	*x = ArenaRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaRegisterRequest) ProtoMessage() {}

func (x *ArenaRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaRegisterRequest.ProtoReflect.Descriptor instead.
func (*ArenaRegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{0}
}

func (x *ArenaRegisterRequest) GetArenaType() ArenaType {
	if x != nil {
		return x.ArenaType
	}
	return ArenaType_ONE_VS_ONE
}

type ArenaUnregisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArenaUnregisterRequest) Reset() {
	*x = ArenaUnregisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaUnregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaUnregisterRequest) ProtoMessage() {}

func (x *ArenaUnregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaUnregisterRequest.ProtoReflect.Descriptor instead.
func (*ArenaUnregisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{1}
}

type ArenaFightAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accept bool `protobuf:"varint,1,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *ArenaFightAnswerRequest) Reset() {
	*x = ArenaFightAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaFightAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaFightAnswerRequest) ProtoMessage() {}

func (x *ArenaFightAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaFightAnswerRequest.ProtoReflect.Descriptor instead.
func (*ArenaFightAnswerRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{2}
}

func (x *ArenaFightAnswerRequest) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type ArenaFightAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acknowledged bool `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
}

func (x *ArenaFightAnswerResponse) Reset() {
	*x = ArenaFightAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaFightAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaFightAnswerResponse) ProtoMessage() {}

func (x *ArenaFightAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaFightAnswerResponse.ProtoReflect.Descriptor instead.
func (*ArenaFightAnswerResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{3}
}

func (x *ArenaFightAnswerResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

type ArenaRegistrationStatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registered bool                              `protobuf:"varint,1,opt,name=registered,proto3" json:"registered,omitempty"`
	Step       ArenaRegistrationStatusEvent_Step `protobuf:"varint,2,opt,name=step,proto3,enum=com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationStatusEvent_Step" json:"step,omitempty"`
	BattleMode ArenaType                         `protobuf:"varint,3,opt,name=battle_mode,json=battleMode,proto3,enum=com.ankama.dofus.server.game.protocol.arena.ArenaType" json:"battle_mode,omitempty"`
}

func (x *ArenaRegistrationStatusEvent) Reset() {
	*x = ArenaRegistrationStatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaRegistrationStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaRegistrationStatusEvent) ProtoMessage() {}

func (x *ArenaRegistrationStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaRegistrationStatusEvent.ProtoReflect.Descriptor instead.
func (*ArenaRegistrationStatusEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{4}
}

func (x *ArenaRegistrationStatusEvent) GetRegistered() bool {
	if x != nil {
		return x.Registered
	}
	return false
}

func (x *ArenaRegistrationStatusEvent) GetStep() ArenaRegistrationStatusEvent_Step {
	if x != nil {
		return x.Step
	}
	return ArenaRegistrationStatusEvent_REGISTERED
}

func (x *ArenaRegistrationStatusEvent) GetBattleMode() ArenaType {
	if x != nil {
		return x.BattleMode
	}
	return ArenaType_ONE_VS_ONE
}

type ArenaFightPropositionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightId  int32   `protobuf:"varint,1,opt,name=fight_id,json=fightId,proto3" json:"fight_id,omitempty"`
	Allies   []int64 `protobuf:"varint,2,rep,packed,name=allies,proto3" json:"allies,omitempty"`
	Duration int32   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ArenaFightPropositionEvent) Reset() {
	*x = ArenaFightPropositionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaFightPropositionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaFightPropositionEvent) ProtoMessage() {}

func (x *ArenaFightPropositionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaFightPropositionEvent.ProtoReflect.Descriptor instead.
func (*ArenaFightPropositionEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{5}
}

func (x *ArenaFightPropositionEvent) GetFightId() int32 {
	if x != nil {
		return x.FightId
	}
	return 0
}

func (x *ArenaFightPropositionEvent) GetAllies() []int64 {
	if x != nil {
		return x.Allies
	}
	return nil
}

func (x *ArenaFightPropositionEvent) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type ArenaFighterStatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightId     int32 `protobuf:"varint,1,opt,name=fight_id,json=fightId,proto3" json:"fight_id,omitempty"`
	CharacterId int64 `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Accepted    bool  `protobuf:"varint,3,opt,name=accepted,proto3" json:"accepted,omitempty"`
}

func (x *ArenaFighterStatusEvent) Reset() {
	*x = ArenaFighterStatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaFighterStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaFighterStatusEvent) ProtoMessage() {}

func (x *ArenaFighterStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaFighterStatusEvent.ProtoReflect.Descriptor instead.
func (*ArenaFighterStatusEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{6}
}

func (x *ArenaFighterStatusEvent) GetFightId() int32 {
	if x != nil {
		return x.FightId
	}
	return 0
}

func (x *ArenaFighterStatusEvent) GetCharacterId() int64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ArenaFighterStatusEvent) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

type ArenaUpdatePlayerInformationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArenaRanks []*ArenaUpdatePlayerInformationEvent_ArenaRank `protobuf:"bytes,1,rep,name=arena_ranks,json=arenaRanks,proto3" json:"arena_ranks,omitempty"`
	BanEndDate string                                         `protobuf:"bytes,2,opt,name=ban_end_date,json=banEndDate,proto3" json:"ban_end_date,omitempty"`
}

func (x *ArenaUpdatePlayerInformationEvent) Reset() {
	*x = ArenaUpdatePlayerInformationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaUpdatePlayerInformationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaUpdatePlayerInformationEvent) ProtoMessage() {}

func (x *ArenaUpdatePlayerInformationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaUpdatePlayerInformationEvent.ProtoReflect.Descriptor instead.
func (*ArenaUpdatePlayerInformationEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{7}
}

func (x *ArenaUpdatePlayerInformationEvent) GetArenaRanks() []*ArenaUpdatePlayerInformationEvent_ArenaRank {
	if x != nil {
		return x.ArenaRanks
	}
	return nil
}

func (x *ArenaUpdatePlayerInformationEvent) GetBanEndDate() string {
	if x != nil {
		return x.BanEndDate
	}
	return ""
}

type ArenaSwitchToFightServerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Ports   []int32 `protobuf:"varint,2,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	Token   string  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ArenaSwitchToFightServerEvent) Reset() {
	*x = ArenaSwitchToFightServerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaSwitchToFightServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaSwitchToFightServerEvent) ProtoMessage() {}

func (x *ArenaSwitchToFightServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaSwitchToFightServerEvent.ProtoReflect.Descriptor instead.
func (*ArenaSwitchToFightServerEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{8}
}

func (x *ArenaSwitchToFightServerEvent) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ArenaSwitchToFightServerEvent) GetPorts() []int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ArenaSwitchToFightServerEvent) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ArenaLeagueRewardsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId        int32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	LeagueId        int32 `protobuf:"varint,2,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
	LadderPosition  int32 `protobuf:"varint,3,opt,name=ladder_position,json=ladderPosition,proto3" json:"ladder_position,omitempty"`
	EndSeasonReward bool  `protobuf:"varint,4,opt,name=end_season_reward,json=endSeasonReward,proto3" json:"end_season_reward,omitempty"`
}

func (x *ArenaLeagueRewardsEvent) Reset() {
	*x = ArenaLeagueRewardsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaLeagueRewardsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaLeagueRewardsEvent) ProtoMessage() {}

func (x *ArenaLeagueRewardsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaLeagueRewardsEvent.ProtoReflect.Descriptor instead.
func (*ArenaLeagueRewardsEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{9}
}

func (x *ArenaLeagueRewardsEvent) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *ArenaLeagueRewardsEvent) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *ArenaLeagueRewardsEvent) GetLadderPosition() int32 {
	if x != nil {
		return x.LadderPosition
	}
	return 0
}

func (x *ArenaLeagueRewardsEvent) GetEndSeasonReward() bool {
	if x != nil {
		return x.EndSeasonReward
	}
	return false
}

type ArenaPlayerBehavioursEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags       []string `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	Sanctions   []string `protobuf:"bytes,2,rep,name=sanctions,proto3" json:"sanctions,omitempty"`
	BanDuration *int32   `protobuf:"varint,3,opt,name=ban_duration,json=banDuration,proto3,oneof" json:"ban_duration,omitempty"`
}

func (x *ArenaPlayerBehavioursEvent) Reset() {
	*x = ArenaPlayerBehavioursEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaPlayerBehavioursEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaPlayerBehavioursEvent) ProtoMessage() {}

func (x *ArenaPlayerBehavioursEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaPlayerBehavioursEvent.ProtoReflect.Descriptor instead.
func (*ArenaPlayerBehavioursEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{10}
}

func (x *ArenaPlayerBehavioursEvent) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *ArenaPlayerBehavioursEvent) GetSanctions() []string {
	if x != nil {
		return x.Sanctions
	}
	return nil
}

func (x *ArenaPlayerBehavioursEvent) GetBanDuration() int32 {
	if x != nil && x.BanDuration != nil {
		return *x.BanDuration
	}
	return 0
}

type ArenaRegistrationWarningEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleMode ArenaType `protobuf:"varint,1,opt,name=battle_mode,json=battleMode,proto3,enum=com.ankama.dofus.server.game.protocol.arena.ArenaType" json:"battle_mode,omitempty"`
}

func (x *ArenaRegistrationWarningEvent) Reset() {
	*x = ArenaRegistrationWarningEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaRegistrationWarningEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaRegistrationWarningEvent) ProtoMessage() {}

func (x *ArenaRegistrationWarningEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaRegistrationWarningEvent.ProtoReflect.Descriptor instead.
func (*ArenaRegistrationWarningEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{11}
}

func (x *ArenaRegistrationWarningEvent) GetBattleMode() ArenaType {
	if x != nil {
		return x.BattleMode
	}
	return ArenaType_ONE_VS_ONE
}

type ArenaFighterIdleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArenaFighterIdleEvent) Reset() {
	*x = ArenaFighterIdleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaFighterIdleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaFighterIdleEvent) ProtoMessage() {}

func (x *ArenaFighterIdleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaFighterIdleEvent.ProtoReflect.Descriptor instead.
func (*ArenaFighterIdleEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{12}
}

type ArenaSwitchXpRewardsModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XpRewards bool `protobuf:"varint,1,opt,name=xpRewards,proto3" json:"xpRewards,omitempty"`
}

func (x *ArenaSwitchXpRewardsModeRequest) Reset() {
	*x = ArenaSwitchXpRewardsModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaSwitchXpRewardsModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaSwitchXpRewardsModeRequest) ProtoMessage() {}

func (x *ArenaSwitchXpRewardsModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaSwitchXpRewardsModeRequest.ProtoReflect.Descriptor instead.
func (*ArenaSwitchXpRewardsModeRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{13}
}

func (x *ArenaSwitchXpRewardsModeRequest) GetXpRewards() bool {
	if x != nil {
		return x.XpRewards
	}
	return false
}

type SurrenderStateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermitSurrender bool `protobuf:"varint,1,opt,name=permitSurrender,proto3" json:"permitSurrender,omitempty"`
	PermitVote      bool `protobuf:"varint,2,opt,name=permitVote,proto3" json:"permitVote,omitempty"`
}

func (x *SurrenderStateEvent) Reset() {
	*x = SurrenderStateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderStateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderStateEvent) ProtoMessage() {}

func (x *SurrenderStateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderStateEvent.ProtoReflect.Descriptor instead.
func (*SurrenderStateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{14}
}

func (x *SurrenderStateEvent) GetPermitSurrender() bool {
	if x != nil {
		return x.PermitSurrender
	}
	return false
}

func (x *SurrenderStateEvent) GetPermitVote() bool {
	if x != nil {
		return x.PermitVote
	}
	return false
}

type SurrenderInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderInfoRequest) Reset() {
	*x = SurrenderInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoRequest) ProtoMessage() {}

func (x *SurrenderInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoRequest.ProtoReflect.Descriptor instead.
func (*SurrenderInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{15}
}

type SurrenderInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurrenderResponse     *SurrenderInfoResponse_SurrenderResponse     `protobuf:"bytes,1,opt,name=surrender_response,json=surrenderResponse,proto3" json:"surrender_response,omitempty"`
	SurrenderVoteResponse *SurrenderInfoResponse_SurrenderVoteResponse `protobuf:"bytes,2,opt,name=surrender_vote_response,json=surrenderVoteResponse,proto3" json:"surrender_vote_response,omitempty"`
	HasSanction           bool                                         `protobuf:"varint,3,opt,name=has_sanction,json=hasSanction,proto3" json:"has_sanction,omitempty"`
}

func (x *SurrenderInfoResponse) Reset() {
	*x = SurrenderInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse) ProtoMessage() {}

func (x *SurrenderInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16}
}

func (x *SurrenderInfoResponse) GetSurrenderResponse() *SurrenderInfoResponse_SurrenderResponse {
	if x != nil {
		return x.SurrenderResponse
	}
	return nil
}

func (x *SurrenderInfoResponse) GetSurrenderVoteResponse() *SurrenderInfoResponse_SurrenderVoteResponse {
	if x != nil {
		return x.SurrenderVoteResponse
	}
	return nil
}

func (x *SurrenderInfoResponse) GetHasSanction() bool {
	if x != nil {
		return x.HasSanction
	}
	return false
}

type SurrenderVoteCastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote bool `protobuf:"varint,1,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *SurrenderVoteCastRequest) Reset() {
	*x = SurrenderVoteCastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderVoteCastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderVoteCastRequest) ProtoMessage() {}

func (x *SurrenderVoteCastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderVoteCastRequest.ProtoReflect.Descriptor instead.
func (*SurrenderVoteCastRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{17}
}

func (x *SurrenderVoteCastRequest) GetVote() bool {
	if x != nil {
		return x.Vote
	}
	return false
}

type SurrenderVoteStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlreadyCastedVote bool  `protobuf:"varint,1,opt,name=already_casted_vote,json=alreadyCastedVote,proto3" json:"already_casted_vote,omitempty"`
	ParticipantNumber int32 `protobuf:"varint,2,opt,name=participant_number,json=participantNumber,proto3" json:"participant_number,omitempty"`
	CastedVoteNumber  int32 `protobuf:"varint,3,opt,name=casted_vote_number,json=castedVoteNumber,proto3" json:"casted_vote_number,omitempty"`
	VoteDuration      int32 `protobuf:"varint,4,opt,name=vote_duration,json=voteDuration,proto3" json:"vote_duration,omitempty"`
}

func (x *SurrenderVoteStartEvent) Reset() {
	*x = SurrenderVoteStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderVoteStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderVoteStartEvent) ProtoMessage() {}

func (x *SurrenderVoteStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderVoteStartEvent.ProtoReflect.Descriptor instead.
func (*SurrenderVoteStartEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{18}
}

func (x *SurrenderVoteStartEvent) GetAlreadyCastedVote() bool {
	if x != nil {
		return x.AlreadyCastedVote
	}
	return false
}

func (x *SurrenderVoteStartEvent) GetParticipantNumber() int32 {
	if x != nil {
		return x.ParticipantNumber
	}
	return 0
}

func (x *SurrenderVoteStartEvent) GetCastedVoteNumber() int32 {
	if x != nil {
		return x.CastedVoteNumber
	}
	return 0
}

func (x *SurrenderVoteStartEvent) GetVoteDuration() int32 {
	if x != nil {
		return x.VoteDuration
	}
	return 0
}

type SurrenderVoteUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderVoteUpdateEvent) Reset() {
	*x = SurrenderVoteUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderVoteUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderVoteUpdateEvent) ProtoMessage() {}

func (x *SurrenderVoteUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderVoteUpdateEvent.ProtoReflect.Descriptor instead.
func (*SurrenderVoteUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{19}
}

type SurrenderVoteEndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteResult bool `protobuf:"varint,1,opt,name=voteResult,proto3" json:"voteResult,omitempty"`
}

func (x *SurrenderVoteEndEvent) Reset() {
	*x = SurrenderVoteEndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderVoteEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderVoteEndEvent) ProtoMessage() {}

func (x *SurrenderVoteEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderVoteEndEvent.ProtoReflect.Descriptor instead.
func (*SurrenderVoteEndEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{20}
}

func (x *SurrenderVoteEndEvent) GetVoteResult() bool {
	if x != nil {
		return x.VoteResult
	}
	return false
}

type OpponentSurrenderEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpponentSurrenderEvent) Reset() {
	*x = OpponentSurrenderEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpponentSurrenderEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpponentSurrenderEvent) ProtoMessage() {}

func (x *OpponentSurrenderEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpponentSurrenderEvent.ProtoReflect.Descriptor instead.
func (*OpponentSurrenderEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{21}
}

type ArenaUpdatePlayerInformationEvent_ArenaRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArenaType            ArenaType                                                  `protobuf:"varint,1,opt,name=arena_type,json=arenaType,proto3,enum=com.ankama.dofus.server.game.protocol.arena.ArenaType" json:"arena_type,omitempty"`
	LeagueRanking        *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking `protobuf:"bytes,2,opt,name=league_ranking,json=leagueRanking,proto3" json:"league_ranking,omitempty"`
	BestLeagueId         int32                                                      `protobuf:"varint,3,opt,name=best_league_id,json=bestLeagueId,proto3" json:"best_league_id,omitempty"`
	BestRating           int32                                                      `protobuf:"varint,4,opt,name=best_rating,json=bestRating,proto3" json:"best_rating,omitempty"`
	DailyVictoryCount    int32                                                      `protobuf:"varint,5,opt,name=daily_victory_count,json=dailyVictoryCount,proto3" json:"daily_victory_count,omitempty"`
	SeasonVictoryCount   int32                                                      `protobuf:"varint,6,opt,name=season_victory_count,json=seasonVictoryCount,proto3" json:"season_victory_count,omitempty"`
	DailyFightCount      int32                                                      `protobuf:"varint,7,opt,name=daily_fight_count,json=dailyFightCount,proto3" json:"daily_fight_count,omitempty"`
	SeasonFightCount     int32                                                      `protobuf:"varint,8,opt,name=season_fight_count,json=seasonFightCount,proto3" json:"season_fight_count,omitempty"`
	FightNeededForLadder int32                                                      `protobuf:"varint,9,opt,name=fight_needed_for_ladder,json=fightNeededForLadder,proto3" json:"fight_needed_for_ladder,omitempty"`
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) Reset() {
	*x = ArenaUpdatePlayerInformationEvent_ArenaRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaUpdatePlayerInformationEvent_ArenaRank) ProtoMessage() {}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaUpdatePlayerInformationEvent_ArenaRank.ProtoReflect.Descriptor instead.
func (*ArenaUpdatePlayerInformationEvent_ArenaRank) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetArenaType() ArenaType {
	if x != nil {
		return x.ArenaType
	}
	return ArenaType_ONE_VS_ONE
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetLeagueRanking() *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking {
	if x != nil {
		return x.LeagueRanking
	}
	return nil
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetBestLeagueId() int32 {
	if x != nil {
		return x.BestLeagueId
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetBestRating() int32 {
	if x != nil {
		return x.BestRating
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetDailyVictoryCount() int32 {
	if x != nil {
		return x.DailyVictoryCount
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetSeasonVictoryCount() int32 {
	if x != nil {
		return x.SeasonVictoryCount
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetDailyFightCount() int32 {
	if x != nil {
		return x.DailyFightCount
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetSeasonFightCount() int32 {
	if x != nil {
		return x.SeasonFightCount
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank) GetFightNeededForLadder() int32 {
	if x != nil {
		return x.FightNeededForLadder
	}
	return 0
}

type ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating         int32 `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	LeagueId       int32 `protobuf:"varint,2,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
	LadderPosition int32 `protobuf:"varint,3,opt,name=ladder_position,json=ladderPosition,proto3" json:"ladder_position,omitempty"`
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) Reset() {
	*x = ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) ProtoMessage() {}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking.ProtoReflect.Descriptor instead.
func (*ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking) GetLadderPosition() int32 {
	if x != nil {
		return x.LadderPosition
	}
	return 0
}

type SurrenderInfoResponse_SurrenderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SurrenderInfoResponse_SurrenderResponse_Accepted
	//	*SurrenderInfoResponse_SurrenderResponse_Refused
	//	*SurrenderInfoResponse_SurrenderResponse_BeforeTurn
	//	*SurrenderInfoResponse_SurrenderResponse_BeforeVote
	Response isSurrenderInfoResponse_SurrenderResponse_Response `protobuf_oneof:"response"`
}

func (x *SurrenderInfoResponse_SurrenderResponse) Reset() {
	*x = SurrenderInfoResponse_SurrenderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderResponse) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderResponse.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 0}
}

func (m *SurrenderInfoResponse_SurrenderResponse) GetResponse() isSurrenderInfoResponse_SurrenderResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderResponse) GetAccepted() *SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderResponse_Accepted); ok {
		return x.Accepted
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderResponse) GetRefused() *SurrenderInfoResponse_SurrenderResponse_SurrenderRefused {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderResponse_Refused); ok {
		return x.Refused
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderResponse) GetBeforeTurn() *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderResponse_BeforeTurn); ok {
		return x.BeforeTurn
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderResponse) GetBeforeVote() *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderResponse_BeforeVote); ok {
		return x.BeforeVote
	}
	return nil
}

type isSurrenderInfoResponse_SurrenderResponse_Response interface {
	isSurrenderInfoResponse_SurrenderResponse_Response()
}

type SurrenderInfoResponse_SurrenderResponse_Accepted struct {
	Accepted *SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted `protobuf:"bytes,1,opt,name=accepted,proto3,oneof"`
}

type SurrenderInfoResponse_SurrenderResponse_Refused struct {
	Refused *SurrenderInfoResponse_SurrenderResponse_SurrenderRefused `protobuf:"bytes,2,opt,name=refused,proto3,oneof"`
}

type SurrenderInfoResponse_SurrenderResponse_BeforeTurn struct {
	BeforeTurn *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn `protobuf:"bytes,3,opt,name=before_turn,json=beforeTurn,proto3,oneof"`
}

type SurrenderInfoResponse_SurrenderResponse_BeforeVote struct {
	BeforeVote *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote `protobuf:"bytes,4,opt,name=before_vote,json=beforeVote,proto3,oneof"`
}

func (*SurrenderInfoResponse_SurrenderResponse_Accepted) isSurrenderInfoResponse_SurrenderResponse_Response() {
}

func (*SurrenderInfoResponse_SurrenderResponse_Refused) isSurrenderInfoResponse_SurrenderResponse_Response() {
}

func (*SurrenderInfoResponse_SurrenderResponse_BeforeTurn) isSurrenderInfoResponse_SurrenderResponse_Response() {
}

func (*SurrenderInfoResponse_SurrenderResponse_BeforeVote) isSurrenderInfoResponse_SurrenderResponse_Response() {
}

type SurrenderInfoResponse_SurrenderVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SurrenderInfoResponse_SurrenderVoteResponse_Accepted
	//	*SurrenderInfoResponse_SurrenderVoteResponse_Refused
	//	*SurrenderInfoResponse_SurrenderVoteResponse_BeforeTurn
	//	*SurrenderInfoResponse_SurrenderVoteResponse_AlreadyAsked
	//	*SurrenderInfoResponse_SurrenderVoteResponse_Waiting
	Response isSurrenderInfoResponse_SurrenderVoteResponse_Response `protobuf_oneof:"response"`
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) Reset() {
	*x = SurrenderInfoResponse_SurrenderVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderVoteResponse) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderVoteResponse.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderVoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 1}
}

func (m *SurrenderInfoResponse_SurrenderVoteResponse) GetResponse() isSurrenderInfoResponse_SurrenderVoteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) GetAccepted() *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderVoteResponse_Accepted); ok {
		return x.Accepted
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) GetRefused() *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderVoteResponse_Refused); ok {
		return x.Refused
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) GetBeforeTurn() *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderVoteResponse_BeforeTurn); ok {
		return x.BeforeTurn
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) GetAlreadyAsked() *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderVoteResponse_AlreadyAsked); ok {
		return x.AlreadyAsked
	}
	return nil
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse) GetWaiting() *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting {
	if x, ok := x.GetResponse().(*SurrenderInfoResponse_SurrenderVoteResponse_Waiting); ok {
		return x.Waiting
	}
	return nil
}

type isSurrenderInfoResponse_SurrenderVoteResponse_Response interface {
	isSurrenderInfoResponse_SurrenderVoteResponse_Response()
}

type SurrenderInfoResponse_SurrenderVoteResponse_Accepted struct {
	Accepted *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted `protobuf:"bytes,1,opt,name=accepted,proto3,oneof"`
}

type SurrenderInfoResponse_SurrenderVoteResponse_Refused struct {
	Refused *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused `protobuf:"bytes,2,opt,name=refused,proto3,oneof"`
}

type SurrenderInfoResponse_SurrenderVoteResponse_BeforeTurn struct {
	BeforeTurn *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn `protobuf:"bytes,3,opt,name=before_turn,json=beforeTurn,proto3,oneof"`
}

type SurrenderInfoResponse_SurrenderVoteResponse_AlreadyAsked struct {
	AlreadyAsked *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked `protobuf:"bytes,4,opt,name=already_asked,json=alreadyAsked,proto3,oneof"`
}

type SurrenderInfoResponse_SurrenderVoteResponse_Waiting struct {
	Waiting *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting `protobuf:"bytes,5,opt,name=waiting,proto3,oneof"`
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_Accepted) isSurrenderInfoResponse_SurrenderVoteResponse_Response() {
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_Refused) isSurrenderInfoResponse_SurrenderVoteResponse_Response() {
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_BeforeTurn) isSurrenderInfoResponse_SurrenderVoteResponse_Response() {
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_AlreadyAsked) isSurrenderInfoResponse_SurrenderVoteResponse_Response() {
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_Waiting) isSurrenderInfoResponse_SurrenderVoteResponse_Response() {
}

type SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted) Reset() {
	*x = SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 0, 0}
}

type SurrenderInfoResponse_SurrenderResponse_SurrenderRefused struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderRefused) Reset() {
	*x = SurrenderInfoResponse_SurrenderResponse_SurrenderRefused{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderRefused) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderResponse_SurrenderRefused) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderRefused) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderResponse_SurrenderRefused.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderResponse_SurrenderRefused) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 0, 1}
}

type SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinTurnForSurrender int32 `protobuf:"varint,1,opt,name=min_turn_for_surrender,json=minTurnForSurrender,proto3" json:"min_turn_for_surrender,omitempty"`
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn) Reset() {
	*x = SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 0, 2}
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn) GetMinTurnForSurrender() int32 {
	if x != nil {
		return x.MinTurnForSurrender
	}
	return 0
}

type SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote) Reset() {
	*x = SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 0, 3}
}

type SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted) Reset() {
	*x = SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 1, 0}
}

type SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused) Reset() {
	*x = SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 1, 1}
}

type SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinTurnForSurrenderVote int32 `protobuf:"varint,1,opt,name=min_turn_for_surrender_vote,json=minTurnForSurrenderVote,proto3" json:"min_turn_for_surrender_vote,omitempty"`
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn) Reset() {
	*x = SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 1, 2}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn) GetMinTurnForSurrenderVote() int32 {
	if x != nil {
		return x.MinTurnForSurrenderVote
	}
	return 0
}

type SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked) Reset() {
	*x = SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 1, 3}
}

type SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteUnlockTimeStamp string `protobuf:"bytes,1,opt,name=vote_unlock_time_stamp,json=voteUnlockTimeStamp,proto3" json:"vote_unlock_time_stamp,omitempty"`
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting) Reset() {
	*x = SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_arena_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting) ProtoMessage() {}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_arena_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting.ProtoReflect.Descriptor instead.
func (*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting) Descriptor() ([]byte, []int) {
	return file_proto_game_arena_proto_rawDescGZIP(), []int{16, 1, 4}
}

func (x *SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting) GetVoteUnlockTimeStamp() string {
	if x != nil {
		return x.VoteUnlockTimeStamp
	}
	return ""
}

var File_proto_game_arena_proto protoreflect.FileDescriptor

var file_proto_game_arena_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x61, 0x72, 0x65,
	0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x72, 0x65, 0x6e, 0x61, 0x22, 0x6d, 0x0a, 0x14, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a,
	0x0a, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e,
	0x41, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x72, 0x65, 0x6e, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31,
	0x0a, 0x17, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x46, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x22, 0x3e, 0x0a, 0x18, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x46, 0x69, 0x67, 0x68, 0x74, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x64, 0x22, 0xcc, 0x02, 0x0a, 0x1c, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x62, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41,
	0x72, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x57, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22,
	0x4f, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x41, 0x49, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x46, 0x49, 0x47, 0x48, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03,
	0x22, 0x6b, 0x0a, 0x1a, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x6c,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6c, 0x6c, 0x69, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a,
	0x17, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x22, 0xde, 0x06, 0x0a, 0x21, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x79, 0x0a, 0x0b, 0x61, 0x72, 0x65, 0x6e,
	0x61, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72,
	0x65, 0x6e, 0x61, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x61,
	0x6e, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x9b, 0x05, 0x0a, 0x09, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x55, 0x0a, 0x0a, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e,
	0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x61, 0x6e, 0x6b, 0x2e, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x6c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x65,
	0x73, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x62, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x76, 0x69, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x69, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a,
	0x17, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x4c, 0x61,
	0x64, 0x64, 0x65, 0x72, 0x1a, 0x6d, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x61,
	0x64, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x1d, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x54, 0x6f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x17, 0x41,
	0x72, 0x65, 0x6e, 0x61, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x64, 0x64, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x1a, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x61,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x0b, 0x62, 0x61, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x78, 0x0a, 0x1d, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x41,
	0x72, 0x65, 0x6e, 0x61, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x49, 0x64, 0x6c, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x1f, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x58, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x78, 0x70, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x78, 0x70, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x13, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x53, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9b,
	0x10, 0x0a, 0x15, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x73, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72,
	0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x11, 0x73, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90,
	0x01, 0x0a, 0x17, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x58, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x53,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x15, 0x73, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x53, 0x61, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd2, 0x05, 0x0a, 0x11, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x66, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x12, 0x81, 0x01, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e,
	0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x64, 0x12, 0x8b, 0x01, 0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x68, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x54, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54,
	0x75, 0x72, 0x6e, 0x12, 0x8b, 0x01, 0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x76,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x56,
	0x6f, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x1a, 0x13, 0x0a, 0x11, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x1a, 0x12, 0x0a, 0x10, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x1a, 0x4a, 0x0a, 0x13, 0x53, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x75, 0x72,
	0x6e, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x54, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x15, 0x0a, 0x13, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xf0, 0x07, 0x0a, 0x15, 0x53, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x72, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x12, 0x89, 0x01, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65,
	0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x12, 0x93,
	0x01, 0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65,
	0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x54, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x54, 0x75, 0x72, 0x6e, 0x12, 0x99, 0x01, 0x0a, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x5f, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x72, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x56, 0x6f, 0x74, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41, 0x73, 0x6b, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41, 0x73, 0x6b, 0x65, 0x64,
	0x12, 0x89, 0x01, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61,
	0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x0a, 0x15,
	0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x1a, 0x57, 0x0a,
	0x17, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x3c, 0x0a, 0x1b, 0x6d, 0x69, 0x6e, 0x5f,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6d,
	0x69, 0x6e, 0x54, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x1a, 0x1b, 0x0a, 0x19, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41, 0x73,
	0x6b, 0x65, 0x64, 0x1a, 0x4b, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x56, 0x6f, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x16, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x76, 0x6f, 0x74,
	0x65, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x18,
	0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0xcb, 0x01, 0x0a,
	0x17, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x61,
	0x73, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x61, 0x73, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x6f,
	0x74, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0x3f, 0x0a, 0x09, 0x41, 0x72, 0x65,
	0x6e, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x45, 0x5f, 0x56, 0x53,
	0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x57, 0x4f, 0x5f, 0x56, 0x53,
	0x5f, 0x54, 0x57, 0x4f, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f,
	0x56, 0x53, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x02, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x6f,
	0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x72,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f,
	0x61, 0x72, 0x65, 0x6e, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_arena_proto_rawDescOnce sync.Once
	file_proto_game_arena_proto_rawDescData = file_proto_game_arena_proto_rawDesc
)

func file_proto_game_arena_proto_rawDescGZIP() []byte {
	file_proto_game_arena_proto_rawDescOnce.Do(func() {
		file_proto_game_arena_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_arena_proto_rawDescData)
	})
	return file_proto_game_arena_proto_rawDescData
}

var file_proto_game_arena_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_game_arena_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_proto_game_arena_proto_goTypes = []any{
	(ArenaType)(0),                                                                // 0: com.ankama.dofus.server.game.protocol.arena.ArenaType
	(ArenaRegistrationStatusEvent_Step)(0),                                        // 1: com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationStatusEvent.Step
	(*ArenaRegisterRequest)(nil),                                                  // 2: com.ankama.dofus.server.game.protocol.arena.ArenaRegisterRequest
	(*ArenaUnregisterRequest)(nil),                                                // 3: com.ankama.dofus.server.game.protocol.arena.ArenaUnregisterRequest
	(*ArenaFightAnswerRequest)(nil),                                               // 4: com.ankama.dofus.server.game.protocol.arena.ArenaFightAnswerRequest
	(*ArenaFightAnswerResponse)(nil),                                              // 5: com.ankama.dofus.server.game.protocol.arena.ArenaFightAnswerResponse
	(*ArenaRegistrationStatusEvent)(nil),                                          // 6: com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationStatusEvent
	(*ArenaFightPropositionEvent)(nil),                                            // 7: com.ankama.dofus.server.game.protocol.arena.ArenaFightPropositionEvent
	(*ArenaFighterStatusEvent)(nil),                                               // 8: com.ankama.dofus.server.game.protocol.arena.ArenaFighterStatusEvent
	(*ArenaUpdatePlayerInformationEvent)(nil),                                     // 9: com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent
	(*ArenaSwitchToFightServerEvent)(nil),                                         // 10: com.ankama.dofus.server.game.protocol.arena.ArenaSwitchToFightServerEvent
	(*ArenaLeagueRewardsEvent)(nil),                                               // 11: com.ankama.dofus.server.game.protocol.arena.ArenaLeagueRewardsEvent
	(*ArenaPlayerBehavioursEvent)(nil),                                            // 12: com.ankama.dofus.server.game.protocol.arena.ArenaPlayerBehavioursEvent
	(*ArenaRegistrationWarningEvent)(nil),                                         // 13: com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationWarningEvent
	(*ArenaFighterIdleEvent)(nil),                                                 // 14: com.ankama.dofus.server.game.protocol.arena.ArenaFighterIdleEvent
	(*ArenaSwitchXpRewardsModeRequest)(nil),                                       // 15: com.ankama.dofus.server.game.protocol.arena.ArenaSwitchXpRewardsModeRequest
	(*SurrenderStateEvent)(nil),                                                   // 16: com.ankama.dofus.server.game.protocol.arena.SurrenderStateEvent
	(*SurrenderInfoRequest)(nil),                                                  // 17: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoRequest
	(*SurrenderInfoResponse)(nil),                                                 // 18: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse
	(*SurrenderVoteCastRequest)(nil),                                              // 19: com.ankama.dofus.server.game.protocol.arena.SurrenderVoteCastRequest
	(*SurrenderVoteStartEvent)(nil),                                               // 20: com.ankama.dofus.server.game.protocol.arena.SurrenderVoteStartEvent
	(*SurrenderVoteUpdateEvent)(nil),                                              // 21: com.ankama.dofus.server.game.protocol.arena.SurrenderVoteUpdateEvent
	(*SurrenderVoteEndEvent)(nil),                                                 // 22: com.ankama.dofus.server.game.protocol.arena.SurrenderVoteEndEvent
	(*OpponentSurrenderEvent)(nil),                                                // 23: com.ankama.dofus.server.game.protocol.arena.OpponentSurrenderEvent
	(*ArenaUpdatePlayerInformationEvent_ArenaRank)(nil),                           // 24: com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent.ArenaRank
	(*ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking)(nil),             // 25: com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent.ArenaRank.LeagueRanking
	(*SurrenderInfoResponse_SurrenderResponse)(nil),                               // 26: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse
	(*SurrenderInfoResponse_SurrenderVoteResponse)(nil),                           // 27: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse
	(*SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted)(nil),             // 28: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderAccepted
	(*SurrenderInfoResponse_SurrenderResponse_SurrenderRefused)(nil),              // 29: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderRefused
	(*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn)(nil),           // 30: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderBeforeTurn
	(*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote)(nil),           // 31: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderBeforeVote
	(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted)(nil),     // 32: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteAccepted
	(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused)(nil),      // 33: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteRefused
	(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn)(nil),   // 34: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteBeforeTurn
	(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked)(nil), // 35: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteAlreadyAsked
	(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting)(nil),      // 36: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteWaiting
}
var file_proto_game_arena_proto_depIdxs = []int32{
	0,  // 0: com.ankama.dofus.server.game.protocol.arena.ArenaRegisterRequest.arena_type:type_name -> com.ankama.dofus.server.game.protocol.arena.ArenaType
	1,  // 1: com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationStatusEvent.step:type_name -> com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationStatusEvent.Step
	0,  // 2: com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationStatusEvent.battle_mode:type_name -> com.ankama.dofus.server.game.protocol.arena.ArenaType
	24, // 3: com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent.arena_ranks:type_name -> com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent.ArenaRank
	0,  // 4: com.ankama.dofus.server.game.protocol.arena.ArenaRegistrationWarningEvent.battle_mode:type_name -> com.ankama.dofus.server.game.protocol.arena.ArenaType
	26, // 5: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.surrender_response:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse
	27, // 6: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.surrender_vote_response:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse
	0,  // 7: com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent.ArenaRank.arena_type:type_name -> com.ankama.dofus.server.game.protocol.arena.ArenaType
	25, // 8: com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent.ArenaRank.league_ranking:type_name -> com.ankama.dofus.server.game.protocol.arena.ArenaUpdatePlayerInformationEvent.ArenaRank.LeagueRanking
	28, // 9: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.accepted:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderAccepted
	29, // 10: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.refused:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderRefused
	30, // 11: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.before_turn:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderBeforeTurn
	31, // 12: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.before_vote:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderResponse.SurrenderBeforeVote
	32, // 13: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.accepted:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteAccepted
	33, // 14: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.refused:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteRefused
	34, // 15: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.before_turn:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteBeforeTurn
	35, // 16: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.already_asked:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteAlreadyAsked
	36, // 17: com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.waiting:type_name -> com.ankama.dofus.server.game.protocol.arena.SurrenderInfoResponse.SurrenderVoteResponse.SurrenderVoteWaiting
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_game_arena_proto_init() }
func file_proto_game_arena_proto_init() {
	if File_proto_game_arena_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_arena_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaUnregisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaFightAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaFightAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaRegistrationStatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaFightPropositionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaFighterStatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaUpdatePlayerInformationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaSwitchToFightServerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaLeagueRewardsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaPlayerBehavioursEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaRegistrationWarningEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaFighterIdleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaSwitchXpRewardsModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderStateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderVoteCastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderVoteStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderVoteUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderVoteEndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*OpponentSurrenderEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaUpdatePlayerInformationEvent_ArenaRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaUpdatePlayerInformationEvent_ArenaRank_LeagueRanking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderResponse_SurrenderAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderResponse_SurrenderRefused); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeTurn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderResponse_SurrenderBeforeVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteRefused); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteBeforeTurn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteAlreadyAsked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_arena_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*SurrenderInfoResponse_SurrenderVoteResponse_SurrenderVoteWaiting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_arena_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_game_arena_proto_msgTypes[24].OneofWrappers = []any{
		(*SurrenderInfoResponse_SurrenderResponse_Accepted)(nil),
		(*SurrenderInfoResponse_SurrenderResponse_Refused)(nil),
		(*SurrenderInfoResponse_SurrenderResponse_BeforeTurn)(nil),
		(*SurrenderInfoResponse_SurrenderResponse_BeforeVote)(nil),
	}
	file_proto_game_arena_proto_msgTypes[25].OneofWrappers = []any{
		(*SurrenderInfoResponse_SurrenderVoteResponse_Accepted)(nil),
		(*SurrenderInfoResponse_SurrenderVoteResponse_Refused)(nil),
		(*SurrenderInfoResponse_SurrenderVoteResponse_BeforeTurn)(nil),
		(*SurrenderInfoResponse_SurrenderVoteResponse_AlreadyAsked)(nil),
		(*SurrenderInfoResponse_SurrenderVoteResponse_Waiting)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_arena_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_arena_proto_goTypes,
		DependencyIndexes: file_proto_game_arena_proto_depIdxs,
		EnumInfos:         file_proto_game_arena_proto_enumTypes,
		MessageInfos:      file_proto_game_arena_proto_msgTypes,
	}.Build()
	File_proto_game_arena_proto = out.File
	file_proto_game_arena_proto_rawDesc = nil
	file_proto_game_arena_proto_goTypes = nil
	file_proto_game_arena_proto_depIdxs = nil
}
