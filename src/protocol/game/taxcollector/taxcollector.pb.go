// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/taxcollector.proto

package taxcollector

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaxCollectorMovement_TaxCollectorMovementType int32

const (
	TaxCollectorMovement_TAX_COLLECTOR_UNKNOWN_ACTION TaxCollectorMovement_TaxCollectorMovementType = 0
	TaxCollectorMovement_TAX_COLLECTOR_HIRED          TaxCollectorMovement_TaxCollectorMovementType = 1
	TaxCollectorMovement_TAX_COLLECTOR_HARVESTED      TaxCollectorMovement_TaxCollectorMovementType = 2
	TaxCollectorMovement_TAX_COLLECTOR_DEFEATED       TaxCollectorMovement_TaxCollectorMovementType = 3
	TaxCollectorMovement_TAX_COLLECTOR_DESTROYED      TaxCollectorMovement_TaxCollectorMovementType = 4
)

// Enum value maps for TaxCollectorMovement_TaxCollectorMovementType.
var (
	TaxCollectorMovement_TaxCollectorMovementType_name = map[int32]string{
		0: "TAX_COLLECTOR_UNKNOWN_ACTION",
		1: "TAX_COLLECTOR_HIRED",
		2: "TAX_COLLECTOR_HARVESTED",
		3: "TAX_COLLECTOR_DEFEATED",
		4: "TAX_COLLECTOR_DESTROYED",
	}
	TaxCollectorMovement_TaxCollectorMovementType_value = map[string]int32{
		"TAX_COLLECTOR_UNKNOWN_ACTION": 0,
		"TAX_COLLECTOR_HIRED":          1,
		"TAX_COLLECTOR_HARVESTED":      2,
		"TAX_COLLECTOR_DEFEATED":       3,
		"TAX_COLLECTOR_DESTROYED":      4,
	}
)

func (x TaxCollectorMovement_TaxCollectorMovementType) Enum() *TaxCollectorMovement_TaxCollectorMovementType {
	p := new(TaxCollectorMovement_TaxCollectorMovementType)
	*p = x
	return p
}

func (x TaxCollectorMovement_TaxCollectorMovementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaxCollectorMovement_TaxCollectorMovementType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_taxcollector_proto_enumTypes[0].Descriptor()
}

func (TaxCollectorMovement_TaxCollectorMovementType) Type() protoreflect.EnumType {
	return &file_proto_game_taxcollector_proto_enumTypes[0]
}

func (x TaxCollectorMovement_TaxCollectorMovementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaxCollectorMovement_TaxCollectorMovementType.Descriptor instead.
func (TaxCollectorMovement_TaxCollectorMovementType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{17, 0}
}

type TaxCollectorErrorEvent_TaxCollectorErrorReason int32

const (
	TaxCollectorErrorEvent_TAX_COLLECTOR_ERROR_UNKNOWN    TaxCollectorErrorEvent_TaxCollectorErrorReason = 0
	TaxCollectorErrorEvent_TAX_COLLECTOR_NOT_FOUND        TaxCollectorErrorEvent_TaxCollectorErrorReason = 1
	TaxCollectorErrorEvent_TAX_COLLECTOR_NOT_OWNED        TaxCollectorErrorEvent_TaxCollectorErrorReason = 2
	TaxCollectorErrorEvent_TAX_COLLECTOR_NO_RIGHTS        TaxCollectorErrorEvent_TaxCollectorErrorReason = 3
	TaxCollectorErrorEvent_TAX_COLLECTOR_MAX_REACHED      TaxCollectorErrorEvent_TaxCollectorErrorReason = 4
	TaxCollectorErrorEvent_TAX_COLLECTOR_ALREADY_ONE      TaxCollectorErrorEvent_TaxCollectorErrorReason = 5
	TaxCollectorErrorEvent_TAX_COLLECTOR_CANT_HIRE_YET    TaxCollectorErrorEvent_TaxCollectorErrorReason = 6
	TaxCollectorErrorEvent_TAX_COLLECTOR_CANT_HIRE_HERE   TaxCollectorErrorEvent_TaxCollectorErrorReason = 7
	TaxCollectorErrorEvent_TAX_COLLECTOR_NOT_ENOUGH_KAMAS TaxCollectorErrorEvent_TaxCollectorErrorReason = 8
)

// Enum value maps for TaxCollectorErrorEvent_TaxCollectorErrorReason.
var (
	TaxCollectorErrorEvent_TaxCollectorErrorReason_name = map[int32]string{
		0: "TAX_COLLECTOR_ERROR_UNKNOWN",
		1: "TAX_COLLECTOR_NOT_FOUND",
		2: "TAX_COLLECTOR_NOT_OWNED",
		3: "TAX_COLLECTOR_NO_RIGHTS",
		4: "TAX_COLLECTOR_MAX_REACHED",
		5: "TAX_COLLECTOR_ALREADY_ONE",
		6: "TAX_COLLECTOR_CANT_HIRE_YET",
		7: "TAX_COLLECTOR_CANT_HIRE_HERE",
		8: "TAX_COLLECTOR_NOT_ENOUGH_KAMAS",
	}
	TaxCollectorErrorEvent_TaxCollectorErrorReason_value = map[string]int32{
		"TAX_COLLECTOR_ERROR_UNKNOWN":    0,
		"TAX_COLLECTOR_NOT_FOUND":        1,
		"TAX_COLLECTOR_NOT_OWNED":        2,
		"TAX_COLLECTOR_NO_RIGHTS":        3,
		"TAX_COLLECTOR_MAX_REACHED":      4,
		"TAX_COLLECTOR_ALREADY_ONE":      5,
		"TAX_COLLECTOR_CANT_HIRE_YET":    6,
		"TAX_COLLECTOR_CANT_HIRE_HERE":   7,
		"TAX_COLLECTOR_NOT_ENOUGH_KAMAS": 8,
	}
)

func (x TaxCollectorErrorEvent_TaxCollectorErrorReason) Enum() *TaxCollectorErrorEvent_TaxCollectorErrorReason {
	p := new(TaxCollectorErrorEvent_TaxCollectorErrorReason)
	*p = x
	return p
}

func (x TaxCollectorErrorEvent_TaxCollectorErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaxCollectorErrorEvent_TaxCollectorErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_taxcollector_proto_enumTypes[1].Descriptor()
}

func (TaxCollectorErrorEvent_TaxCollectorErrorReason) Type() protoreflect.EnumType {
	return &file_proto_game_taxcollector_proto_enumTypes[1]
}

func (x TaxCollectorErrorEvent_TaxCollectorErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaxCollectorErrorEvent_TaxCollectorErrorReason.Descriptor instead.
func (TaxCollectorErrorEvent_TaxCollectorErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{20, 0}
}

type TaxCollectorUpdatesListenStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
}

func (x *TaxCollectorUpdatesListenStartRequest) Reset() {
	*x = TaxCollectorUpdatesListenStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorUpdatesListenStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorUpdatesListenStartRequest) ProtoMessage() {}

func (x *TaxCollectorUpdatesListenStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorUpdatesListenStartRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorUpdatesListenStartRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{0}
}

func (x *TaxCollectorUpdatesListenStartRequest) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

type TaxCollectorUpdatesListenStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
}

func (x *TaxCollectorUpdatesListenStopRequest) Reset() {
	*x = TaxCollectorUpdatesListenStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorUpdatesListenStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorUpdatesListenStopRequest) ProtoMessage() {}

func (x *TaxCollectorUpdatesListenStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorUpdatesListenStopRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorUpdatesListenStopRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{1}
}

func (x *TaxCollectorUpdatesListenStopRequest) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

type TaxCollectorOrderedSpellAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string                           `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
	AddedSpell      *common.TaxCollectorOrderedSpell `protobuf:"bytes,2,opt,name=added_spell,json=addedSpell,proto3" json:"added_spell,omitempty"`
}

func (x *TaxCollectorOrderedSpellAddRequest) Reset() {
	*x = TaxCollectorOrderedSpellAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorOrderedSpellAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorOrderedSpellAddRequest) ProtoMessage() {}

func (x *TaxCollectorOrderedSpellAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorOrderedSpellAddRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorOrderedSpellAddRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{2}
}

func (x *TaxCollectorOrderedSpellAddRequest) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

func (x *TaxCollectorOrderedSpellAddRequest) GetAddedSpell() *common.TaxCollectorOrderedSpell {
	if x != nil {
		return x.AddedSpell
	}
	return nil
}

type TaxCollectorOrderedSpellRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
	SlotId          int32  `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *TaxCollectorOrderedSpellRemoveRequest) Reset() {
	*x = TaxCollectorOrderedSpellRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorOrderedSpellRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorOrderedSpellRemoveRequest) ProtoMessage() {}

func (x *TaxCollectorOrderedSpellRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorOrderedSpellRemoveRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorOrderedSpellRemoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{3}
}

func (x *TaxCollectorOrderedSpellRemoveRequest) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

func (x *TaxCollectorOrderedSpellRemoveRequest) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type TaxCollectorOrderedSpellMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
	FromSlotId      int32  `protobuf:"varint,2,opt,name=from_slot_id,json=fromSlotId,proto3" json:"from_slot_id,omitempty"`
	ToSlotId        int32  `protobuf:"varint,3,opt,name=to_slot_id,json=toSlotId,proto3" json:"to_slot_id,omitempty"`
}

func (x *TaxCollectorOrderedSpellMoveRequest) Reset() {
	*x = TaxCollectorOrderedSpellMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorOrderedSpellMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorOrderedSpellMoveRequest) ProtoMessage() {}

func (x *TaxCollectorOrderedSpellMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorOrderedSpellMoveRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorOrderedSpellMoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{4}
}

func (x *TaxCollectorOrderedSpellMoveRequest) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

func (x *TaxCollectorOrderedSpellMoveRequest) GetFromSlotId() int32 {
	if x != nil {
		return x.FromSlotId
	}
	return 0
}

func (x *TaxCollectorOrderedSpellMoveRequest) GetToSlotId() int32 {
	if x != nil {
		return x.ToSlotId
	}
	return 0
}

type TaxCollectorPresetsUpdatesListenStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaxCollectorPresetsUpdatesListenStartRequest) Reset() {
	*x = TaxCollectorPresetsUpdatesListenStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorPresetsUpdatesListenStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorPresetsUpdatesListenStartRequest) ProtoMessage() {}

func (x *TaxCollectorPresetsUpdatesListenStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorPresetsUpdatesListenStartRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorPresetsUpdatesListenStartRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{5}
}

type TaxCollectorPresetsUpdatesListenStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaxCollectorPresetsUpdatesListenStopRequest) Reset() {
	*x = TaxCollectorPresetsUpdatesListenStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorPresetsUpdatesListenStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorPresetsUpdatesListenStopRequest) ProtoMessage() {}

func (x *TaxCollectorPresetsUpdatesListenStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorPresetsUpdatesListenStopRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorPresetsUpdatesListenStopRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{6}
}

type TaxCollectorPresetSpellAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUid string                           `protobuf:"bytes,1,opt,name=preset_uid,json=presetUid,proto3" json:"preset_uid,omitempty"`
	Spell     *common.TaxCollectorOrderedSpell `protobuf:"bytes,2,opt,name=spell,proto3" json:"spell,omitempty"`
}

func (x *TaxCollectorPresetSpellAddRequest) Reset() {
	*x = TaxCollectorPresetSpellAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorPresetSpellAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorPresetSpellAddRequest) ProtoMessage() {}

func (x *TaxCollectorPresetSpellAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorPresetSpellAddRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorPresetSpellAddRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{7}
}

func (x *TaxCollectorPresetSpellAddRequest) GetPresetUid() string {
	if x != nil {
		return x.PresetUid
	}
	return ""
}

func (x *TaxCollectorPresetSpellAddRequest) GetSpell() *common.TaxCollectorOrderedSpell {
	if x != nil {
		return x.Spell
	}
	return nil
}

type TaxCollectorPresetSpellRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUid string `protobuf:"bytes,1,opt,name=preset_uid,json=presetUid,proto3" json:"preset_uid,omitempty"`
	SlotId    int32  `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *TaxCollectorPresetSpellRemoveRequest) Reset() {
	*x = TaxCollectorPresetSpellRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorPresetSpellRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorPresetSpellRemoveRequest) ProtoMessage() {}

func (x *TaxCollectorPresetSpellRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorPresetSpellRemoveRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorPresetSpellRemoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{8}
}

func (x *TaxCollectorPresetSpellRemoveRequest) GetPresetUid() string {
	if x != nil {
		return x.PresetUid
	}
	return ""
}

func (x *TaxCollectorPresetSpellRemoveRequest) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type TaxCollectorPresetSpellMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUid  string `protobuf:"bytes,1,opt,name=preset_uid,json=presetUid,proto3" json:"preset_uid,omitempty"`
	FromSlotId int32  `protobuf:"varint,2,opt,name=from_slot_id,json=fromSlotId,proto3" json:"from_slot_id,omitempty"`
	ToSlotId   int32  `protobuf:"varint,3,opt,name=to_slot_id,json=toSlotId,proto3" json:"to_slot_id,omitempty"`
}

func (x *TaxCollectorPresetSpellMoveRequest) Reset() {
	*x = TaxCollectorPresetSpellMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorPresetSpellMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorPresetSpellMoveRequest) ProtoMessage() {}

func (x *TaxCollectorPresetSpellMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorPresetSpellMoveRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorPresetSpellMoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{9}
}

func (x *TaxCollectorPresetSpellMoveRequest) GetPresetUid() string {
	if x != nil {
		return x.PresetUid
	}
	return ""
}

func (x *TaxCollectorPresetSpellMoveRequest) GetFromSlotId() int32 {
	if x != nil {
		return x.FromSlotId
	}
	return 0
}

func (x *TaxCollectorPresetSpellMoveRequest) GetToSlotId() int32 {
	if x != nil {
		return x.ToSlotId
	}
	return 0
}

type TaxCollectorTopListEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonTaxCollectorsInformation []*common.TaxCollectorInformation `protobuf:"bytes,1,rep,name=dungeon_tax_collectors_information,json=dungeonTaxCollectorsInformation,proto3" json:"dungeon_tax_collectors_information,omitempty"`
	WorldTaxCollectorsInformation   []*common.TaxCollectorInformation `protobuf:"bytes,2,rep,name=world_tax_collectors_information,json=worldTaxCollectorsInformation,proto3" json:"world_tax_collectors_information,omitempty"`
}

func (x *TaxCollectorTopListEvent) Reset() {
	*x = TaxCollectorTopListEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorTopListEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorTopListEvent) ProtoMessage() {}

func (x *TaxCollectorTopListEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorTopListEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorTopListEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{10}
}

func (x *TaxCollectorTopListEvent) GetDungeonTaxCollectorsInformation() []*common.TaxCollectorInformation {
	if x != nil {
		return x.DungeonTaxCollectorsInformation
	}
	return nil
}

func (x *TaxCollectorTopListEvent) GetWorldTaxCollectorsInformation() []*common.TaxCollectorInformation {
	if x != nil {
		return x.WorldTaxCollectorsInformation
	}
	return nil
}

type TaxCollectorStateUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string                   `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
	State           common.TaxCollectorState `protobuf:"varint,2,opt,name=state,proto3,enum=com.ankama.dofus.server.game.protocol.common.TaxCollectorState" json:"state,omitempty"`
}

func (x *TaxCollectorStateUpdateEvent) Reset() {
	*x = TaxCollectorStateUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorStateUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorStateUpdateEvent) ProtoMessage() {}

func (x *TaxCollectorStateUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorStateUpdateEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorStateUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{11}
}

func (x *TaxCollectorStateUpdateEvent) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

func (x *TaxCollectorStateUpdateEvent) GetState() common.TaxCollectorState {
	if x != nil {
		return x.State
	}
	return common.TaxCollectorState(0)
}

type TaxCollectorAddedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallerId     int64                           `protobuf:"varint,1,opt,name=caller_id,json=callerId,proto3" json:"caller_id,omitempty"`
	TaxCollector *common.TaxCollectorInformation `protobuf:"bytes,2,opt,name=tax_collector,json=taxCollector,proto3" json:"tax_collector,omitempty"`
}

func (x *TaxCollectorAddedEvent) Reset() {
	*x = TaxCollectorAddedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorAddedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorAddedEvent) ProtoMessage() {}

func (x *TaxCollectorAddedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorAddedEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorAddedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{12}
}

func (x *TaxCollectorAddedEvent) GetCallerId() int64 {
	if x != nil {
		return x.CallerId
	}
	return 0
}

func (x *TaxCollectorAddedEvent) GetTaxCollector() *common.TaxCollectorInformation {
	if x != nil {
		return x.TaxCollector
	}
	return nil
}

type TaxCollectorRemovedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
}

func (x *TaxCollectorRemovedEvent) Reset() {
	*x = TaxCollectorRemovedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorRemovedEvent) ProtoMessage() {}

func (x *TaxCollectorRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorRemovedEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorRemovedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{13}
}

func (x *TaxCollectorRemovedEvent) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

type TaxCollectorAttackedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstNameId int32                          `protobuf:"varint,1,opt,name=first_name_id,json=firstNameId,proto3" json:"first_name_id,omitempty"`
	LastNameId  int32                          `protobuf:"varint,2,opt,name=last_name_id,json=lastNameId,proto3" json:"last_name_id,omitempty"`
	Coordinates *common.MapExtendedCoordinates `protobuf:"bytes,3,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	AllianceUid string                         `protobuf:"bytes,4,opt,name=alliance_uid,json=allianceUid,proto3" json:"alliance_uid,omitempty"`
	AllianceTag string                         `protobuf:"bytes,5,opt,name=alliance_tag,json=allianceTag,proto3" json:"alliance_tag,omitempty"`
}

func (x *TaxCollectorAttackedEvent) Reset() {
	*x = TaxCollectorAttackedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorAttackedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorAttackedEvent) ProtoMessage() {}

func (x *TaxCollectorAttackedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorAttackedEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorAttackedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{14}
}

func (x *TaxCollectorAttackedEvent) GetFirstNameId() int32 {
	if x != nil {
		return x.FirstNameId
	}
	return 0
}

func (x *TaxCollectorAttackedEvent) GetLastNameId() int32 {
	if x != nil {
		return x.LastNameId
	}
	return 0
}

func (x *TaxCollectorAttackedEvent) GetCoordinates() *common.MapExtendedCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *TaxCollectorAttackedEvent) GetAllianceUid() string {
	if x != nil {
		return x.AllianceUid
	}
	return ""
}

func (x *TaxCollectorAttackedEvent) GetAllianceTag() string {
	if x != nil {
		return x.AllianceTag
	}
	return ""
}

type TaxCollectorAttackResultEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dead        bool                           `protobuf:"varint,1,opt,name=dead,proto3" json:"dead,omitempty"`
	FirstNameId int32                          `protobuf:"varint,2,opt,name=first_name_id,json=firstNameId,proto3" json:"first_name_id,omitempty"`
	LastNameId  int32                          `protobuf:"varint,3,opt,name=last_name_id,json=lastNameId,proto3" json:"last_name_id,omitempty"`
	Coordinates *common.MapExtendedCoordinates `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	AllianceUid string                         `protobuf:"bytes,5,opt,name=alliance_uid,json=allianceUid,proto3" json:"alliance_uid,omitempty"`
	AllianceTag string                         `protobuf:"bytes,6,opt,name=alliance_tag,json=allianceTag,proto3" json:"alliance_tag,omitempty"`
}

func (x *TaxCollectorAttackResultEvent) Reset() {
	*x = TaxCollectorAttackResultEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorAttackResultEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorAttackResultEvent) ProtoMessage() {}

func (x *TaxCollectorAttackResultEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorAttackResultEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorAttackResultEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{15}
}

func (x *TaxCollectorAttackResultEvent) GetDead() bool {
	if x != nil {
		return x.Dead
	}
	return false
}

func (x *TaxCollectorAttackResultEvent) GetFirstNameId() int32 {
	if x != nil {
		return x.FirstNameId
	}
	return 0
}

func (x *TaxCollectorAttackResultEvent) GetLastNameId() int32 {
	if x != nil {
		return x.LastNameId
	}
	return 0
}

func (x *TaxCollectorAttackResultEvent) GetCoordinates() *common.MapExtendedCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *TaxCollectorAttackResultEvent) GetAllianceUid() string {
	if x != nil {
		return x.AllianceUid
	}
	return ""
}

func (x *TaxCollectorAttackResultEvent) GetAllianceTag() string {
	if x != nil {
		return x.AllianceTag
	}
	return ""
}

type TaxCollectorHarvestedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
	HarvesterId     int64  `protobuf:"varint,2,opt,name=harvester_id,json=harvesterId,proto3" json:"harvester_id,omitempty"`
	HarvesterName   string `protobuf:"bytes,3,opt,name=harvester_name,json=harvesterName,proto3" json:"harvester_name,omitempty"`
}

func (x *TaxCollectorHarvestedEvent) Reset() {
	*x = TaxCollectorHarvestedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorHarvestedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorHarvestedEvent) ProtoMessage() {}

func (x *TaxCollectorHarvestedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorHarvestedEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorHarvestedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{16}
}

func (x *TaxCollectorHarvestedEvent) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

func (x *TaxCollectorHarvestedEvent) GetHarvesterId() int64 {
	if x != nil {
		return x.HarvesterId
	}
	return 0
}

func (x *TaxCollectorHarvestedEvent) GetHarvesterName() string {
	if x != nil {
		return x.HarvesterName
	}
	return ""
}

type TaxCollectorMovement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovementType TaxCollectorMovement_TaxCollectorMovementType `protobuf:"varint,1,opt,name=movement_type,json=movementType,proto3,enum=com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovement_TaxCollectorMovementType" json:"movement_type,omitempty"`
	FirstNameId  int32                                         `protobuf:"varint,2,opt,name=first_name_id,json=firstNameId,proto3" json:"first_name_id,omitempty"`
	LastNameId   int32                                         `protobuf:"varint,3,opt,name=last_name_id,json=lastNameId,proto3" json:"last_name_id,omitempty"`
	Coordinates  *common.MapExtendedCoordinates                `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	PlayerId     int64                                         `protobuf:"varint,5,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName   string                                        `protobuf:"bytes,6,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
}

func (x *TaxCollectorMovement) Reset() {
	*x = TaxCollectorMovement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorMovement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorMovement) ProtoMessage() {}

func (x *TaxCollectorMovement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorMovement.ProtoReflect.Descriptor instead.
func (*TaxCollectorMovement) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{17}
}

func (x *TaxCollectorMovement) GetMovementType() TaxCollectorMovement_TaxCollectorMovementType {
	if x != nil {
		return x.MovementType
	}
	return TaxCollectorMovement_TAX_COLLECTOR_UNKNOWN_ACTION
}

func (x *TaxCollectorMovement) GetFirstNameId() int32 {
	if x != nil {
		return x.FirstNameId
	}
	return 0
}

func (x *TaxCollectorMovement) GetLastNameId() int32 {
	if x != nil {
		return x.LastNameId
	}
	return 0
}

func (x *TaxCollectorMovement) GetCoordinates() *common.MapExtendedCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *TaxCollectorMovement) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *TaxCollectorMovement) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

type TaxCollectorMovementsOfflineEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movements []*TaxCollectorMovement `protobuf:"bytes,1,rep,name=movements,proto3" json:"movements,omitempty"`
}

func (x *TaxCollectorMovementsOfflineEvent) Reset() {
	*x = TaxCollectorMovementsOfflineEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorMovementsOfflineEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorMovementsOfflineEvent) ProtoMessage() {}

func (x *TaxCollectorMovementsOfflineEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorMovementsOfflineEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorMovementsOfflineEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{18}
}

func (x *TaxCollectorMovementsOfflineEvent) GetMovements() []*TaxCollectorMovement {
	if x != nil {
		return x.Movements
	}
	return nil
}

type TaxCollectorEquipmentUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string                            `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
	Object          *common.ObjectItemInventory       `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Added           bool                              `protobuf:"varint,3,opt,name=added,proto3" json:"added,omitempty"`
	Characteristics []*common.CharacterCharacteristic `protobuf:"bytes,4,rep,name=characteristics,proto3" json:"characteristics,omitempty"`
}

func (x *TaxCollectorEquipmentUpdateEvent) Reset() {
	*x = TaxCollectorEquipmentUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorEquipmentUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorEquipmentUpdateEvent) ProtoMessage() {}

func (x *TaxCollectorEquipmentUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorEquipmentUpdateEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorEquipmentUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{19}
}

func (x *TaxCollectorEquipmentUpdateEvent) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

func (x *TaxCollectorEquipmentUpdateEvent) GetObject() *common.ObjectItemInventory {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *TaxCollectorEquipmentUpdateEvent) GetAdded() bool {
	if x != nil {
		return x.Added
	}
	return false
}

func (x *TaxCollectorEquipmentUpdateEvent) GetCharacteristics() []*common.CharacterCharacteristic {
	if x != nil {
		return x.Characteristics
	}
	return nil
}

type TaxCollectorErrorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason TaxCollectorErrorEvent_TaxCollectorErrorReason `protobuf:"varint,1,opt,name=reason,proto3,enum=com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorErrorEvent_TaxCollectorErrorReason" json:"reason,omitempty"`
}

func (x *TaxCollectorErrorEvent) Reset() {
	*x = TaxCollectorErrorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorErrorEvent) ProtoMessage() {}

func (x *TaxCollectorErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorErrorEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorErrorEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{20}
}

func (x *TaxCollectorErrorEvent) GetReason() TaxCollectorErrorEvent_TaxCollectorErrorReason {
	if x != nil {
		return x.Reason
	}
	return TaxCollectorErrorEvent_TAX_COLLECTOR_ERROR_UNKNOWN
}

type TaxCollectorUpdatesListeningConfirmationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Information *common.TaxCollectorInformation `protobuf:"bytes,1,opt,name=information,proto3" json:"information,omitempty"`
}

func (x *TaxCollectorUpdatesListeningConfirmationEvent) Reset() {
	*x = TaxCollectorUpdatesListeningConfirmationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorUpdatesListeningConfirmationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorUpdatesListeningConfirmationEvent) ProtoMessage() {}

func (x *TaxCollectorUpdatesListeningConfirmationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorUpdatesListeningConfirmationEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorUpdatesListeningConfirmationEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{21}
}

func (x *TaxCollectorUpdatesListeningConfirmationEvent) GetInformation() *common.TaxCollectorInformation {
	if x != nil {
		return x.Information
	}
	return nil
}

type TaxCollectorOrderedSpellUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCollectorUid string                             `protobuf:"bytes,1,opt,name=tax_collector_uid,json=taxCollectorUid,proto3" json:"tax_collector_uid,omitempty"`
	Spells          []*common.TaxCollectorOrderedSpell `protobuf:"bytes,2,rep,name=spells,proto3" json:"spells,omitempty"`
}

func (x *TaxCollectorOrderedSpellUpdatedEvent) Reset() {
	*x = TaxCollectorOrderedSpellUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorOrderedSpellUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorOrderedSpellUpdatedEvent) ProtoMessage() {}

func (x *TaxCollectorOrderedSpellUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorOrderedSpellUpdatedEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorOrderedSpellUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{22}
}

func (x *TaxCollectorOrderedSpellUpdatedEvent) GetTaxCollectorUid() string {
	if x != nil {
		return x.TaxCollectorUid
	}
	return ""
}

func (x *TaxCollectorOrderedSpellUpdatedEvent) GetSpells() []*common.TaxCollectorOrderedSpell {
	if x != nil {
		return x.Spells
	}
	return nil
}

type TaxCollectorPresetsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Presets []*common.TaxCollectorPreset `protobuf:"bytes,1,rep,name=presets,proto3" json:"presets,omitempty"`
}

func (x *TaxCollectorPresetsEvent) Reset() {
	*x = TaxCollectorPresetsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorPresetsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorPresetsEvent) ProtoMessage() {}

func (x *TaxCollectorPresetsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorPresetsEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorPresetsEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{23}
}

func (x *TaxCollectorPresetsEvent) GetPresets() []*common.TaxCollectorPreset {
	if x != nil {
		return x.Presets
	}
	return nil
}

type TaxCollectorPresetSpellUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUid string                             `protobuf:"bytes,1,opt,name=preset_uid,json=presetUid,proto3" json:"preset_uid,omitempty"`
	Spells    []*common.TaxCollectorOrderedSpell `protobuf:"bytes,2,rep,name=spells,proto3" json:"spells,omitempty"`
}

func (x *TaxCollectorPresetSpellUpdatedEvent) Reset() {
	*x = TaxCollectorPresetSpellUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorPresetSpellUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorPresetSpellUpdatedEvent) ProtoMessage() {}

func (x *TaxCollectorPresetSpellUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorPresetSpellUpdatedEvent.ProtoReflect.Descriptor instead.
func (*TaxCollectorPresetSpellUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{24}
}

func (x *TaxCollectorPresetSpellUpdatedEvent) GetPresetUid() string {
	if x != nil {
		return x.PresetUid
	}
	return ""
}

func (x *TaxCollectorPresetSpellUpdatedEvent) GetSpells() []*common.TaxCollectorOrderedSpell {
	if x != nil {
		return x.Spells
	}
	return nil
}

type TaxCollectorFightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaxCollectorFightRequest) Reset() {
	*x = TaxCollectorFightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_taxcollector_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCollectorFightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCollectorFightRequest) ProtoMessage() {}

func (x *TaxCollectorFightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_taxcollector_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCollectorFightRequest.ProtoReflect.Descriptor instead.
func (*TaxCollectorFightRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_taxcollector_proto_rawDescGZIP(), []int{25}
}

var File_proto_game_taxcollector_proto protoreflect.FileDescriptor

var file_proto_game_taxcollector_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x74, 0x61, 0x78,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x32, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x61, 0x78, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x53, 0x0a, 0x25, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61,
	0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x24, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x78, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x22, 0x54,
	0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61,
	0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x67, 0x0a,
	0x0b, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x65, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x65,
	0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x22, 0x6c, 0x0a, 0x25, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x78, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x23, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x74, 0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x2c, 0x54, 0x61, 0x78, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x2b, 0x54, 0x61, 0x78, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x21, 0x54, 0x61, 0x78, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x5c, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x53, 0x70,
	0x65, 0x6c, 0x6c, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x22, 0x5e, 0x0a, 0x24, 0x54, 0x61,
	0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x22, 0x54,
	0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x22, 0xc0, 0x02, 0x0a, 0x18, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x54, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x92, 0x01,
	0x0a, 0x22, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x78,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x78,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1d, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x61, 0x78, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x1c, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x55, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54,
	0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x54, 0x61, 0x78, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x6a, 0x0a, 0x0d, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74,
	0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x46, 0x0a, 0x18, 0x54,
	0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x55, 0x69, 0x64, 0x22, 0x8f, 0x02, 0x0a, 0x19, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x70, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x61, 0x67, 0x22, 0xa7, 0x02, 0x0a, 0x1d, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x61, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x66, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x67, 0x22,
	0x92, 0x01, 0x0a, 0x1a, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x78, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61,
	0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb9, 0x04, 0x0a, 0x14, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x86, 0x01,
	0x0a, 0x0d, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x61,
	0x78, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0b,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x18, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x1c, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54,
	0x4f, 0x52, 0x5f, 0x48, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41,
	0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x48, 0x41, 0x52, 0x56,
	0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x58, 0x5f, 0x43,
	0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x45, 0x46, 0x45, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45,
	0x43, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x45, 0x44, 0x10, 0x04,
	0x22, 0x8b, 0x01, 0x0a, 0x21, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x66, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x74, 0x61, 0x78, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54,
	0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb0,
	0x02, 0x0a, 0x20, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12,
	0x59, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x12, 0x6f, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x22, 0xcd, 0x03, 0x0a, 0x16, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x7a, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x61, 0x78, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb6, 0x02, 0x0a, 0x17, 0x54, 0x61, 0x78,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c,
	0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c,
	0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43,
	0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1b, 0x0a, 0x17, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52,
	0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x53, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19,
	0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x4d, 0x41,
	0x58, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x54,
	0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x41,
	0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x54,
	0x5f, 0x48, 0x49, 0x52, 0x45, 0x5f, 0x59, 0x45, 0x54, 0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x54,
	0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x43, 0x41, 0x4e,
	0x54, 0x5f, 0x48, 0x49, 0x52, 0x45, 0x5f, 0x48, 0x45, 0x52, 0x45, 0x10, 0x07, 0x12, 0x22, 0x0a,
	0x1e, 0x54, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x4b, 0x41, 0x4d, 0x41, 0x53, 0x10,
	0x08, 0x22, 0x98, 0x01, 0x0a, 0x2d, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x67, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb2, 0x01, 0x0a,
	0x24, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x5e, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x73, 0x22, 0x76, 0x0a, 0x18, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a,
	0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61,
	0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x23, 0x54, 0x61,
	0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x69, 0x64,
	0x12, 0x5e, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73,
	0x22, 0x1a, 0x0a, 0x18, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x40, 0x5a, 0x3e,
	0x67, 0x6f, 0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2f,
	0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x2f, 0x74, 0x61, 0x78, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_taxcollector_proto_rawDescOnce sync.Once
	file_proto_game_taxcollector_proto_rawDescData = file_proto_game_taxcollector_proto_rawDesc
)

func file_proto_game_taxcollector_proto_rawDescGZIP() []byte {
	file_proto_game_taxcollector_proto_rawDescOnce.Do(func() {
		file_proto_game_taxcollector_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_taxcollector_proto_rawDescData)
	})
	return file_proto_game_taxcollector_proto_rawDescData
}

var file_proto_game_taxcollector_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_game_taxcollector_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_proto_game_taxcollector_proto_goTypes = []any{
	(TaxCollectorMovement_TaxCollectorMovementType)(0),    // 0: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovement.TaxCollectorMovementType
	(TaxCollectorErrorEvent_TaxCollectorErrorReason)(0),   // 1: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorErrorEvent.TaxCollectorErrorReason
	(*TaxCollectorUpdatesListenStartRequest)(nil),         // 2: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorUpdatesListenStartRequest
	(*TaxCollectorUpdatesListenStopRequest)(nil),          // 3: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorUpdatesListenStopRequest
	(*TaxCollectorOrderedSpellAddRequest)(nil),            // 4: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorOrderedSpellAddRequest
	(*TaxCollectorOrderedSpellRemoveRequest)(nil),         // 5: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorOrderedSpellRemoveRequest
	(*TaxCollectorOrderedSpellMoveRequest)(nil),           // 6: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorOrderedSpellMoveRequest
	(*TaxCollectorPresetsUpdatesListenStartRequest)(nil),  // 7: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetsUpdatesListenStartRequest
	(*TaxCollectorPresetsUpdatesListenStopRequest)(nil),   // 8: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetsUpdatesListenStopRequest
	(*TaxCollectorPresetSpellAddRequest)(nil),             // 9: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetSpellAddRequest
	(*TaxCollectorPresetSpellRemoveRequest)(nil),          // 10: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetSpellRemoveRequest
	(*TaxCollectorPresetSpellMoveRequest)(nil),            // 11: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetSpellMoveRequest
	(*TaxCollectorTopListEvent)(nil),                      // 12: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorTopListEvent
	(*TaxCollectorStateUpdateEvent)(nil),                  // 13: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorStateUpdateEvent
	(*TaxCollectorAddedEvent)(nil),                        // 14: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorAddedEvent
	(*TaxCollectorRemovedEvent)(nil),                      // 15: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorRemovedEvent
	(*TaxCollectorAttackedEvent)(nil),                     // 16: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorAttackedEvent
	(*TaxCollectorAttackResultEvent)(nil),                 // 17: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorAttackResultEvent
	(*TaxCollectorHarvestedEvent)(nil),                    // 18: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorHarvestedEvent
	(*TaxCollectorMovement)(nil),                          // 19: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovement
	(*TaxCollectorMovementsOfflineEvent)(nil),             // 20: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovementsOfflineEvent
	(*TaxCollectorEquipmentUpdateEvent)(nil),              // 21: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorEquipmentUpdateEvent
	(*TaxCollectorErrorEvent)(nil),                        // 22: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorErrorEvent
	(*TaxCollectorUpdatesListeningConfirmationEvent)(nil), // 23: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorUpdatesListeningConfirmationEvent
	(*TaxCollectorOrderedSpellUpdatedEvent)(nil),          // 24: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorOrderedSpellUpdatedEvent
	(*TaxCollectorPresetsEvent)(nil),                      // 25: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetsEvent
	(*TaxCollectorPresetSpellUpdatedEvent)(nil),           // 26: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetSpellUpdatedEvent
	(*TaxCollectorFightRequest)(nil),                      // 27: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorFightRequest
	(*common.TaxCollectorOrderedSpell)(nil),               // 28: com.ankama.dofus.server.game.protocol.common.TaxCollectorOrderedSpell
	(*common.TaxCollectorInformation)(nil),                // 29: com.ankama.dofus.server.game.protocol.common.TaxCollectorInformation
	(common.TaxCollectorState)(0),                         // 30: com.ankama.dofus.server.game.protocol.common.TaxCollectorState
	(*common.MapExtendedCoordinates)(nil),                 // 31: com.ankama.dofus.server.game.protocol.common.MapExtendedCoordinates
	(*common.ObjectItemInventory)(nil),                    // 32: com.ankama.dofus.server.game.protocol.common.ObjectItemInventory
	(*common.CharacterCharacteristic)(nil),                // 33: com.ankama.dofus.server.game.protocol.common.CharacterCharacteristic
	(*common.TaxCollectorPreset)(nil),                     // 34: com.ankama.dofus.server.game.protocol.common.TaxCollectorPreset
}
var file_proto_game_taxcollector_proto_depIdxs = []int32{
	28, // 0: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorOrderedSpellAddRequest.added_spell:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorOrderedSpell
	28, // 1: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetSpellAddRequest.spell:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorOrderedSpell
	29, // 2: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorTopListEvent.dungeon_tax_collectors_information:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorInformation
	29, // 3: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorTopListEvent.world_tax_collectors_information:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorInformation
	30, // 4: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorStateUpdateEvent.state:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorState
	29, // 5: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorAddedEvent.tax_collector:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorInformation
	31, // 6: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorAttackedEvent.coordinates:type_name -> com.ankama.dofus.server.game.protocol.common.MapExtendedCoordinates
	31, // 7: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorAttackResultEvent.coordinates:type_name -> com.ankama.dofus.server.game.protocol.common.MapExtendedCoordinates
	0,  // 8: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovement.movement_type:type_name -> com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovement.TaxCollectorMovementType
	31, // 9: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovement.coordinates:type_name -> com.ankama.dofus.server.game.protocol.common.MapExtendedCoordinates
	19, // 10: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovementsOfflineEvent.movements:type_name -> com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorMovement
	32, // 11: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorEquipmentUpdateEvent.object:type_name -> com.ankama.dofus.server.game.protocol.common.ObjectItemInventory
	33, // 12: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorEquipmentUpdateEvent.characteristics:type_name -> com.ankama.dofus.server.game.protocol.common.CharacterCharacteristic
	1,  // 13: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorErrorEvent.reason:type_name -> com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorErrorEvent.TaxCollectorErrorReason
	29, // 14: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorUpdatesListeningConfirmationEvent.information:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorInformation
	28, // 15: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorOrderedSpellUpdatedEvent.spells:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorOrderedSpell
	34, // 16: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetsEvent.presets:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorPreset
	28, // 17: com.ankama.dofus.server.game.protocol.taxcollector.TaxCollectorPresetSpellUpdatedEvent.spells:type_name -> com.ankama.dofus.server.game.protocol.common.TaxCollectorOrderedSpell
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_game_taxcollector_proto_init() }
func file_proto_game_taxcollector_proto_init() {
	if File_proto_game_taxcollector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_taxcollector_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorUpdatesListenStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorUpdatesListenStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorOrderedSpellAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorOrderedSpellRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorOrderedSpellMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorPresetsUpdatesListenStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorPresetsUpdatesListenStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorPresetSpellAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorPresetSpellRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorPresetSpellMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorTopListEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorStateUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorAddedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorRemovedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorAttackedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorAttackResultEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorHarvestedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorMovement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorMovementsOfflineEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorEquipmentUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorErrorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorUpdatesListeningConfirmationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorOrderedSpellUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorPresetsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorPresetSpellUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_taxcollector_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*TaxCollectorFightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_taxcollector_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_taxcollector_proto_goTypes,
		DependencyIndexes: file_proto_game_taxcollector_proto_depIdxs,
		EnumInfos:         file_proto_game_taxcollector_proto_enumTypes,
		MessageInfos:      file_proto_game_taxcollector_proto_msgTypes,
	}.Build()
	File_proto_game_taxcollector_proto = out.File
	file_proto_game_taxcollector_proto_rawDesc = nil
	file_proto_game_taxcollector_proto_goTypes = nil
	file_proto_game_taxcollector_proto_depIdxs = nil
}
