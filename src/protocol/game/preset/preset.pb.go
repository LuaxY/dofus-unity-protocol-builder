// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/preset.proto

package preset

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CharacterPresetCreateResponse_Error int32

const (
	CharacterPresetCreateResponse_MAX_QUANTITY      CharacterPresetCreateResponse_Error = 0
	CharacterPresetCreateResponse_INVALID_NAME_SIZE CharacterPresetCreateResponse_Error = 1
	CharacterPresetCreateResponse_PRESET_NOT_FOUND  CharacterPresetCreateResponse_Error = 2
	CharacterPresetCreateResponse_UNKNOWN           CharacterPresetCreateResponse_Error = 3
)

// Enum value maps for CharacterPresetCreateResponse_Error.
var (
	CharacterPresetCreateResponse_Error_name = map[int32]string{
		0: "MAX_QUANTITY",
		1: "INVALID_NAME_SIZE",
		2: "PRESET_NOT_FOUND",
		3: "UNKNOWN",
	}
	CharacterPresetCreateResponse_Error_value = map[string]int32{
		"MAX_QUANTITY":      0,
		"INVALID_NAME_SIZE": 1,
		"PRESET_NOT_FOUND":  2,
		"UNKNOWN":           3,
	}
)

func (x CharacterPresetCreateResponse_Error) Enum() *CharacterPresetCreateResponse_Error {
	p := new(CharacterPresetCreateResponse_Error)
	*p = x
	return p
}

func (x CharacterPresetCreateResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterPresetCreateResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_preset_proto_enumTypes[0].Descriptor()
}

func (CharacterPresetCreateResponse_Error) Type() protoreflect.EnumType {
	return &file_proto_game_preset_proto_enumTypes[0]
}

func (x CharacterPresetCreateResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterPresetCreateResponse_Error.Descriptor instead.
func (CharacterPresetCreateResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{11, 0}
}

type ForgettableSpellPresetCreateResponse_Error int32

const (
	ForgettableSpellPresetCreateResponse_FEATURE_DISABLED  ForgettableSpellPresetCreateResponse_Error = 0
	ForgettableSpellPresetCreateResponse_MAX_QUANTITY      ForgettableSpellPresetCreateResponse_Error = 1
	ForgettableSpellPresetCreateResponse_INVALID_NAME_SIZE ForgettableSpellPresetCreateResponse_Error = 2
	ForgettableSpellPresetCreateResponse_PRESET_NOT_FOUND  ForgettableSpellPresetCreateResponse_Error = 3
	ForgettableSpellPresetCreateResponse_UNKNOWN           ForgettableSpellPresetCreateResponse_Error = 4
)

// Enum value maps for ForgettableSpellPresetCreateResponse_Error.
var (
	ForgettableSpellPresetCreateResponse_Error_name = map[int32]string{
		0: "FEATURE_DISABLED",
		1: "MAX_QUANTITY",
		2: "INVALID_NAME_SIZE",
		3: "PRESET_NOT_FOUND",
		4: "UNKNOWN",
	}
	ForgettableSpellPresetCreateResponse_Error_value = map[string]int32{
		"FEATURE_DISABLED":  0,
		"MAX_QUANTITY":      1,
		"INVALID_NAME_SIZE": 2,
		"PRESET_NOT_FOUND":  3,
		"UNKNOWN":           4,
	}
)

func (x ForgettableSpellPresetCreateResponse_Error) Enum() *ForgettableSpellPresetCreateResponse_Error {
	p := new(ForgettableSpellPresetCreateResponse_Error)
	*p = x
	return p
}

func (x ForgettableSpellPresetCreateResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgettableSpellPresetCreateResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_preset_proto_enumTypes[1].Descriptor()
}

func (ForgettableSpellPresetCreateResponse_Error) Type() protoreflect.EnumType {
	return &file_proto_game_preset_proto_enumTypes[1]
}

func (x ForgettableSpellPresetCreateResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgettableSpellPresetCreateResponse_Error.Descriptor instead.
func (ForgettableSpellPresetCreateResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{13, 0}
}

type PresetUseResponse_ResultEnum int32

const (
	PresetUseResponse_OK                    PresetUseResponse_ResultEnum = 0
	PresetUseResponse_ERROR_COOLDOWN        PresetUseResponse_ResultEnum = 1
	PresetUseResponse_ERROR_BAD_PRESET_UUID PresetUseResponse_ResultEnum = 2
	PresetUseResponse_ERROR_INVALID_STATE   PresetUseResponse_ResultEnum = 3
	PresetUseResponse_ERROR_UNKNOWN         PresetUseResponse_ResultEnum = 4
	PresetUseResponse_ERROR_INVALID_DATA    PresetUseResponse_ResultEnum = 5
	PresetUseResponse_MISSING_SPELLS        PresetUseResponse_ResultEnum = 6
)

// Enum value maps for PresetUseResponse_ResultEnum.
var (
	PresetUseResponse_ResultEnum_name = map[int32]string{
		0: "OK",
		1: "ERROR_COOLDOWN",
		2: "ERROR_BAD_PRESET_UUID",
		3: "ERROR_INVALID_STATE",
		4: "ERROR_UNKNOWN",
		5: "ERROR_INVALID_DATA",
		6: "MISSING_SPELLS",
	}
	PresetUseResponse_ResultEnum_value = map[string]int32{
		"OK":                    0,
		"ERROR_COOLDOWN":        1,
		"ERROR_BAD_PRESET_UUID": 2,
		"ERROR_INVALID_STATE":   3,
		"ERROR_UNKNOWN":         4,
		"ERROR_INVALID_DATA":    5,
		"MISSING_SPELLS":        6,
	}
)

func (x PresetUseResponse_ResultEnum) Enum() *PresetUseResponse_ResultEnum {
	p := new(PresetUseResponse_ResultEnum)
	*p = x
	return p
}

func (x PresetUseResponse_ResultEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresetUseResponse_ResultEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_preset_proto_enumTypes[2].Descriptor()
}

func (PresetUseResponse_ResultEnum) Type() protoreflect.EnumType {
	return &file_proto_game_preset_proto_enumTypes[2]
}

func (x PresetUseResponse_ResultEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresetUseResponse_ResultEnum.Descriptor instead.
func (PresetUseResponse_ResultEnum) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{27, 0}
}

type PresetSpellUpdateRequest_Target int32

const (
	PresetSpellUpdateRequest_CHARACTER         PresetSpellUpdateRequest_Target = 0
	PresetSpellUpdateRequest_FORGETTABLE_BASE  PresetSpellUpdateRequest_Target = 1
	PresetSpellUpdateRequest_FORGETTABLE_SPELL PresetSpellUpdateRequest_Target = 2
)

// Enum value maps for PresetSpellUpdateRequest_Target.
var (
	PresetSpellUpdateRequest_Target_name = map[int32]string{
		0: "CHARACTER",
		1: "FORGETTABLE_BASE",
		2: "FORGETTABLE_SPELL",
	}
	PresetSpellUpdateRequest_Target_value = map[string]int32{
		"CHARACTER":         0,
		"FORGETTABLE_BASE":  1,
		"FORGETTABLE_SPELL": 2,
	}
)

func (x PresetSpellUpdateRequest_Target) Enum() *PresetSpellUpdateRequest_Target {
	p := new(PresetSpellUpdateRequest_Target)
	*p = x
	return p
}

func (x PresetSpellUpdateRequest_Target) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresetSpellUpdateRequest_Target) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_preset_proto_enumTypes[3].Descriptor()
}

func (PresetSpellUpdateRequest_Target) Type() protoreflect.EnumType {
	return &file_proto_game_preset_proto_enumTypes[3]
}

func (x PresetSpellUpdateRequest_Target) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresetSpellUpdateRequest_Target.Descriptor instead.
func (PresetSpellUpdateRequest_Target) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{28, 0}
}

type PresetRenameResponse_Result int32

const (
	PresetRenameResponse_SUCCESS          PresetRenameResponse_Result = 0
	PresetRenameResponse_PRESET_NOT_FOUND PresetRenameResponse_Result = 1
	PresetRenameResponse_ERROR_NAME_SIZE  PresetRenameResponse_Result = 2
	PresetRenameResponse_UNKNOWN_ERROR    PresetRenameResponse_Result = 3
	PresetRenameResponse_FEATURE_DISABLED PresetRenameResponse_Result = 4
)

// Enum value maps for PresetRenameResponse_Result.
var (
	PresetRenameResponse_Result_name = map[int32]string{
		0: "SUCCESS",
		1: "PRESET_NOT_FOUND",
		2: "ERROR_NAME_SIZE",
		3: "UNKNOWN_ERROR",
		4: "FEATURE_DISABLED",
	}
	PresetRenameResponse_Result_value = map[string]int32{
		"SUCCESS":          0,
		"PRESET_NOT_FOUND": 1,
		"ERROR_NAME_SIZE":  2,
		"UNKNOWN_ERROR":    3,
		"FEATURE_DISABLED": 4,
	}
)

func (x PresetRenameResponse_Result) Enum() *PresetRenameResponse_Result {
	p := new(PresetRenameResponse_Result)
	*p = x
	return p
}

func (x PresetRenameResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresetRenameResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_preset_proto_enumTypes[4].Descriptor()
}

func (PresetRenameResponse_Result) Type() protoreflect.EnumType {
	return &file_proto_game_preset_proto_enumTypes[4]
}

func (x PresetRenameResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresetRenameResponse_Result.Descriptor instead.
func (PresetRenameResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{35, 0}
}

type CharacterPresetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                 string                                          `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string                                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SymbolId             int32                                           `protobuf:"varint,3,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	IsFavorite           bool                                            `protobuf:"varint,4,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	LastModificationDate string                                          `protobuf:"bytes,5,opt,name=last_modification_date,json=lastModificationDate,proto3" json:"last_modification_date,omitempty"`
	EquipmentByPosition  []*CharacterPresetInfo_EquipmentByPositionEntry `protobuf:"bytes,6,rep,name=equipment_by_position,json=equipmentByPosition,proto3" json:"equipment_by_position,omitempty"`
	SpellPreset          *SpellPreset                                    `protobuf:"bytes,7,opt,name=spell_preset,json=spellPreset,proto3" json:"spell_preset,omitempty"`
	CharacteristicsInfo  *CharacteristicsInfo                            `protobuf:"bytes,8,opt,name=characteristics_info,json=characteristicsInfo,proto3" json:"characteristics_info,omitempty"`
	PresetLook           *PresetLook                                     `protobuf:"bytes,9,opt,name=preset_look,json=presetLook,proto3" json:"preset_look,omitempty"`
	Ride                 *Ride                                           `protobuf:"bytes,10,opt,name=ride,proto3,oneof" json:"ride,omitempty"`
	OutfitUuid           *string                                         `protobuf:"bytes,11,opt,name=outfit_uuid,json=outfitUuid,proto3,oneof" json:"outfit_uuid,omitempty"`
}

func (x *CharacterPresetInfo) Reset() {
	*x = CharacterPresetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetInfo) ProtoMessage() {}

func (x *CharacterPresetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetInfo.ProtoReflect.Descriptor instead.
func (*CharacterPresetInfo) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{0}
}

func (x *CharacterPresetInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CharacterPresetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterPresetInfo) GetSymbolId() int32 {
	if x != nil {
		return x.SymbolId
	}
	return 0
}

func (x *CharacterPresetInfo) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *CharacterPresetInfo) GetLastModificationDate() string {
	if x != nil {
		return x.LastModificationDate
	}
	return ""
}

func (x *CharacterPresetInfo) GetEquipmentByPosition() []*CharacterPresetInfo_EquipmentByPositionEntry {
	if x != nil {
		return x.EquipmentByPosition
	}
	return nil
}

func (x *CharacterPresetInfo) GetSpellPreset() *SpellPreset {
	if x != nil {
		return x.SpellPreset
	}
	return nil
}

func (x *CharacterPresetInfo) GetCharacteristicsInfo() *CharacteristicsInfo {
	if x != nil {
		return x.CharacteristicsInfo
	}
	return nil
}

func (x *CharacterPresetInfo) GetPresetLook() *PresetLook {
	if x != nil {
		return x.PresetLook
	}
	return nil
}

func (x *CharacterPresetInfo) GetRide() *Ride {
	if x != nil {
		return x.Ride
	}
	return nil
}

func (x *CharacterPresetInfo) GetOutfitUuid() string {
	if x != nil && x.OutfitUuid != nil {
		return *x.OutfitUuid
	}
	return ""
}

type ForgettableSpellPresetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                     string                                                      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                     string                                                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SymbolId                 int32                                                       `protobuf:"varint,3,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	IsFavorite               bool                                                        `protobuf:"varint,4,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	LastModificationDate     string                                                      `protobuf:"bytes,5,opt,name=last_modification_date,json=lastModificationDate,proto3" json:"last_modification_date,omitempty"`
	SpellPreset              *SpellPreset                                                `protobuf:"bytes,6,opt,name=spell_preset,json=spellPreset,proto3" json:"spell_preset,omitempty"`
	ForgettableSpellInfoById []*ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry `protobuf:"bytes,7,rep,name=forgettable_spell_info_by_id,json=forgettableSpellInfoById,proto3" json:"forgettable_spell_info_by_id,omitempty"`
}

func (x *ForgettableSpellPresetInfo) Reset() {
	*x = ForgettableSpellPresetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetInfo) ProtoMessage() {}

func (x *ForgettableSpellPresetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetInfo.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetInfo) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{1}
}

func (x *ForgettableSpellPresetInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ForgettableSpellPresetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForgettableSpellPresetInfo) GetSymbolId() int32 {
	if x != nil {
		return x.SymbolId
	}
	return 0
}

func (x *ForgettableSpellPresetInfo) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *ForgettableSpellPresetInfo) GetLastModificationDate() string {
	if x != nil {
		return x.LastModificationDate
	}
	return ""
}

func (x *ForgettableSpellPresetInfo) GetSpellPreset() *SpellPreset {
	if x != nil {
		return x.SpellPreset
	}
	return nil
}

func (x *ForgettableSpellPresetInfo) GetForgettableSpellInfoById() []*ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry {
	if x != nil {
		return x.ForgettableSpellInfoById
	}
	return nil
}

type PresetLook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LookWithOutfit    *common.EntityLook `protobuf:"bytes,1,opt,name=look_with_outfit,json=lookWithOutfit,proto3" json:"look_with_outfit,omitempty"`
	LookWithoutOutfit *common.EntityLook `protobuf:"bytes,2,opt,name=look_without_outfit,json=lookWithoutOutfit,proto3" json:"look_without_outfit,omitempty"`
}

func (x *PresetLook) Reset() {
	*x = PresetLook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetLook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetLook) ProtoMessage() {}

func (x *PresetLook) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetLook.ProtoReflect.Descriptor instead.
func (*PresetLook) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{2}
}

func (x *PresetLook) GetLookWithOutfit() *common.EntityLook {
	if x != nil {
		return x.LookWithOutfit
	}
	return nil
}

func (x *PresetLook) GetLookWithoutOutfit() *common.EntityLook {
	if x != nil {
		return x.LookWithoutOutfit
	}
	return nil
}

type CharacteristicsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacteristicDetailsById []*CharacteristicsInfo_CharacteristicDetailsByIdEntry `protobuf:"bytes,1,rep,name=characteristic_details_by_id,json=characteristicDetailsById,proto3" json:"characteristic_details_by_id,omitempty"`
}

func (x *CharacteristicsInfo) Reset() {
	*x = CharacteristicsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacteristicsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacteristicsInfo) ProtoMessage() {}

func (x *CharacteristicsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacteristicsInfo.ProtoReflect.Descriptor instead.
func (*CharacteristicsInfo) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{3}
}

func (x *CharacteristicsInfo) GetCharacteristicDetailsById() []*CharacteristicsInfo_CharacteristicDetailsByIdEntry {
	if x != nil {
		return x.CharacteristicDetailsById
	}
	return nil
}

type Equipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid     int32                  `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Effects []*common.ObjectEffect `protobuf:"bytes,3,rep,name=effects,proto3" json:"effects,omitempty"`
	Uid     *int32                 `protobuf:"varint,2,opt,name=uid,proto3,oneof" json:"uid,omitempty"`
}

func (x *Equipment) Reset() {
	*x = Equipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Equipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment) ProtoMessage() {}

func (x *Equipment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment.ProtoReflect.Descriptor instead.
func (*Equipment) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{4}
}

func (x *Equipment) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *Equipment) GetEffects() []*common.ObjectEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *Equipment) GetUid() int32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

type Ride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId       int32 `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Level         int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	IsCurrentRide bool  `protobuf:"varint,3,opt,name=is_current_ride,json=isCurrentRide,proto3" json:"is_current_ride,omitempty"`
}

func (x *Ride) Reset() {
	*x = Ride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ride) ProtoMessage() {}

func (x *Ride) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ride.ProtoReflect.Descriptor instead.
func (*Ride) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{5}
}

func (x *Ride) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *Ride) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Ride) GetIsCurrentRide() bool {
	if x != nil {
		return x.IsCurrentRide
	}
	return false
}

type SpellPositions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Positions []int32 `protobuf:"varint,1,rep,packed,name=positions,proto3" json:"positions,omitempty"`
}

func (x *SpellPositions) Reset() {
	*x = SpellPositions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellPositions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellPositions) ProtoMessage() {}

func (x *SpellPositions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellPositions.ProtoReflect.Descriptor instead.
func (*SpellPositions) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{6}
}

func (x *SpellPositions) GetPositions() []int32 {
	if x != nil {
		return x.Positions
	}
	return nil
}

type ForgettableSpellInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellPositions *SpellPositions `protobuf:"bytes,1,opt,name=spell_positions,json=spellPositions,proto3" json:"spell_positions,omitempty"`
	IsMissing      bool            `protobuf:"varint,2,opt,name=is_missing,json=isMissing,proto3" json:"is_missing,omitempty"`
}

func (x *ForgettableSpellInfo) Reset() {
	*x = ForgettableSpellInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellInfo) ProtoMessage() {}

func (x *ForgettableSpellInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellInfo.ProtoReflect.Descriptor instead.
func (*ForgettableSpellInfo) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{7}
}

func (x *ForgettableSpellInfo) GetSpellPositions() *SpellPositions {
	if x != nil {
		return x.SpellPositions
	}
	return nil
}

func (x *ForgettableSpellInfo) GetIsMissing() bool {
	if x != nil {
		return x.IsMissing
	}
	return false
}

type SpellPreset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellPositionsById []*SpellPreset_SpellPositionsByIdEntry `protobuf:"bytes,1,rep,name=spell_positions_by_id,json=spellPositionsById,proto3" json:"spell_positions_by_id,omitempty"`
}

func (x *SpellPreset) Reset() {
	*x = SpellPreset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellPreset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellPreset) ProtoMessage() {}

func (x *SpellPreset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellPreset.ProtoReflect.Descriptor instead.
func (*SpellPreset) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{8}
}

func (x *SpellPreset) GetSpellPositionsById() []*SpellPreset_SpellPositionsByIdEntry {
	if x != nil {
		return x.SpellPositionsById
	}
	return nil
}

type PresetOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Origin:
	//
	//	*PresetOrigin_Empty
	//	*PresetOrigin_Player
	//	*PresetOrigin_Clone
	Origin isPresetOrigin_Origin `protobuf_oneof:"origin"`
}

func (x *PresetOrigin) Reset() {
	*x = PresetOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetOrigin) ProtoMessage() {}

func (x *PresetOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetOrigin.ProtoReflect.Descriptor instead.
func (*PresetOrigin) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{9}
}

func (m *PresetOrigin) GetOrigin() isPresetOrigin_Origin {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (x *PresetOrigin) GetEmpty() *PresetOrigin_EmptyPreset {
	if x, ok := x.GetOrigin().(*PresetOrigin_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *PresetOrigin) GetPlayer() *PresetOrigin_PlayerCopy {
	if x, ok := x.GetOrigin().(*PresetOrigin_Player); ok {
		return x.Player
	}
	return nil
}

func (x *PresetOrigin) GetClone() *PresetOrigin_PresetClone {
	if x, ok := x.GetOrigin().(*PresetOrigin_Clone); ok {
		return x.Clone
	}
	return nil
}

type isPresetOrigin_Origin interface {
	isPresetOrigin_Origin()
}

type PresetOrigin_Empty struct {
	Empty *PresetOrigin_EmptyPreset `protobuf:"bytes,1,opt,name=empty,proto3,oneof"`
}

type PresetOrigin_Player struct {
	Player *PresetOrigin_PlayerCopy `protobuf:"bytes,2,opt,name=player,proto3,oneof"`
}

type PresetOrigin_Clone struct {
	Clone *PresetOrigin_PresetClone `protobuf:"bytes,3,opt,name=clone,proto3,oneof"`
}

func (*PresetOrigin_Empty) isPresetOrigin_Origin() {}

func (*PresetOrigin_Player) isPresetOrigin_Origin() {}

func (*PresetOrigin_Clone) isPresetOrigin_Origin() {}

type CharacterPresetCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SymbolId int32         `protobuf:"varint,2,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Origin   *PresetOrigin `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *CharacterPresetCreateRequest) Reset() {
	*x = CharacterPresetCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetCreateRequest) ProtoMessage() {}

func (x *CharacterPresetCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetCreateRequest.ProtoReflect.Descriptor instead.
func (*CharacterPresetCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{10}
}

func (x *CharacterPresetCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterPresetCreateRequest) GetSymbolId() int32 {
	if x != nil {
		return x.SymbolId
	}
	return 0
}

func (x *CharacterPresetCreateRequest) GetOrigin() *PresetOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type CharacterPresetCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CharacterPresetCreateResponse_Success_
	//	*CharacterPresetCreateResponse_Error_
	Result isCharacterPresetCreateResponse_Result `protobuf_oneof:"result"`
}

func (x *CharacterPresetCreateResponse) Reset() {
	*x = CharacterPresetCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetCreateResponse) ProtoMessage() {}

func (x *CharacterPresetCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetCreateResponse.ProtoReflect.Descriptor instead.
func (*CharacterPresetCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{11}
}

func (m *CharacterPresetCreateResponse) GetResult() isCharacterPresetCreateResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CharacterPresetCreateResponse) GetSuccess() *CharacterPresetCreateResponse_Success {
	if x, ok := x.GetResult().(*CharacterPresetCreateResponse_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *CharacterPresetCreateResponse) GetError() CharacterPresetCreateResponse_Error {
	if x, ok := x.GetResult().(*CharacterPresetCreateResponse_Error_); ok {
		return x.Error
	}
	return CharacterPresetCreateResponse_MAX_QUANTITY
}

type isCharacterPresetCreateResponse_Result interface {
	isCharacterPresetCreateResponse_Result()
}

type CharacterPresetCreateResponse_Success_ struct {
	Success *CharacterPresetCreateResponse_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type CharacterPresetCreateResponse_Error_ struct {
	Error CharacterPresetCreateResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse_Error,oneof"`
}

func (*CharacterPresetCreateResponse_Success_) isCharacterPresetCreateResponse_Result() {}

func (*CharacterPresetCreateResponse_Error_) isCharacterPresetCreateResponse_Result() {}

type ForgettableSpellPresetCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SymbolId int32         `protobuf:"varint,2,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Origin   *PresetOrigin `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ForgettableSpellPresetCreateRequest) Reset() {
	*x = ForgettableSpellPresetCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetCreateRequest) ProtoMessage() {}

func (x *ForgettableSpellPresetCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetCreateRequest.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{12}
}

func (x *ForgettableSpellPresetCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForgettableSpellPresetCreateRequest) GetSymbolId() int32 {
	if x != nil {
		return x.SymbolId
	}
	return 0
}

func (x *ForgettableSpellPresetCreateRequest) GetOrigin() *PresetOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type ForgettableSpellPresetCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*ForgettableSpellPresetCreateResponse_Success_
	//	*ForgettableSpellPresetCreateResponse_Error_
	Result isForgettableSpellPresetCreateResponse_Result `protobuf_oneof:"result"`
}

func (x *ForgettableSpellPresetCreateResponse) Reset() {
	*x = ForgettableSpellPresetCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetCreateResponse) ProtoMessage() {}

func (x *ForgettableSpellPresetCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetCreateResponse.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{13}
}

func (m *ForgettableSpellPresetCreateResponse) GetResult() isForgettableSpellPresetCreateResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ForgettableSpellPresetCreateResponse) GetSuccess() *ForgettableSpellPresetCreateResponse_Success {
	if x, ok := x.GetResult().(*ForgettableSpellPresetCreateResponse_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *ForgettableSpellPresetCreateResponse) GetError() ForgettableSpellPresetCreateResponse_Error {
	if x, ok := x.GetResult().(*ForgettableSpellPresetCreateResponse_Error_); ok {
		return x.Error
	}
	return ForgettableSpellPresetCreateResponse_FEATURE_DISABLED
}

type isForgettableSpellPresetCreateResponse_Result interface {
	isForgettableSpellPresetCreateResponse_Result()
}

type ForgettableSpellPresetCreateResponse_Success_ struct {
	Success *ForgettableSpellPresetCreateResponse_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type ForgettableSpellPresetCreateResponse_Error_ struct {
	Error ForgettableSpellPresetCreateResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse_Error,oneof"`
}

func (*ForgettableSpellPresetCreateResponse_Success_) isForgettableSpellPresetCreateResponse_Result() {
}

func (*ForgettableSpellPresetCreateResponse_Error_) isForgettableSpellPresetCreateResponse_Result() {}

type CharacterPresetSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Origin *PresetOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *CharacterPresetSetRequest) Reset() {
	*x = CharacterPresetSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetSetRequest) ProtoMessage() {}

func (x *CharacterPresetSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetSetRequest.ProtoReflect.Descriptor instead.
func (*CharacterPresetSetRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{14}
}

func (x *CharacterPresetSetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CharacterPresetSetRequest) GetOrigin() *PresetOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type CharacterPresetSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess  bool                 `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	PresetInfo *CharacterPresetInfo `protobuf:"bytes,2,opt,name=preset_info,json=presetInfo,proto3,oneof" json:"preset_info,omitempty"`
}

func (x *CharacterPresetSetResponse) Reset() {
	*x = CharacterPresetSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetSetResponse) ProtoMessage() {}

func (x *CharacterPresetSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetSetResponse.ProtoReflect.Descriptor instead.
func (*CharacterPresetSetResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{15}
}

func (x *CharacterPresetSetResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *CharacterPresetSetResponse) GetPresetInfo() *CharacterPresetInfo {
	if x != nil {
		return x.PresetInfo
	}
	return nil
}

type ForgettableSpellPresetSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Origin *PresetOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ForgettableSpellPresetSetRequest) Reset() {
	*x = ForgettableSpellPresetSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetSetRequest) ProtoMessage() {}

func (x *ForgettableSpellPresetSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetSetRequest.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetSetRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{16}
}

func (x *ForgettableSpellPresetSetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ForgettableSpellPresetSetRequest) GetOrigin() *PresetOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type ForgettableSpellPresetSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess  bool                        `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	PresetInfo *ForgettableSpellPresetInfo `protobuf:"bytes,2,opt,name=preset_info,json=presetInfo,proto3,oneof" json:"preset_info,omitempty"`
}

func (x *ForgettableSpellPresetSetResponse) Reset() {
	*x = ForgettableSpellPresetSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetSetResponse) ProtoMessage() {}

func (x *ForgettableSpellPresetSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetSetResponse.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetSetResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{17}
}

func (x *ForgettableSpellPresetSetResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *ForgettableSpellPresetSetResponse) GetPresetInfo() *ForgettableSpellPresetInfo {
	if x != nil {
		return x.PresetInfo
	}
	return nil
}

type PresetSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type common.PresetType `protobuf:"varint,1,opt,name=type,proto3,enum=com.ankama.dofus.server.game.protocol.common.PresetType" json:"type,omitempty"`
	Uuid string            `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *PresetSaveRequest) Reset() {
	*x = PresetSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSaveRequest) ProtoMessage() {}

func (x *PresetSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSaveRequest.ProtoReflect.Descriptor instead.
func (*PresetSaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{18}
}

func (x *PresetSaveRequest) GetType() common.PresetType {
	if x != nil {
		return x.Type
	}
	return common.PresetType(0)
}

func (x *PresetSaveRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type PresetSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *PresetSaveResponse) Reset() {
	*x = PresetSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSaveResponse) ProtoMessage() {}

func (x *PresetSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSaveResponse.ProtoReflect.Descriptor instead.
func (*PresetSaveResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{19}
}

func (x *PresetSaveResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type CharacterPresetResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CharacterPresetResetRequest) Reset() {
	*x = CharacterPresetResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetResetRequest) ProtoMessage() {}

func (x *CharacterPresetResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetResetRequest.ProtoReflect.Descriptor instead.
func (*CharacterPresetResetRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{20}
}

func (x *CharacterPresetResetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CharacterPresetResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess  bool                 `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	PresetInfo *CharacterPresetInfo `protobuf:"bytes,2,opt,name=preset_info,json=presetInfo,proto3,oneof" json:"preset_info,omitempty"`
}

func (x *CharacterPresetResetResponse) Reset() {
	*x = CharacterPresetResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetResetResponse) ProtoMessage() {}

func (x *CharacterPresetResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetResetResponse.ProtoReflect.Descriptor instead.
func (*CharacterPresetResetResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{21}
}

func (x *CharacterPresetResetResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *CharacterPresetResetResponse) GetPresetInfo() *CharacterPresetInfo {
	if x != nil {
		return x.PresetInfo
	}
	return nil
}

type ForgettableSpellPresetResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ForgettableSpellPresetResetRequest) Reset() {
	*x = ForgettableSpellPresetResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetResetRequest) ProtoMessage() {}

func (x *ForgettableSpellPresetResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetResetRequest.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetResetRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{22}
}

func (x *ForgettableSpellPresetResetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ForgettableSpellPresetResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess  bool                        `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	PresetInfo *ForgettableSpellPresetInfo `protobuf:"bytes,2,opt,name=preset_info,json=presetInfo,proto3,oneof" json:"preset_info,omitempty"`
}

func (x *ForgettableSpellPresetResetResponse) Reset() {
	*x = ForgettableSpellPresetResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetResetResponse) ProtoMessage() {}

func (x *ForgettableSpellPresetResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetResetResponse.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetResetResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{23}
}

func (x *ForgettableSpellPresetResetResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *ForgettableSpellPresetResetResponse) GetPresetInfo() *ForgettableSpellPresetInfo {
	if x != nil {
		return x.PresetInfo
	}
	return nil
}

type PresetDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string            `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	PresetType common.PresetType `protobuf:"varint,2,opt,name=preset_type,json=presetType,proto3,enum=com.ankama.dofus.server.game.protocol.common.PresetType" json:"preset_type,omitempty"`
}

func (x *PresetDeleteRequest) Reset() {
	*x = PresetDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetDeleteRequest) ProtoMessage() {}

func (x *PresetDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetDeleteRequest.ProtoReflect.Descriptor instead.
func (*PresetDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{24}
}

func (x *PresetDeleteRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetDeleteRequest) GetPresetType() common.PresetType {
	if x != nil {
		return x.PresetType
	}
	return common.PresetType(0)
}

type PresetDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *PresetDeleteResponse) Reset() {
	*x = PresetDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetDeleteResponse) ProtoMessage() {}

func (x *PresetDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetDeleteResponse.ProtoReflect.Descriptor instead.
func (*PresetDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{25}
}

func (x *PresetDeleteResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type PresetUseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string            `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	PresetType common.PresetType `protobuf:"varint,2,opt,name=preset_type,json=presetType,proto3,enum=com.ankama.dofus.server.game.protocol.common.PresetType" json:"preset_type,omitempty"`
}

func (x *PresetUseRequest) Reset() {
	*x = PresetUseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetUseRequest) ProtoMessage() {}

func (x *PresetUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetUseRequest.ProtoReflect.Descriptor instead.
func (*PresetUseRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{26}
}

func (x *PresetUseRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetUseRequest) GetPresetType() common.PresetType {
	if x != nil {
		return x.PresetType
	}
	return common.PresetType(0)
}

type PresetUseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*PresetUseResponse_ResultEnum_
	//	*PresetUseResponse_MissingEquipments_
	Result isPresetUseResponse_Result `protobuf_oneof:"result"`
}

func (x *PresetUseResponse) Reset() {
	*x = PresetUseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetUseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetUseResponse) ProtoMessage() {}

func (x *PresetUseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetUseResponse.ProtoReflect.Descriptor instead.
func (*PresetUseResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{27}
}

func (m *PresetUseResponse) GetResult() isPresetUseResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *PresetUseResponse) GetResultEnum() PresetUseResponse_ResultEnum {
	if x, ok := x.GetResult().(*PresetUseResponse_ResultEnum_); ok {
		return x.ResultEnum
	}
	return PresetUseResponse_OK
}

func (x *PresetUseResponse) GetMissingEquipments() *PresetUseResponse_MissingEquipments {
	if x, ok := x.GetResult().(*PresetUseResponse_MissingEquipments_); ok {
		return x.MissingEquipments
	}
	return nil
}

type isPresetUseResponse_Result interface {
	isPresetUseResponse_Result()
}

type PresetUseResponse_ResultEnum_ struct {
	ResultEnum PresetUseResponse_ResultEnum `protobuf:"varint,1,opt,name=result_enum,json=resultEnum,proto3,enum=com.ankama.dofus.server.game.protocol.preset.PresetUseResponse_ResultEnum,oneof"`
}

type PresetUseResponse_MissingEquipments_ struct {
	MissingEquipments *PresetUseResponse_MissingEquipments `protobuf:"bytes,2,opt,name=missing_equipments,json=missingEquipments,proto3,oneof"`
}

func (*PresetUseResponse_ResultEnum_) isPresetUseResponse_Result() {}

func (*PresetUseResponse_MissingEquipments_) isPresetUseResponse_Result() {}

type PresetSpellUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid  string                          `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	Target      PresetSpellUpdateRequest_Target `protobuf:"varint,2,opt,name=target,proto3,enum=com.ankama.dofus.server.game.protocol.preset.PresetSpellUpdateRequest_Target" json:"target,omitempty"`
	SpellPreset *SpellPreset                    `protobuf:"bytes,3,opt,name=spell_preset,json=spellPreset,proto3" json:"spell_preset,omitempty"`
}

func (x *PresetSpellUpdateRequest) Reset() {
	*x = PresetSpellUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSpellUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSpellUpdateRequest) ProtoMessage() {}

func (x *PresetSpellUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSpellUpdateRequest.ProtoReflect.Descriptor instead.
func (*PresetSpellUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{28}
}

func (x *PresetSpellUpdateRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetSpellUpdateRequest) GetTarget() PresetSpellUpdateRequest_Target {
	if x != nil {
		return x.Target
	}
	return PresetSpellUpdateRequest_CHARACTER
}

func (x *PresetSpellUpdateRequest) GetSpellPreset() *SpellPreset {
	if x != nil {
		return x.SpellPreset
	}
	return nil
}

type PresetSpellUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *PresetSpellUpdateResponse) Reset() {
	*x = PresetSpellUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSpellUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSpellUpdateResponse) ProtoMessage() {}

func (x *PresetSpellUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSpellUpdateResponse.ProtoReflect.Descriptor instead.
func (*PresetSpellUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{29}
}

func (x *PresetSpellUpdateResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type PresetStatUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string                                   `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	StatById   []*PresetStatUpdateRequest_StatByIdEntry `protobuf:"bytes,2,rep,name=stat_by_id,json=statById,proto3" json:"stat_by_id,omitempty"`
}

func (x *PresetStatUpdateRequest) Reset() {
	*x = PresetStatUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetStatUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetStatUpdateRequest) ProtoMessage() {}

func (x *PresetStatUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetStatUpdateRequest.ProtoReflect.Descriptor instead.
func (*PresetStatUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{30}
}

func (x *PresetStatUpdateRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetStatUpdateRequest) GetStatById() []*PresetStatUpdateRequest_StatByIdEntry {
	if x != nil {
		return x.StatById
	}
	return nil
}

type PresetStatUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess           bool                 `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	CharacteristicsInfo *CharacteristicsInfo `protobuf:"bytes,2,opt,name=characteristics_info,json=characteristicsInfo,proto3,oneof" json:"characteristics_info,omitempty"`
}

func (x *PresetStatUpdateResponse) Reset() {
	*x = PresetStatUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetStatUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetStatUpdateResponse) ProtoMessage() {}

func (x *PresetStatUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetStatUpdateResponse.ProtoReflect.Descriptor instead.
func (*PresetStatUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{31}
}

func (x *PresetStatUpdateResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *PresetStatUpdateResponse) GetCharacteristicsInfo() *CharacteristicsInfo {
	if x != nil {
		return x.CharacteristicsInfo
	}
	return nil
}

type PresetEquipmentUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterPresetUuid string `protobuf:"bytes,1,opt,name=character_preset_uuid,json=characterPresetUuid,proto3" json:"character_preset_uuid,omitempty"`
	// Types that are assignable to Action:
	//
	//	*PresetEquipmentUpdateRequest_SetItem_
	//	*PresetEquipmentUpdateRequest_RemoveItem_
	//	*PresetEquipmentUpdateRequest_SetRide_
	//	*PresetEquipmentUpdateRequest_RemoveRide_
	Action isPresetEquipmentUpdateRequest_Action `protobuf_oneof:"action"`
}

func (x *PresetEquipmentUpdateRequest) Reset() {
	*x = PresetEquipmentUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetEquipmentUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetEquipmentUpdateRequest) ProtoMessage() {}

func (x *PresetEquipmentUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetEquipmentUpdateRequest.ProtoReflect.Descriptor instead.
func (*PresetEquipmentUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{32}
}

func (x *PresetEquipmentUpdateRequest) GetCharacterPresetUuid() string {
	if x != nil {
		return x.CharacterPresetUuid
	}
	return ""
}

func (m *PresetEquipmentUpdateRequest) GetAction() isPresetEquipmentUpdateRequest_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *PresetEquipmentUpdateRequest) GetSetItem() *PresetEquipmentUpdateRequest_SetItem {
	if x, ok := x.GetAction().(*PresetEquipmentUpdateRequest_SetItem_); ok {
		return x.SetItem
	}
	return nil
}

func (x *PresetEquipmentUpdateRequest) GetRemoveItem() *PresetEquipmentUpdateRequest_RemoveItem {
	if x, ok := x.GetAction().(*PresetEquipmentUpdateRequest_RemoveItem_); ok {
		return x.RemoveItem
	}
	return nil
}

func (x *PresetEquipmentUpdateRequest) GetSetRide() *PresetEquipmentUpdateRequest_SetRide {
	if x, ok := x.GetAction().(*PresetEquipmentUpdateRequest_SetRide_); ok {
		return x.SetRide
	}
	return nil
}

func (x *PresetEquipmentUpdateRequest) GetRemoveRide() *PresetEquipmentUpdateRequest_RemoveRide {
	if x, ok := x.GetAction().(*PresetEquipmentUpdateRequest_RemoveRide_); ok {
		return x.RemoveRide
	}
	return nil
}

type isPresetEquipmentUpdateRequest_Action interface {
	isPresetEquipmentUpdateRequest_Action()
}

type PresetEquipmentUpdateRequest_SetItem_ struct {
	SetItem *PresetEquipmentUpdateRequest_SetItem `protobuf:"bytes,2,opt,name=set_item,json=setItem,proto3,oneof"`
}

type PresetEquipmentUpdateRequest_RemoveItem_ struct {
	RemoveItem *PresetEquipmentUpdateRequest_RemoveItem `protobuf:"bytes,3,opt,name=remove_item,json=removeItem,proto3,oneof"`
}

type PresetEquipmentUpdateRequest_SetRide_ struct {
	SetRide *PresetEquipmentUpdateRequest_SetRide `protobuf:"bytes,4,opt,name=set_ride,json=setRide,proto3,oneof"`
}

type PresetEquipmentUpdateRequest_RemoveRide_ struct {
	RemoveRide *PresetEquipmentUpdateRequest_RemoveRide `protobuf:"bytes,5,opt,name=remove_ride,json=removeRide,proto3,oneof"`
}

func (*PresetEquipmentUpdateRequest_SetItem_) isPresetEquipmentUpdateRequest_Action() {}

func (*PresetEquipmentUpdateRequest_RemoveItem_) isPresetEquipmentUpdateRequest_Action() {}

func (*PresetEquipmentUpdateRequest_SetRide_) isPresetEquipmentUpdateRequest_Action() {}

func (*PresetEquipmentUpdateRequest_RemoveRide_) isPresetEquipmentUpdateRequest_Action() {}

type PresetEquipmentUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess        bool                                            `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	EquipmentRefresh *PresetEquipmentUpdateResponse_EquipmentRefresh `protobuf:"bytes,2,opt,name=equipment_refresh,json=equipmentRefresh,proto3,oneof" json:"equipment_refresh,omitempty"`
}

func (x *PresetEquipmentUpdateResponse) Reset() {
	*x = PresetEquipmentUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetEquipmentUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetEquipmentUpdateResponse) ProtoMessage() {}

func (x *PresetEquipmentUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetEquipmentUpdateResponse.ProtoReflect.Descriptor instead.
func (*PresetEquipmentUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{33}
}

func (x *PresetEquipmentUpdateResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *PresetEquipmentUpdateResponse) GetEquipmentRefresh() *PresetEquipmentUpdateResponse_EquipmentRefresh {
	if x != nil {
		return x.EquipmentRefresh
	}
	return nil
}

type PresetRenameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string            `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	PresetType common.PresetType `protobuf:"varint,2,opt,name=preset_type,json=presetType,proto3,enum=com.ankama.dofus.server.game.protocol.common.PresetType" json:"preset_type,omitempty"`
	Name       string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PresetRenameRequest) Reset() {
	*x = PresetRenameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetRenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetRenameRequest) ProtoMessage() {}

func (x *PresetRenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetRenameRequest.ProtoReflect.Descriptor instead.
func (*PresetRenameRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{34}
}

func (x *PresetRenameRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetRenameRequest) GetPresetType() common.PresetType {
	if x != nil {
		return x.PresetType
	}
	return common.PresetType(0)
}

func (x *PresetRenameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PresetRenameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result PresetRenameResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=com.ankama.dofus.server.game.protocol.preset.PresetRenameResponse_Result" json:"result,omitempty"`
}

func (x *PresetRenameResponse) Reset() {
	*x = PresetRenameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetRenameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetRenameResponse) ProtoMessage() {}

func (x *PresetRenameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetRenameResponse.ProtoReflect.Descriptor instead.
func (*PresetRenameResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{35}
}

func (x *PresetRenameResponse) GetResult() PresetRenameResponse_Result {
	if x != nil {
		return x.Result
	}
	return PresetRenameResponse_SUCCESS
}

type PresetSymbolUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string            `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	PresetType common.PresetType `protobuf:"varint,2,opt,name=preset_type,json=presetType,proto3,enum=com.ankama.dofus.server.game.protocol.common.PresetType" json:"preset_type,omitempty"`
	SymbolId   int32             `protobuf:"varint,3,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
}

func (x *PresetSymbolUpdateRequest) Reset() {
	*x = PresetSymbolUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSymbolUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSymbolUpdateRequest) ProtoMessage() {}

func (x *PresetSymbolUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSymbolUpdateRequest.ProtoReflect.Descriptor instead.
func (*PresetSymbolUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{36}
}

func (x *PresetSymbolUpdateRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetSymbolUpdateRequest) GetPresetType() common.PresetType {
	if x != nil {
		return x.PresetType
	}
	return common.PresetType(0)
}

func (x *PresetSymbolUpdateRequest) GetSymbolId() int32 {
	if x != nil {
		return x.SymbolId
	}
	return 0
}

type PresetSymbolUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *PresetSymbolUpdateResponse) Reset() {
	*x = PresetSymbolUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSymbolUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSymbolUpdateResponse) ProtoMessage() {}

func (x *PresetSymbolUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSymbolUpdateResponse.ProtoReflect.Descriptor instead.
func (*PresetSymbolUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{37}
}

func (x *PresetSymbolUpdateResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type PresetSetFavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string            `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	PresetType common.PresetType `protobuf:"varint,2,opt,name=preset_type,json=presetType,proto3,enum=com.ankama.dofus.server.game.protocol.common.PresetType" json:"preset_type,omitempty"`
	IsFavorite bool              `protobuf:"varint,3,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
}

func (x *PresetSetFavoriteRequest) Reset() {
	*x = PresetSetFavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSetFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSetFavoriteRequest) ProtoMessage() {}

func (x *PresetSetFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSetFavoriteRequest.ProtoReflect.Descriptor instead.
func (*PresetSetFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{38}
}

func (x *PresetSetFavoriteRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetSetFavoriteRequest) GetPresetType() common.PresetType {
	if x != nil {
		return x.PresetType
	}
	return common.PresetType(0)
}

func (x *PresetSetFavoriteRequest) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type PresetSetFavoriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *PresetSetFavoriteResponse) Reset() {
	*x = PresetSetFavoriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetSetFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetSetFavoriteResponse) ProtoMessage() {}

func (x *PresetSetFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetSetFavoriteResponse.ProtoReflect.Descriptor instead.
func (*PresetSetFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{39}
}

func (x *PresetSetFavoriteResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type CharacterPresetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
}

func (x *CharacterPresetInfoRequest) Reset() {
	*x = CharacterPresetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetInfoRequest) ProtoMessage() {}

func (x *CharacterPresetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetInfoRequest.ProtoReflect.Descriptor instead.
func (*CharacterPresetInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{40}
}

func (x *CharacterPresetInfoRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

type CharacterPresetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool                 `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Info      *CharacterPresetInfo `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
}

func (x *CharacterPresetInfoResponse) Reset() {
	*x = CharacterPresetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetInfoResponse) ProtoMessage() {}

func (x *CharacterPresetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetInfoResponse.ProtoReflect.Descriptor instead.
func (*CharacterPresetInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{41}
}

func (x *CharacterPresetInfoResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *CharacterPresetInfoResponse) GetInfo() *CharacterPresetInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ForgettableSpellPresetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
}

func (x *ForgettableSpellPresetInfoRequest) Reset() {
	*x = ForgettableSpellPresetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetInfoRequest) ProtoMessage() {}

func (x *ForgettableSpellPresetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetInfoRequest.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{42}
}

func (x *ForgettableSpellPresetInfoRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

type ForgettableSpellPresetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool                        `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Info      *ForgettableSpellPresetInfo `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
}

func (x *ForgettableSpellPresetInfoResponse) Reset() {
	*x = ForgettableSpellPresetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetInfoResponse) ProtoMessage() {}

func (x *ForgettableSpellPresetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetInfoResponse.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{43}
}

func (x *ForgettableSpellPresetInfoResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *ForgettableSpellPresetInfoResponse) GetInfo() *ForgettableSpellPresetInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PresetOutfitUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuid string  `protobuf:"bytes,1,opt,name=preset_uuid,json=presetUuid,proto3" json:"preset_uuid,omitempty"`
	OutfitUuid *string `protobuf:"bytes,2,opt,name=outfit_uuid,json=outfitUuid,proto3,oneof" json:"outfit_uuid,omitempty"`
}

func (x *PresetOutfitUpdateRequest) Reset() {
	*x = PresetOutfitUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetOutfitUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetOutfitUpdateRequest) ProtoMessage() {}

func (x *PresetOutfitUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetOutfitUpdateRequest.ProtoReflect.Descriptor instead.
func (*PresetOutfitUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{44}
}

func (x *PresetOutfitUpdateRequest) GetPresetUuid() string {
	if x != nil {
		return x.PresetUuid
	}
	return ""
}

func (x *PresetOutfitUpdateRequest) GetOutfitUuid() string {
	if x != nil && x.OutfitUuid != nil {
		return *x.OutfitUuid
	}
	return ""
}

type PresetOutfitUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess   bool        `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	UpdatedLook *PresetLook `protobuf:"bytes,2,opt,name=updated_look,json=updatedLook,proto3,oneof" json:"updated_look,omitempty"`
}

func (x *PresetOutfitUpdateResponse) Reset() {
	*x = PresetOutfitUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetOutfitUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetOutfitUpdateResponse) ProtoMessage() {}

func (x *PresetOutfitUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetOutfitUpdateResponse.ProtoReflect.Descriptor instead.
func (*PresetOutfitUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{45}
}

func (x *PresetOutfitUpdateResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *PresetOutfitUpdateResponse) GetUpdatedLook() *PresetLook {
	if x != nil {
		return x.UpdatedLook
	}
	return nil
}

type PresetItemUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLinked                 bool                                                   `protobuf:"varint,1,opt,name=is_linked,json=isLinked,proto3" json:"is_linked,omitempty"`
	ItemPositionByPresetUuid []*PresetItemUpdateEvent_ItemPositionByPresetUuidEntry `protobuf:"bytes,2,rep,name=item_position_by_preset_uuid,json=itemPositionByPresetUuid,proto3" json:"item_position_by_preset_uuid,omitempty"`
	ItemUid                  int32                                                  `protobuf:"varint,3,opt,name=item_uid,json=itemUid,proto3" json:"item_uid,omitempty"`
}

func (x *PresetItemUpdateEvent) Reset() {
	*x = PresetItemUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetItemUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetItemUpdateEvent) ProtoMessage() {}

func (x *PresetItemUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetItemUpdateEvent.ProtoReflect.Descriptor instead.
func (*PresetItemUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{46}
}

func (x *PresetItemUpdateEvent) GetIsLinked() bool {
	if x != nil {
		return x.IsLinked
	}
	return false
}

func (x *PresetItemUpdateEvent) GetItemPositionByPresetUuid() []*PresetItemUpdateEvent_ItemPositionByPresetUuidEntry {
	if x != nil {
		return x.ItemPositionByPresetUuid
	}
	return nil
}

func (x *PresetItemUpdateEvent) GetItemUid() int32 {
	if x != nil {
		return x.ItemUid
	}
	return 0
}

type PresetListEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterPresetInfoById        []*PresetListEvent_CharacterPresetInfoByIdEntry        `protobuf:"bytes,1,rep,name=character_preset_info_by_id,json=characterPresetInfoById,proto3" json:"character_preset_info_by_id,omitempty"`
	ForgettableSpellPresetInfoById []*PresetListEvent_ForgettableSpellPresetInfoByIdEntry `protobuf:"bytes,2,rep,name=forgettable_spell_preset_info_by_id,json=forgettableSpellPresetInfoById,proto3" json:"forgettable_spell_preset_info_by_id,omitempty"`
}

func (x *PresetListEvent) Reset() {
	*x = PresetListEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetListEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetListEvent) ProtoMessage() {}

func (x *PresetListEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetListEvent.ProtoReflect.Descriptor instead.
func (*PresetListEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{47}
}

func (x *PresetListEvent) GetCharacterPresetInfoById() []*PresetListEvent_CharacterPresetInfoByIdEntry {
	if x != nil {
		return x.CharacterPresetInfoById
	}
	return nil
}

func (x *PresetListEvent) GetForgettableSpellPresetInfoById() []*PresetListEvent_ForgettableSpellPresetInfoByIdEntry {
	if x != nil {
		return x.ForgettableSpellPresetInfoById
	}
	return nil
}

type CharacterPresetCurrentStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CharacterPresetCurrentStateRequest) Reset() {
	*x = CharacterPresetCurrentStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetCurrentStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetCurrentStateRequest) ProtoMessage() {}

func (x *CharacterPresetCurrentStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetCurrentStateRequest.ProtoReflect.Descriptor instead.
func (*CharacterPresetCurrentStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{48}
}

type CharacterPresetCurrentStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preset *CharacterPresetInfo `protobuf:"bytes,1,opt,name=preset,proto3" json:"preset,omitempty"`
}

func (x *CharacterPresetCurrentStateResponse) Reset() {
	*x = CharacterPresetCurrentStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetCurrentStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetCurrentStateResponse) ProtoMessage() {}

func (x *CharacterPresetCurrentStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetCurrentStateResponse.ProtoReflect.Descriptor instead.
func (*CharacterPresetCurrentStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{49}
}

func (x *CharacterPresetCurrentStateResponse) GetPreset() *CharacterPresetInfo {
	if x != nil {
		return x.Preset
	}
	return nil
}

type CharacterPresetInfo_EquipmentByPositionEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32      `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Equipment `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CharacterPresetInfo_EquipmentByPositionEntry) Reset() {
	*x = CharacterPresetInfo_EquipmentByPositionEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetInfo_EquipmentByPositionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetInfo_EquipmentByPositionEntry) ProtoMessage() {}

func (x *CharacterPresetInfo_EquipmentByPositionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetInfo_EquipmentByPositionEntry.ProtoReflect.Descriptor instead.
func (*CharacterPresetInfo_EquipmentByPositionEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CharacterPresetInfo_EquipmentByPositionEntry) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *CharacterPresetInfo_EquipmentByPositionEntry) GetValue() *Equipment {
	if x != nil {
		return x.Value
	}
	return nil
}

type ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32                 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *ForgettableSpellInfo `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry) Reset() {
	*x = ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry) ProtoMessage() {}

func (x *ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry) GetValue() *ForgettableSpellInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

type CharacteristicsInfo_CharacteristicDetailsByIdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32                                       `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *CharacteristicsInfo_CharacteristicsDetails `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CharacteristicsInfo_CharacteristicDetailsByIdEntry) Reset() {
	*x = CharacteristicsInfo_CharacteristicDetailsByIdEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacteristicsInfo_CharacteristicDetailsByIdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacteristicsInfo_CharacteristicDetailsByIdEntry) ProtoMessage() {}

func (x *CharacteristicsInfo_CharacteristicDetailsByIdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacteristicsInfo_CharacteristicDetailsByIdEntry.ProtoReflect.Descriptor instead.
func (*CharacteristicsInfo_CharacteristicDetailsByIdEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CharacteristicsInfo_CharacteristicDetailsByIdEntry) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *CharacteristicsInfo_CharacteristicDetailsByIdEntry) GetValue() *CharacteristicsInfo_CharacteristicsDetails {
	if x != nil {
		return x.Value
	}
	return nil
}

type CharacteristicsInfo_CharacteristicsDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromBase         int32  `protobuf:"varint,2,opt,name=from_base,json=fromBase,proto3" json:"from_base,omitempty"`
	FromAllocated    int32  `protobuf:"varint,3,opt,name=from_allocated,json=fromAllocated,proto3" json:"from_allocated,omitempty"`
	FromEquipment    int32  `protobuf:"varint,4,opt,name=from_equipment,json=fromEquipment,proto3" json:"from_equipment,omitempty"`
	FromBonus        int32  `protobuf:"varint,5,opt,name=from_bonus,json=fromBonus,proto3" json:"from_bonus,omitempty"`
	FromInitialBonus int32  `protobuf:"varint,6,opt,name=from_initial_bonus,json=fromInitialBonus,proto3" json:"from_initial_bonus,omitempty"`
	Limit            *int32 `protobuf:"varint,1,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *CharacteristicsInfo_CharacteristicsDetails) Reset() {
	*x = CharacteristicsInfo_CharacteristicsDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacteristicsInfo_CharacteristicsDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacteristicsInfo_CharacteristicsDetails) ProtoMessage() {}

func (x *CharacteristicsInfo_CharacteristicsDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacteristicsInfo_CharacteristicsDetails.ProtoReflect.Descriptor instead.
func (*CharacteristicsInfo_CharacteristicsDetails) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{3, 1}
}

func (x *CharacteristicsInfo_CharacteristicsDetails) GetFromBase() int32 {
	if x != nil {
		return x.FromBase
	}
	return 0
}

func (x *CharacteristicsInfo_CharacteristicsDetails) GetFromAllocated() int32 {
	if x != nil {
		return x.FromAllocated
	}
	return 0
}

func (x *CharacteristicsInfo_CharacteristicsDetails) GetFromEquipment() int32 {
	if x != nil {
		return x.FromEquipment
	}
	return 0
}

func (x *CharacteristicsInfo_CharacteristicsDetails) GetFromBonus() int32 {
	if x != nil {
		return x.FromBonus
	}
	return 0
}

func (x *CharacteristicsInfo_CharacteristicsDetails) GetFromInitialBonus() int32 {
	if x != nil {
		return x.FromInitialBonus
	}
	return 0
}

func (x *CharacteristicsInfo_CharacteristicsDetails) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type SpellPreset_SpellPositionsByIdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32           `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *SpellPositions `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SpellPreset_SpellPositionsByIdEntry) Reset() {
	*x = SpellPreset_SpellPositionsByIdEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellPreset_SpellPositionsByIdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellPreset_SpellPositionsByIdEntry) ProtoMessage() {}

func (x *SpellPreset_SpellPositionsByIdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellPreset_SpellPositionsByIdEntry.ProtoReflect.Descriptor instead.
func (*SpellPreset_SpellPositionsByIdEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SpellPreset_SpellPositionsByIdEntry) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *SpellPreset_SpellPositionsByIdEntry) GetValue() *SpellPositions {
	if x != nil {
		return x.Value
	}
	return nil
}

type PresetOrigin_EmptyPreset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PresetOrigin_EmptyPreset) Reset() {
	*x = PresetOrigin_EmptyPreset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetOrigin_EmptyPreset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetOrigin_EmptyPreset) ProtoMessage() {}

func (x *PresetOrigin_EmptyPreset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetOrigin_EmptyPreset.ProtoReflect.Descriptor instead.
func (*PresetOrigin_EmptyPreset) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{9, 0}
}

type PresetOrigin_PlayerCopy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PresetOrigin_PlayerCopy) Reset() {
	*x = PresetOrigin_PlayerCopy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetOrigin_PlayerCopy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetOrigin_PlayerCopy) ProtoMessage() {}

func (x *PresetOrigin_PlayerCopy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetOrigin_PlayerCopy.ProtoReflect.Descriptor instead.
func (*PresetOrigin_PlayerCopy) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{9, 1}
}

type PresetOrigin_PresetClone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetUuidToClone string `protobuf:"bytes,1,opt,name=preset_uuid_to_clone,json=presetUuidToClone,proto3" json:"preset_uuid_to_clone,omitempty"`
}

func (x *PresetOrigin_PresetClone) Reset() {
	*x = PresetOrigin_PresetClone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetOrigin_PresetClone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetOrigin_PresetClone) ProtoMessage() {}

func (x *PresetOrigin_PresetClone) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetOrigin_PresetClone.ProtoReflect.Descriptor instead.
func (*PresetOrigin_PresetClone) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{9, 2}
}

func (x *PresetOrigin_PresetClone) GetPresetUuidToClone() string {
	if x != nil {
		return x.PresetUuidToClone
	}
	return ""
}

type CharacterPresetCreateResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetInfo *CharacterPresetInfo `protobuf:"bytes,1,opt,name=preset_info,json=presetInfo,proto3" json:"preset_info,omitempty"`
}

func (x *CharacterPresetCreateResponse_Success) Reset() {
	*x = CharacterPresetCreateResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterPresetCreateResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterPresetCreateResponse_Success) ProtoMessage() {}

func (x *CharacterPresetCreateResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterPresetCreateResponse_Success.ProtoReflect.Descriptor instead.
func (*CharacterPresetCreateResponse_Success) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CharacterPresetCreateResponse_Success) GetPresetInfo() *CharacterPresetInfo {
	if x != nil {
		return x.PresetInfo
	}
	return nil
}

type ForgettableSpellPresetCreateResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetInfo *ForgettableSpellPresetInfo `protobuf:"bytes,1,opt,name=preset_info,json=presetInfo,proto3" json:"preset_info,omitempty"`
}

func (x *ForgettableSpellPresetCreateResponse_Success) Reset() {
	*x = ForgettableSpellPresetCreateResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgettableSpellPresetCreateResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgettableSpellPresetCreateResponse_Success) ProtoMessage() {}

func (x *ForgettableSpellPresetCreateResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgettableSpellPresetCreateResponse_Success.ProtoReflect.Descriptor instead.
func (*ForgettableSpellPresetCreateResponse_Success) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ForgettableSpellPresetCreateResponse_Success) GetPresetInfo() *ForgettableSpellPresetInfo {
	if x != nil {
		return x.PresetInfo
	}
	return nil
}

type PresetUseResponse_MissingEquipments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissingItemGids    []int32 `protobuf:"varint,1,rep,packed,name=missing_item_gids,json=missingItemGids,proto3" json:"missing_item_gids,omitempty"`
	MissingRideModelId *int32  `protobuf:"varint,2,opt,name=missing_ride_model_id,json=missingRideModelId,proto3,oneof" json:"missing_ride_model_id,omitempty"`
}

func (x *PresetUseResponse_MissingEquipments) Reset() {
	*x = PresetUseResponse_MissingEquipments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetUseResponse_MissingEquipments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetUseResponse_MissingEquipments) ProtoMessage() {}

func (x *PresetUseResponse_MissingEquipments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetUseResponse_MissingEquipments.ProtoReflect.Descriptor instead.
func (*PresetUseResponse_MissingEquipments) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{27, 0}
}

func (x *PresetUseResponse_MissingEquipments) GetMissingItemGids() []int32 {
	if x != nil {
		return x.MissingItemGids
	}
	return nil
}

func (x *PresetUseResponse_MissingEquipments) GetMissingRideModelId() int32 {
	if x != nil && x.MissingRideModelId != nil {
		return *x.MissingRideModelId
	}
	return 0
}

type PresetStatUpdateRequest_StatByIdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PresetStatUpdateRequest_StatByIdEntry) Reset() {
	*x = PresetStatUpdateRequest_StatByIdEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetStatUpdateRequest_StatByIdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetStatUpdateRequest_StatByIdEntry) ProtoMessage() {}

func (x *PresetStatUpdateRequest_StatByIdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetStatUpdateRequest_StatByIdEntry.ProtoReflect.Descriptor instead.
func (*PresetStatUpdateRequest_StatByIdEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{30, 0}
}

func (x *PresetStatUpdateRequest_StatByIdEntry) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *PresetStatUpdateRequest_StatByIdEntry) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PresetEquipmentUpdateRequest_SetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	ItemUid  int32 `protobuf:"varint,2,opt,name=item_uid,json=itemUid,proto3" json:"item_uid,omitempty"`
}

func (x *PresetEquipmentUpdateRequest_SetItem) Reset() {
	*x = PresetEquipmentUpdateRequest_SetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetEquipmentUpdateRequest_SetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetEquipmentUpdateRequest_SetItem) ProtoMessage() {}

func (x *PresetEquipmentUpdateRequest_SetItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetEquipmentUpdateRequest_SetItem.ProtoReflect.Descriptor instead.
func (*PresetEquipmentUpdateRequest_SetItem) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{32, 0}
}

func (x *PresetEquipmentUpdateRequest_SetItem) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *PresetEquipmentUpdateRequest_SetItem) GetItemUid() int32 {
	if x != nil {
		return x.ItemUid
	}
	return 0
}

type PresetEquipmentUpdateRequest_RemoveItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *PresetEquipmentUpdateRequest_RemoveItem) Reset() {
	*x = PresetEquipmentUpdateRequest_RemoveItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetEquipmentUpdateRequest_RemoveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetEquipmentUpdateRequest_RemoveItem) ProtoMessage() {}

func (x *PresetEquipmentUpdateRequest_RemoveItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetEquipmentUpdateRequest_RemoveItem.ProtoReflect.Descriptor instead.
func (*PresetEquipmentUpdateRequest_RemoveItem) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{32, 1}
}

func (x *PresetEquipmentUpdateRequest_RemoveItem) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type PresetEquipmentUpdateRequest_SetRide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PresetEquipmentUpdateRequest_SetRide) Reset() {
	*x = PresetEquipmentUpdateRequest_SetRide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetEquipmentUpdateRequest_SetRide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetEquipmentUpdateRequest_SetRide) ProtoMessage() {}

func (x *PresetEquipmentUpdateRequest_SetRide) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetEquipmentUpdateRequest_SetRide.ProtoReflect.Descriptor instead.
func (*PresetEquipmentUpdateRequest_SetRide) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{32, 2}
}

type PresetEquipmentUpdateRequest_RemoveRide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PresetEquipmentUpdateRequest_RemoveRide) Reset() {
	*x = PresetEquipmentUpdateRequest_RemoveRide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetEquipmentUpdateRequest_RemoveRide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetEquipmentUpdateRequest_RemoveRide) ProtoMessage() {}

func (x *PresetEquipmentUpdateRequest_RemoveRide) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetEquipmentUpdateRequest_RemoveRide.ProtoReflect.Descriptor instead.
func (*PresetEquipmentUpdateRequest_RemoveRide) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{32, 3}
}

type PresetEquipmentUpdateResponse_EquipmentRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacteristicsInfo *CharacteristicsInfo `protobuf:"bytes,1,opt,name=characteristics_info,json=characteristicsInfo,proto3" json:"characteristics_info,omitempty"`
	PresetLook          *PresetLook          `protobuf:"bytes,2,opt,name=preset_look,json=presetLook,proto3" json:"preset_look,omitempty"`
}

func (x *PresetEquipmentUpdateResponse_EquipmentRefresh) Reset() {
	*x = PresetEquipmentUpdateResponse_EquipmentRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetEquipmentUpdateResponse_EquipmentRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetEquipmentUpdateResponse_EquipmentRefresh) ProtoMessage() {}

func (x *PresetEquipmentUpdateResponse_EquipmentRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetEquipmentUpdateResponse_EquipmentRefresh.ProtoReflect.Descriptor instead.
func (*PresetEquipmentUpdateResponse_EquipmentRefresh) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{33, 0}
}

func (x *PresetEquipmentUpdateResponse_EquipmentRefresh) GetCharacteristicsInfo() *CharacteristicsInfo {
	if x != nil {
		return x.CharacteristicsInfo
	}
	return nil
}

func (x *PresetEquipmentUpdateResponse_EquipmentRefresh) GetPresetLook() *PresetLook {
	if x != nil {
		return x.PresetLook
	}
	return nil
}

type PresetItemUpdateEvent_ItemPositionByPresetUuidEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PresetItemUpdateEvent_ItemPositionByPresetUuidEntry) Reset() {
	*x = PresetItemUpdateEvent_ItemPositionByPresetUuidEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetItemUpdateEvent_ItemPositionByPresetUuidEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetItemUpdateEvent_ItemPositionByPresetUuidEntry) ProtoMessage() {}

func (x *PresetItemUpdateEvent_ItemPositionByPresetUuidEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetItemUpdateEvent_ItemPositionByPresetUuidEntry.ProtoReflect.Descriptor instead.
func (*PresetItemUpdateEvent_ItemPositionByPresetUuidEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{46, 0}
}

func (x *PresetItemUpdateEvent_ItemPositionByPresetUuidEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PresetItemUpdateEvent_ItemPositionByPresetUuidEntry) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PresetListEvent_CharacterPresetInfoByIdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string               `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *CharacterPresetInfo `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PresetListEvent_CharacterPresetInfoByIdEntry) Reset() {
	*x = PresetListEvent_CharacterPresetInfoByIdEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetListEvent_CharacterPresetInfoByIdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetListEvent_CharacterPresetInfoByIdEntry) ProtoMessage() {}

func (x *PresetListEvent_CharacterPresetInfoByIdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetListEvent_CharacterPresetInfoByIdEntry.ProtoReflect.Descriptor instead.
func (*PresetListEvent_CharacterPresetInfoByIdEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{47, 0}
}

func (x *PresetListEvent_CharacterPresetInfoByIdEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PresetListEvent_CharacterPresetInfoByIdEntry) GetValue() *CharacterPresetInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

type PresetListEvent_ForgettableSpellPresetInfoByIdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string                      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *ForgettableSpellPresetInfo `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PresetListEvent_ForgettableSpellPresetInfoByIdEntry) Reset() {
	*x = PresetListEvent_ForgettableSpellPresetInfoByIdEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_preset_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetListEvent_ForgettableSpellPresetInfoByIdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetListEvent_ForgettableSpellPresetInfoByIdEntry) ProtoMessage() {}

func (x *PresetListEvent_ForgettableSpellPresetInfoByIdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_preset_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetListEvent_ForgettableSpellPresetInfoByIdEntry.ProtoReflect.Descriptor instead.
func (*PresetListEvent_ForgettableSpellPresetInfoByIdEntry) Descriptor() ([]byte, []int) {
	return file_proto_game_preset_proto_rawDescGZIP(), []int{47, 1}
}

func (x *PresetListEvent_ForgettableSpellPresetInfoByIdEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PresetListEvent_ForgettableSpellPresetInfoByIdEntry) GetValue() *ForgettableSpellPresetInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_proto_game_preset_proto protoreflect.FileDescriptor

var file_proto_game_preset_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2c, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x06, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x15, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0c, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x74, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x59,
	0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x52, 0x0a, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x12, 0x4b, 0x0a, 0x04, 0x72, 0x69, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72,
	0x69, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x66, 0x69, 0x74,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x66, 0x69, 0x74, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x1a, 0x7b, 0x0a, 0x18,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x69,
	0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x75, 0x74, 0x66, 0x69, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x22, 0xcd, 0x04, 0x0a, 0x1a, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x5c, 0x0a,
	0x0c, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x0b,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0xa6, 0x01, 0x0a, 0x1c,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x6c,
	0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x66, 0x6f, 0x72, 0x67,
	0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x8b, 0x01, 0x0a, 0x1d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x58, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x6f,
	0x6b, 0x12, 0x62, 0x0a, 0x10, 0x6c, 0x6f, 0x6f, 0x6b, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6f,
	0x75, 0x74, 0x66, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4c, 0x6f, 0x6f, 0x6b, 0x52, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x75, 0x74, 0x66, 0x69, 0x74, 0x12, 0x68, 0x0a, 0x13, 0x6c, 0x6f, 0x6f, 0x6b, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x66, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x6f, 0x6b, 0x52, 0x11, 0x6c, 0x6f,
	0x6f, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x4f, 0x75, 0x74, 0x66, 0x69, 0x74, 0x22,
	0xd6, 0x04, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xa1, 0x01, 0x0a, 0x1c, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x60,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x19, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x49, 0x64, 0x1a, 0xa2, 0x01, 0x0a, 0x1e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x6e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x58, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0xf5, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x09, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x54, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x15,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x69, 0x64, 0x22, 0x5f, 0x0a,
	0x04, 0x52, 0x69, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x69, 0x64, 0x65, 0x22, 0x2e,
	0x0a, 0x0e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9c,
	0x01, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70,
	0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x65, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x95, 0x02,
	0x0a, 0x0b, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x84, 0x01,
	0x0a, 0x15, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x12, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x7f, 0x0a, 0x17, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x52, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x03, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x5e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x70, 0x79, 0x48, 0x00, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x1a, 0x0d, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x1a, 0x0c, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x70, 0x79, 0x1a, 0x3e, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6c,
	0x6f, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x43,
	0x6c, 0x6f, 0x6e, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xa3,
	0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64,
	0x12, 0x52, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x22, 0xc9, 0x03, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x69, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x51, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0x6d, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x62, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x53, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41,
	0x58, 0x5f, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xaa, 0x01, 0x0a, 0x23, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xfb, 0x03,
	0x0a, 0x24, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x70,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0x74, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x69, 0x0a, 0x0b, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x69, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x10, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x58, 0x5f, 0x51, 0x55, 0x41,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x04, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x19,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x52, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x67, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x20, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x52, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x21, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x6e, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x46,
	0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x11, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x33, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x1c, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x67, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x38, 0x0a, 0x22, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xc4, 0x01, 0x0a,
	0x23, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x6e, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xc3, 0x04, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x51, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x11, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x67, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x69, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x69, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x9b, 0x01,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x4f, 0x4c, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x55, 0x55, 0x49,
	0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x50, 0x45, 0x4c, 0x4c, 0x53, 0x10, 0x06, 0x42, 0x08, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc6, 0x02, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x65, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x0c, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x54, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4f, 0x52, 0x47, 0x45,
	0x54, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x4c, 0x4c, 0x10, 0x02, 0x22, 0x3a,
	0x0a, 0x19, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x17, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x71, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f,
	0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x37, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x74, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x79, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x13, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0xb7, 0x05, 0x0a, 0x1c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x6f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x78, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x6f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x69, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74,
	0x52, 0x69, 0x64, 0x65, 0x12, 0x78, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72,
	0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x69, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x69, 0x64, 0x65, 0x1a, 0x40,
	0x0a, 0x07, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x69, 0x64,
	0x1a, 0x28, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x52, 0x69, 0x64, 0x65, 0x1a, 0x0c, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x69, 0x64, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcb, 0x03,
	0x0a, 0x1d, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x8e,
	0x01, 0x0a, 0x11, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x48, 0x00, 0x52, 0x10, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x88, 0x01, 0x01, 0x1a,
	0xe3, 0x01, 0x0a, 0x10, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x12, 0x74, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0xa5, 0x01, 0x0a, 0x13,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x69, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x22, 0xb4, 0x01, 0x0a, 0x19, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x64, 0x22, 0x3b, 0x0a, 0x1a, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xb7,
	0x01, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x5a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x21, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0xaf, 0x01,
	0x0a, 0x22, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x61, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x72, 0x0a, 0x19, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x66, 0x69, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x0b, 0x6f, 0x75, 0x74, 0x66, 0x69, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x66, 0x69, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x75, 0x74, 0x66, 0x69, 0x74, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x75,
	0x74, 0x66, 0x69, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x60, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x6f,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x6f,
	0x6b, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x6f, 0x6b,
	0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x6c, 0x6f, 0x6f, 0x6b, 0x22, 0xbc, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0xa1, 0x01, 0x0a, 0x1c,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x69, 0x64, 0x1a, 0x47, 0x0a, 0x1d, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x83, 0x05, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x1b, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x49, 0x64, 0x12, 0xae, 0x01, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x1e, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x49, 0x64, 0x1a, 0x89, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x57, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x97, 0x01, 0x0a, 0x23, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x5e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x23, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x6f, 0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_preset_proto_rawDescOnce sync.Once
	file_proto_game_preset_proto_rawDescData = file_proto_game_preset_proto_rawDesc
)

func file_proto_game_preset_proto_rawDescGZIP() []byte {
	file_proto_game_preset_proto_rawDescOnce.Do(func() {
		file_proto_game_preset_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_preset_proto_rawDescData)
	})
	return file_proto_game_preset_proto_rawDescData
}

var file_proto_game_preset_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_game_preset_proto_msgTypes = make([]protoimpl.MessageInfo, 70)
var file_proto_game_preset_proto_goTypes = []any{
	(CharacterPresetCreateResponse_Error)(0),                         // 0: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse.Error
	(ForgettableSpellPresetCreateResponse_Error)(0),                  // 1: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse.Error
	(PresetUseResponse_ResultEnum)(0),                                // 2: com.ankama.dofus.server.game.protocol.preset.PresetUseResponse.ResultEnum
	(PresetSpellUpdateRequest_Target)(0),                             // 3: com.ankama.dofus.server.game.protocol.preset.PresetSpellUpdateRequest.Target
	(PresetRenameResponse_Result)(0),                                 // 4: com.ankama.dofus.server.game.protocol.preset.PresetRenameResponse.Result
	(*CharacterPresetInfo)(nil),                                      // 5: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo
	(*ForgettableSpellPresetInfo)(nil),                               // 6: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo
	(*PresetLook)(nil),                                               // 7: com.ankama.dofus.server.game.protocol.preset.PresetLook
	(*CharacteristicsInfo)(nil),                                      // 8: com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo
	(*Equipment)(nil),                                                // 9: com.ankama.dofus.server.game.protocol.preset.Equipment
	(*Ride)(nil),                                                     // 10: com.ankama.dofus.server.game.protocol.preset.Ride
	(*SpellPositions)(nil),                                           // 11: com.ankama.dofus.server.game.protocol.preset.SpellPositions
	(*ForgettableSpellInfo)(nil),                                     // 12: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellInfo
	(*SpellPreset)(nil),                                              // 13: com.ankama.dofus.server.game.protocol.preset.SpellPreset
	(*PresetOrigin)(nil),                                             // 14: com.ankama.dofus.server.game.protocol.preset.PresetOrigin
	(*CharacterPresetCreateRequest)(nil),                             // 15: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateRequest
	(*CharacterPresetCreateResponse)(nil),                            // 16: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse
	(*ForgettableSpellPresetCreateRequest)(nil),                      // 17: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateRequest
	(*ForgettableSpellPresetCreateResponse)(nil),                     // 18: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse
	(*CharacterPresetSetRequest)(nil),                                // 19: com.ankama.dofus.server.game.protocol.preset.CharacterPresetSetRequest
	(*CharacterPresetSetResponse)(nil),                               // 20: com.ankama.dofus.server.game.protocol.preset.CharacterPresetSetResponse
	(*ForgettableSpellPresetSetRequest)(nil),                         // 21: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetSetRequest
	(*ForgettableSpellPresetSetResponse)(nil),                        // 22: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetSetResponse
	(*PresetSaveRequest)(nil),                                        // 23: com.ankama.dofus.server.game.protocol.preset.PresetSaveRequest
	(*PresetSaveResponse)(nil),                                       // 24: com.ankama.dofus.server.game.protocol.preset.PresetSaveResponse
	(*CharacterPresetResetRequest)(nil),                              // 25: com.ankama.dofus.server.game.protocol.preset.CharacterPresetResetRequest
	(*CharacterPresetResetResponse)(nil),                             // 26: com.ankama.dofus.server.game.protocol.preset.CharacterPresetResetResponse
	(*ForgettableSpellPresetResetRequest)(nil),                       // 27: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetResetRequest
	(*ForgettableSpellPresetResetResponse)(nil),                      // 28: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetResetResponse
	(*PresetDeleteRequest)(nil),                                      // 29: com.ankama.dofus.server.game.protocol.preset.PresetDeleteRequest
	(*PresetDeleteResponse)(nil),                                     // 30: com.ankama.dofus.server.game.protocol.preset.PresetDeleteResponse
	(*PresetUseRequest)(nil),                                         // 31: com.ankama.dofus.server.game.protocol.preset.PresetUseRequest
	(*PresetUseResponse)(nil),                                        // 32: com.ankama.dofus.server.game.protocol.preset.PresetUseResponse
	(*PresetSpellUpdateRequest)(nil),                                 // 33: com.ankama.dofus.server.game.protocol.preset.PresetSpellUpdateRequest
	(*PresetSpellUpdateResponse)(nil),                                // 34: com.ankama.dofus.server.game.protocol.preset.PresetSpellUpdateResponse
	(*PresetStatUpdateRequest)(nil),                                  // 35: com.ankama.dofus.server.game.protocol.preset.PresetStatUpdateRequest
	(*PresetStatUpdateResponse)(nil),                                 // 36: com.ankama.dofus.server.game.protocol.preset.PresetStatUpdateResponse
	(*PresetEquipmentUpdateRequest)(nil),                             // 37: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest
	(*PresetEquipmentUpdateResponse)(nil),                            // 38: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateResponse
	(*PresetRenameRequest)(nil),                                      // 39: com.ankama.dofus.server.game.protocol.preset.PresetRenameRequest
	(*PresetRenameResponse)(nil),                                     // 40: com.ankama.dofus.server.game.protocol.preset.PresetRenameResponse
	(*PresetSymbolUpdateRequest)(nil),                                // 41: com.ankama.dofus.server.game.protocol.preset.PresetSymbolUpdateRequest
	(*PresetSymbolUpdateResponse)(nil),                               // 42: com.ankama.dofus.server.game.protocol.preset.PresetSymbolUpdateResponse
	(*PresetSetFavoriteRequest)(nil),                                 // 43: com.ankama.dofus.server.game.protocol.preset.PresetSetFavoriteRequest
	(*PresetSetFavoriteResponse)(nil),                                // 44: com.ankama.dofus.server.game.protocol.preset.PresetSetFavoriteResponse
	(*CharacterPresetInfoRequest)(nil),                               // 45: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfoRequest
	(*CharacterPresetInfoResponse)(nil),                              // 46: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfoResponse
	(*ForgettableSpellPresetInfoRequest)(nil),                        // 47: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfoRequest
	(*ForgettableSpellPresetInfoResponse)(nil),                       // 48: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfoResponse
	(*PresetOutfitUpdateRequest)(nil),                                // 49: com.ankama.dofus.server.game.protocol.preset.PresetOutfitUpdateRequest
	(*PresetOutfitUpdateResponse)(nil),                               // 50: com.ankama.dofus.server.game.protocol.preset.PresetOutfitUpdateResponse
	(*PresetItemUpdateEvent)(nil),                                    // 51: com.ankama.dofus.server.game.protocol.preset.PresetItemUpdateEvent
	(*PresetListEvent)(nil),                                          // 52: com.ankama.dofus.server.game.protocol.preset.PresetListEvent
	(*CharacterPresetCurrentStateRequest)(nil),                       // 53: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCurrentStateRequest
	(*CharacterPresetCurrentStateResponse)(nil),                      // 54: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCurrentStateResponse
	(*CharacterPresetInfo_EquipmentByPositionEntry)(nil),             // 55: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.EquipmentByPositionEntry
	(*ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry)(nil), // 56: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo.ForgettableSpellInfoByIdEntry
	(*CharacteristicsInfo_CharacteristicDetailsByIdEntry)(nil),       // 57: com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo.CharacteristicDetailsByIdEntry
	(*CharacteristicsInfo_CharacteristicsDetails)(nil),               // 58: com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo.CharacteristicsDetails
	(*SpellPreset_SpellPositionsByIdEntry)(nil),                      // 59: com.ankama.dofus.server.game.protocol.preset.SpellPreset.SpellPositionsByIdEntry
	(*PresetOrigin_EmptyPreset)(nil),                                 // 60: com.ankama.dofus.server.game.protocol.preset.PresetOrigin.EmptyPreset
	(*PresetOrigin_PlayerCopy)(nil),                                  // 61: com.ankama.dofus.server.game.protocol.preset.PresetOrigin.PlayerCopy
	(*PresetOrigin_PresetClone)(nil),                                 // 62: com.ankama.dofus.server.game.protocol.preset.PresetOrigin.PresetClone
	(*CharacterPresetCreateResponse_Success)(nil),                    // 63: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse.Success
	(*ForgettableSpellPresetCreateResponse_Success)(nil),             // 64: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse.Success
	(*PresetUseResponse_MissingEquipments)(nil),                      // 65: com.ankama.dofus.server.game.protocol.preset.PresetUseResponse.MissingEquipments
	(*PresetStatUpdateRequest_StatByIdEntry)(nil),                    // 66: com.ankama.dofus.server.game.protocol.preset.PresetStatUpdateRequest.StatByIdEntry
	(*PresetEquipmentUpdateRequest_SetItem)(nil),                     // 67: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.SetItem
	(*PresetEquipmentUpdateRequest_RemoveItem)(nil),                  // 68: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.RemoveItem
	(*PresetEquipmentUpdateRequest_SetRide)(nil),                     // 69: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.SetRide
	(*PresetEquipmentUpdateRequest_RemoveRide)(nil),                  // 70: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.RemoveRide
	(*PresetEquipmentUpdateResponse_EquipmentRefresh)(nil),           // 71: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateResponse.EquipmentRefresh
	(*PresetItemUpdateEvent_ItemPositionByPresetUuidEntry)(nil),      // 72: com.ankama.dofus.server.game.protocol.preset.PresetItemUpdateEvent.ItemPositionByPresetUuidEntry
	(*PresetListEvent_CharacterPresetInfoByIdEntry)(nil),             // 73: com.ankama.dofus.server.game.protocol.preset.PresetListEvent.CharacterPresetInfoByIdEntry
	(*PresetListEvent_ForgettableSpellPresetInfoByIdEntry)(nil),      // 74: com.ankama.dofus.server.game.protocol.preset.PresetListEvent.ForgettableSpellPresetInfoByIdEntry
	(*common.EntityLook)(nil),                                        // 75: com.ankama.dofus.server.game.protocol.common.EntityLook
	(*common.ObjectEffect)(nil),                                      // 76: com.ankama.dofus.server.game.protocol.common.ObjectEffect
	(common.PresetType)(0),                                           // 77: com.ankama.dofus.server.game.protocol.common.PresetType
}
var file_proto_game_preset_proto_depIdxs = []int32{
	55, // 0: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.equipment_by_position:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.EquipmentByPositionEntry
	13, // 1: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.spell_preset:type_name -> com.ankama.dofus.server.game.protocol.preset.SpellPreset
	8,  // 2: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.characteristics_info:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo
	7,  // 3: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.preset_look:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetLook
	10, // 4: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.ride:type_name -> com.ankama.dofus.server.game.protocol.preset.Ride
	13, // 5: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo.spell_preset:type_name -> com.ankama.dofus.server.game.protocol.preset.SpellPreset
	56, // 6: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo.forgettable_spell_info_by_id:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo.ForgettableSpellInfoByIdEntry
	75, // 7: com.ankama.dofus.server.game.protocol.preset.PresetLook.look_with_outfit:type_name -> com.ankama.dofus.server.game.protocol.common.EntityLook
	75, // 8: com.ankama.dofus.server.game.protocol.preset.PresetLook.look_without_outfit:type_name -> com.ankama.dofus.server.game.protocol.common.EntityLook
	57, // 9: com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo.characteristic_details_by_id:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo.CharacteristicDetailsByIdEntry
	76, // 10: com.ankama.dofus.server.game.protocol.preset.Equipment.effects:type_name -> com.ankama.dofus.server.game.protocol.common.ObjectEffect
	11, // 11: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellInfo.spell_positions:type_name -> com.ankama.dofus.server.game.protocol.preset.SpellPositions
	59, // 12: com.ankama.dofus.server.game.protocol.preset.SpellPreset.spell_positions_by_id:type_name -> com.ankama.dofus.server.game.protocol.preset.SpellPreset.SpellPositionsByIdEntry
	60, // 13: com.ankama.dofus.server.game.protocol.preset.PresetOrigin.empty:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetOrigin.EmptyPreset
	61, // 14: com.ankama.dofus.server.game.protocol.preset.PresetOrigin.player:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetOrigin.PlayerCopy
	62, // 15: com.ankama.dofus.server.game.protocol.preset.PresetOrigin.clone:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetOrigin.PresetClone
	14, // 16: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateRequest.origin:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetOrigin
	63, // 17: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse.success:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse.Success
	0,  // 18: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse.error:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse.Error
	14, // 19: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateRequest.origin:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetOrigin
	64, // 20: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse.success:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse.Success
	1,  // 21: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse.error:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse.Error
	14, // 22: com.ankama.dofus.server.game.protocol.preset.CharacterPresetSetRequest.origin:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetOrigin
	5,  // 23: com.ankama.dofus.server.game.protocol.preset.CharacterPresetSetResponse.preset_info:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo
	14, // 24: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetSetRequest.origin:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetOrigin
	6,  // 25: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetSetResponse.preset_info:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo
	77, // 26: com.ankama.dofus.server.game.protocol.preset.PresetSaveRequest.type:type_name -> com.ankama.dofus.server.game.protocol.common.PresetType
	5,  // 27: com.ankama.dofus.server.game.protocol.preset.CharacterPresetResetResponse.preset_info:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo
	6,  // 28: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetResetResponse.preset_info:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo
	77, // 29: com.ankama.dofus.server.game.protocol.preset.PresetDeleteRequest.preset_type:type_name -> com.ankama.dofus.server.game.protocol.common.PresetType
	77, // 30: com.ankama.dofus.server.game.protocol.preset.PresetUseRequest.preset_type:type_name -> com.ankama.dofus.server.game.protocol.common.PresetType
	2,  // 31: com.ankama.dofus.server.game.protocol.preset.PresetUseResponse.result_enum:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetUseResponse.ResultEnum
	65, // 32: com.ankama.dofus.server.game.protocol.preset.PresetUseResponse.missing_equipments:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetUseResponse.MissingEquipments
	3,  // 33: com.ankama.dofus.server.game.protocol.preset.PresetSpellUpdateRequest.target:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetSpellUpdateRequest.Target
	13, // 34: com.ankama.dofus.server.game.protocol.preset.PresetSpellUpdateRequest.spell_preset:type_name -> com.ankama.dofus.server.game.protocol.preset.SpellPreset
	66, // 35: com.ankama.dofus.server.game.protocol.preset.PresetStatUpdateRequest.stat_by_id:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetStatUpdateRequest.StatByIdEntry
	8,  // 36: com.ankama.dofus.server.game.protocol.preset.PresetStatUpdateResponse.characteristics_info:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo
	67, // 37: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.set_item:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.SetItem
	68, // 38: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.remove_item:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.RemoveItem
	69, // 39: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.set_ride:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.SetRide
	70, // 40: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.remove_ride:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateRequest.RemoveRide
	71, // 41: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateResponse.equipment_refresh:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateResponse.EquipmentRefresh
	77, // 42: com.ankama.dofus.server.game.protocol.preset.PresetRenameRequest.preset_type:type_name -> com.ankama.dofus.server.game.protocol.common.PresetType
	4,  // 43: com.ankama.dofus.server.game.protocol.preset.PresetRenameResponse.result:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetRenameResponse.Result
	77, // 44: com.ankama.dofus.server.game.protocol.preset.PresetSymbolUpdateRequest.preset_type:type_name -> com.ankama.dofus.server.game.protocol.common.PresetType
	77, // 45: com.ankama.dofus.server.game.protocol.preset.PresetSetFavoriteRequest.preset_type:type_name -> com.ankama.dofus.server.game.protocol.common.PresetType
	5,  // 46: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfoResponse.info:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo
	6,  // 47: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfoResponse.info:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo
	7,  // 48: com.ankama.dofus.server.game.protocol.preset.PresetOutfitUpdateResponse.updated_look:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetLook
	72, // 49: com.ankama.dofus.server.game.protocol.preset.PresetItemUpdateEvent.item_position_by_preset_uuid:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetItemUpdateEvent.ItemPositionByPresetUuidEntry
	73, // 50: com.ankama.dofus.server.game.protocol.preset.PresetListEvent.character_preset_info_by_id:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetListEvent.CharacterPresetInfoByIdEntry
	74, // 51: com.ankama.dofus.server.game.protocol.preset.PresetListEvent.forgettable_spell_preset_info_by_id:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetListEvent.ForgettableSpellPresetInfoByIdEntry
	5,  // 52: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCurrentStateResponse.preset:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo
	9,  // 53: com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo.EquipmentByPositionEntry.value:type_name -> com.ankama.dofus.server.game.protocol.preset.Equipment
	12, // 54: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo.ForgettableSpellInfoByIdEntry.value:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellInfo
	58, // 55: com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo.CharacteristicDetailsByIdEntry.value:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo.CharacteristicsDetails
	11, // 56: com.ankama.dofus.server.game.protocol.preset.SpellPreset.SpellPositionsByIdEntry.value:type_name -> com.ankama.dofus.server.game.protocol.preset.SpellPositions
	5,  // 57: com.ankama.dofus.server.game.protocol.preset.CharacterPresetCreateResponse.Success.preset_info:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo
	6,  // 58: com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetCreateResponse.Success.preset_info:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo
	8,  // 59: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateResponse.EquipmentRefresh.characteristics_info:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacteristicsInfo
	7,  // 60: com.ankama.dofus.server.game.protocol.preset.PresetEquipmentUpdateResponse.EquipmentRefresh.preset_look:type_name -> com.ankama.dofus.server.game.protocol.preset.PresetLook
	5,  // 61: com.ankama.dofus.server.game.protocol.preset.PresetListEvent.CharacterPresetInfoByIdEntry.value:type_name -> com.ankama.dofus.server.game.protocol.preset.CharacterPresetInfo
	6,  // 62: com.ankama.dofus.server.game.protocol.preset.PresetListEvent.ForgettableSpellPresetInfoByIdEntry.value:type_name -> com.ankama.dofus.server.game.protocol.preset.ForgettableSpellPresetInfo
	63, // [63:63] is the sub-list for method output_type
	63, // [63:63] is the sub-list for method input_type
	63, // [63:63] is the sub-list for extension type_name
	63, // [63:63] is the sub-list for extension extendee
	0,  // [0:63] is the sub-list for field type_name
}

func init() { file_proto_game_preset_proto_init() }
func file_proto_game_preset_proto_init() {
	if File_proto_game_preset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_preset_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PresetLook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CharacteristicsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Equipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Ride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SpellPositions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SpellPreset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PresetOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*PresetDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*PresetDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*PresetUseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PresetUseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSpellUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSpellUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*PresetStatUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*PresetStatUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*PresetEquipmentUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*PresetEquipmentUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*PresetRenameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*PresetRenameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSymbolUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSymbolUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSetFavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*PresetSetFavoriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*PresetOutfitUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*PresetOutfitUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*PresetItemUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*PresetListEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetCurrentStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetCurrentStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetInfo_EquipmentByPositionEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetInfo_ForgettableSpellInfoByIdEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CharacteristicsInfo_CharacteristicDetailsByIdEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CharacteristicsInfo_CharacteristicsDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*SpellPreset_SpellPositionsByIdEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*PresetOrigin_EmptyPreset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*PresetOrigin_PlayerCopy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*PresetOrigin_PresetClone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterPresetCreateResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*ForgettableSpellPresetCreateResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*PresetUseResponse_MissingEquipments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*PresetStatUpdateRequest_StatByIdEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*PresetEquipmentUpdateRequest_SetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*PresetEquipmentUpdateRequest_RemoveItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*PresetEquipmentUpdateRequest_SetRide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*PresetEquipmentUpdateRequest_RemoveRide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*PresetEquipmentUpdateResponse_EquipmentRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*PresetItemUpdateEvent_ItemPositionByPresetUuidEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*PresetListEvent_CharacterPresetInfoByIdEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_preset_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*PresetListEvent_ForgettableSpellPresetInfoByIdEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_preset_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[9].OneofWrappers = []any{
		(*PresetOrigin_Empty)(nil),
		(*PresetOrigin_Player)(nil),
		(*PresetOrigin_Clone)(nil),
	}
	file_proto_game_preset_proto_msgTypes[11].OneofWrappers = []any{
		(*CharacterPresetCreateResponse_Success_)(nil),
		(*CharacterPresetCreateResponse_Error_)(nil),
	}
	file_proto_game_preset_proto_msgTypes[13].OneofWrappers = []any{
		(*ForgettableSpellPresetCreateResponse_Success_)(nil),
		(*ForgettableSpellPresetCreateResponse_Error_)(nil),
	}
	file_proto_game_preset_proto_msgTypes[15].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[17].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[21].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[23].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[27].OneofWrappers = []any{
		(*PresetUseResponse_ResultEnum_)(nil),
		(*PresetUseResponse_MissingEquipments_)(nil),
	}
	file_proto_game_preset_proto_msgTypes[31].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[32].OneofWrappers = []any{
		(*PresetEquipmentUpdateRequest_SetItem_)(nil),
		(*PresetEquipmentUpdateRequest_RemoveItem_)(nil),
		(*PresetEquipmentUpdateRequest_SetRide_)(nil),
		(*PresetEquipmentUpdateRequest_RemoveRide_)(nil),
	}
	file_proto_game_preset_proto_msgTypes[33].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[41].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[43].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[44].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[45].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[53].OneofWrappers = []any{}
	file_proto_game_preset_proto_msgTypes[60].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_preset_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   70,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_preset_proto_goTypes,
		DependencyIndexes: file_proto_game_preset_proto_depIdxs,
		EnumInfos:         file_proto_game_preset_proto_enumTypes,
		MessageInfos:      file_proto_game_preset_proto_msgTypes,
	}.Build()
	File_proto_game_preset_proto = out.File
	file_proto_game_preset_proto_rawDesc = nil
	file_proto_game_preset_proto_goTypes = nil
	file_proto_game_preset_proto_depIdxs = nil
}
