// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/party.proto

package party

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartyMemberInFightCause int32

const (
	PartyMemberInFightCause_UNKNOWN                 PartyMemberInFightCause = 0
	PartyMemberInFightCause_MONSTER_ATTACK          PartyMemberInFightCause = 1
	PartyMemberInFightCause_PLAYER_ATTACK           PartyMemberInFightCause = 2
	PartyMemberInFightCause_MEMBER_ATTACKED_PLAYERS PartyMemberInFightCause = 3
	PartyMemberInFightCause_MEMBER_CHALLENGE        PartyMemberInFightCause = 4
)

// Enum value maps for PartyMemberInFightCause.
var (
	PartyMemberInFightCause_name = map[int32]string{
		0: "UNKNOWN",
		1: "MONSTER_ATTACK",
		2: "PLAYER_ATTACK",
		3: "MEMBER_ATTACKED_PLAYERS",
		4: "MEMBER_CHALLENGE",
	}
	PartyMemberInFightCause_value = map[string]int32{
		"UNKNOWN":                 0,
		"MONSTER_ATTACK":          1,
		"PLAYER_ATTACK":           2,
		"MEMBER_ATTACKED_PLAYERS": 3,
		"MEMBER_CHALLENGE":        4,
	}
)

func (x PartyMemberInFightCause) Enum() *PartyMemberInFightCause {
	p := new(PartyMemberInFightCause)
	*p = x
	return p
}

func (x PartyMemberInFightCause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartyMemberInFightCause) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_party_proto_enumTypes[0].Descriptor()
}

func (PartyMemberInFightCause) Type() protoreflect.EnumType {
	return &file_proto_game_party_proto_enumTypes[0]
}

func (x PartyMemberInFightCause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartyMemberInFightCause.Descriptor instead.
func (PartyMemberInFightCause) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{0}
}

type PartyType int32

const (
	PartyType_UNDEFINED PartyType = 0
	PartyType_CLASSICAL PartyType = 1
	PartyType_ARENA     PartyType = 2
)

// Enum value maps for PartyType.
var (
	PartyType_name = map[int32]string{
		0: "UNDEFINED",
		1: "CLASSICAL",
		2: "ARENA",
	}
	PartyType_value = map[string]int32{
		"UNDEFINED": 0,
		"CLASSICAL": 1,
		"ARENA":     2,
	}
)

func (x PartyType) Enum() *PartyType {
	p := new(PartyType)
	*p = x
	return p
}

func (x PartyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartyType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_party_proto_enumTypes[1].Descriptor()
}

func (PartyType) Type() protoreflect.EnumType {
	return &file_proto_game_party_proto_enumTypes[1]
}

func (x PartyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartyType.Descriptor instead.
func (PartyType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{1}
}

type PartyJoinErrorEvent_PartyJoinError int32

const (
	PartyJoinErrorEvent_UNKNOWN                PartyJoinErrorEvent_PartyJoinError = 0
	PartyJoinErrorEvent_PLAYER_NOT_FOUND       PartyJoinErrorEvent_PartyJoinError = 1
	PartyJoinErrorEvent_PARTY_NOT_FOUND        PartyJoinErrorEvent_PartyJoinError = 2
	PartyJoinErrorEvent_PARTY_FULL             PartyJoinErrorEvent_PartyJoinError = 3
	PartyJoinErrorEvent_PLAYER_BUSY            PartyJoinErrorEvent_PartyJoinError = 4
	PartyJoinErrorEvent_PLAYER_ALREADY_INVITED PartyJoinErrorEvent_PartyJoinError = 5
	PartyJoinErrorEvent_PLAYER_TOO_SOLICITED   PartyJoinErrorEvent_PartyJoinError = 6
	PartyJoinErrorEvent_PLAYER_LOYAL           PartyJoinErrorEvent_PartyJoinError = 7
	PartyJoinErrorEvent_UNMODIFIABLE           PartyJoinErrorEvent_PartyJoinError = 8
	PartyJoinErrorEvent_UNMET_CRITERION        PartyJoinErrorEvent_PartyJoinError = 9
	PartyJoinErrorEvent_NOT_ENOUGH_ROOM        PartyJoinErrorEvent_PartyJoinError = 10
	PartyJoinErrorEvent_COMPOSITION_CHANGED    PartyJoinErrorEvent_PartyJoinError = 11
	PartyJoinErrorEvent_PLAYER_IN_TUTORIAL     PartyJoinErrorEvent_PartyJoinError = 12
)

// Enum value maps for PartyJoinErrorEvent_PartyJoinError.
var (
	PartyJoinErrorEvent_PartyJoinError_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "PLAYER_NOT_FOUND",
		2:  "PARTY_NOT_FOUND",
		3:  "PARTY_FULL",
		4:  "PLAYER_BUSY",
		5:  "PLAYER_ALREADY_INVITED",
		6:  "PLAYER_TOO_SOLICITED",
		7:  "PLAYER_LOYAL",
		8:  "UNMODIFIABLE",
		9:  "UNMET_CRITERION",
		10: "NOT_ENOUGH_ROOM",
		11: "COMPOSITION_CHANGED",
		12: "PLAYER_IN_TUTORIAL",
	}
	PartyJoinErrorEvent_PartyJoinError_value = map[string]int32{
		"UNKNOWN":                0,
		"PLAYER_NOT_FOUND":       1,
		"PARTY_NOT_FOUND":        2,
		"PARTY_FULL":             3,
		"PLAYER_BUSY":            4,
		"PLAYER_ALREADY_INVITED": 5,
		"PLAYER_TOO_SOLICITED":   6,
		"PLAYER_LOYAL":           7,
		"UNMODIFIABLE":           8,
		"UNMET_CRITERION":        9,
		"NOT_ENOUGH_ROOM":        10,
		"COMPOSITION_CHANGED":    11,
		"PLAYER_IN_TUTORIAL":     12,
	}
)

func (x PartyJoinErrorEvent_PartyJoinError) Enum() *PartyJoinErrorEvent_PartyJoinError {
	p := new(PartyJoinErrorEvent_PartyJoinError)
	*p = x
	return p
}

func (x PartyJoinErrorEvent_PartyJoinError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartyJoinErrorEvent_PartyJoinError) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_party_proto_enumTypes[2].Descriptor()
}

func (PartyJoinErrorEvent_PartyJoinError) Type() protoreflect.EnumType {
	return &file_proto_game_party_proto_enumTypes[2]
}

func (x PartyJoinErrorEvent_PartyJoinError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartyJoinErrorEvent_PartyJoinError.Descriptor instead.
func (PartyJoinErrorEvent_PartyJoinError) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{18, 0}
}

type PartyNameSetErrorEvent_PartyNameError int32

const (
	PartyNameSetErrorEvent_UNDEFINED_ERROR  PartyNameSetErrorEvent_PartyNameError = 0
	PartyNameSetErrorEvent_INVALID          PartyNameSetErrorEvent_PartyNameError = 1
	PartyNameSetErrorEvent_ALREADY_USED     PartyNameSetErrorEvent_PartyNameError = 2
	PartyNameSetErrorEvent_UNALLOWED_RIGHTS PartyNameSetErrorEvent_PartyNameError = 3
	PartyNameSetErrorEvent_UNALLOWED_NOW    PartyNameSetErrorEvent_PartyNameError = 4
)

// Enum value maps for PartyNameSetErrorEvent_PartyNameError.
var (
	PartyNameSetErrorEvent_PartyNameError_name = map[int32]string{
		0: "UNDEFINED_ERROR",
		1: "INVALID",
		2: "ALREADY_USED",
		3: "UNALLOWED_RIGHTS",
		4: "UNALLOWED_NOW",
	}
	PartyNameSetErrorEvent_PartyNameError_value = map[string]int32{
		"UNDEFINED_ERROR":  0,
		"INVALID":          1,
		"ALREADY_USED":     2,
		"UNALLOWED_RIGHTS": 3,
		"UNALLOWED_NOW":    4,
	}
)

func (x PartyNameSetErrorEvent_PartyNameError) Enum() *PartyNameSetErrorEvent_PartyNameError {
	p := new(PartyNameSetErrorEvent_PartyNameError)
	*p = x
	return p
}

func (x PartyNameSetErrorEvent_PartyNameError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartyNameSetErrorEvent_PartyNameError) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_party_proto_enumTypes[3].Descriptor()
}

func (PartyNameSetErrorEvent_PartyNameError) Type() protoreflect.EnumType {
	return &file_proto_game_party_proto_enumTypes[3]
}

func (x PartyNameSetErrorEvent_PartyNameError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartyNameSetErrorEvent_PartyNameError.Descriptor instead.
func (PartyNameSetErrorEvent_PartyNameError) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{35, 0}
}

type PartyInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target    *common.PlayerSearch `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	PartyType PartyType            `protobuf:"varint,2,opt,name=party_type,json=partyType,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyType" json:"party_type,omitempty"`
}

func (x *PartyInvitationRequest) Reset() {
	*x = PartyInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationRequest) ProtoMessage() {}

func (x *PartyInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationRequest.ProtoReflect.Descriptor instead.
func (*PartyInvitationRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{0}
}

func (x *PartyInvitationRequest) GetTarget() *common.PlayerSearch {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *PartyInvitationRequest) GetPartyType() PartyType {
	if x != nil {
		return x.PartyType
	}
	return PartyType_UNDEFINED
}

type PartyInvitationDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *PartyInvitationDetailsRequest) Reset() {
	*x = PartyInvitationDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationDetailsRequest) ProtoMessage() {}

func (x *PartyInvitationDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationDetailsRequest.ProtoReflect.Descriptor instead.
func (*PartyInvitationDetailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{1}
}

func (x *PartyInvitationDetailsRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

type PartyInvitationAcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *PartyInvitationAcceptRequest) Reset() {
	*x = PartyInvitationAcceptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationAcceptRequest) ProtoMessage() {}

func (x *PartyInvitationAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationAcceptRequest.ProtoReflect.Descriptor instead.
func (*PartyInvitationAcceptRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{2}
}

func (x *PartyInvitationAcceptRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

type PartyInvitationRefuseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *PartyInvitationRefuseRequest) Reset() {
	*x = PartyInvitationRefuseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationRefuseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationRefuseRequest) ProtoMessage() {}

func (x *PartyInvitationRefuseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationRefuseRequest.ProtoReflect.Descriptor instead.
func (*PartyInvitationRefuseRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{3}
}

func (x *PartyInvitationRefuseRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

type PartyInvitationCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	GuestId int64 `protobuf:"varint,2,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
}

func (x *PartyInvitationCancelRequest) Reset() {
	*x = PartyInvitationCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationCancelRequest) ProtoMessage() {}

func (x *PartyInvitationCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationCancelRequest.ProtoReflect.Descriptor instead.
func (*PartyInvitationCancelRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{4}
}

func (x *PartyInvitationCancelRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyInvitationCancelRequest) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type PartyAbdicateThroneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId  int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *PartyAbdicateThroneRequest) Reset() {
	*x = PartyAbdicateThroneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyAbdicateThroneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyAbdicateThroneRequest) ProtoMessage() {}

func (x *PartyAbdicateThroneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyAbdicateThroneRequest.ProtoReflect.Descriptor instead.
func (*PartyAbdicateThroneRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{5}
}

func (x *PartyAbdicateThroneRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyAbdicateThroneRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type PartyFollowMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId  int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Enabled  *bool `protobuf:"varint,3,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
}

func (x *PartyFollowMemberRequest) Reset() {
	*x = PartyFollowMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyFollowMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyFollowMemberRequest) ProtoMessage() {}

func (x *PartyFollowMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyFollowMemberRequest.ProtoReflect.Descriptor instead.
func (*PartyFollowMemberRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{6}
}

func (x *PartyFollowMemberRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyFollowMemberRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PartyFollowMemberRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type PartyStopFollowMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId  int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *PartyStopFollowMemberRequest) Reset() {
	*x = PartyStopFollowMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyStopFollowMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyStopFollowMemberRequest) ProtoMessage() {}

func (x *PartyStopFollowMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyStopFollowMemberRequest.ProtoReflect.Descriptor instead.
func (*PartyStopFollowMemberRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{7}
}

func (x *PartyStopFollowMemberRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyStopFollowMemberRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type PartyLocateMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *PartyLocateMembersRequest) Reset() {
	*x = PartyLocateMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyLocateMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyLocateMembersRequest) ProtoMessage() {}

func (x *PartyLocateMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyLocateMembersRequest.ProtoReflect.Descriptor instead.
func (*PartyLocateMembersRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{8}
}

func (x *PartyLocateMembersRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

type PartyLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *PartyLeaveRequest) Reset() {
	*x = PartyLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyLeaveRequest) ProtoMessage() {}

func (x *PartyLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyLeaveRequest.ProtoReflect.Descriptor instead.
func (*PartyLeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{9}
}

func (x *PartyLeaveRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

type PartyKickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId  int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *PartyKickRequest) Reset() {
	*x = PartyKickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyKickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyKickRequest) ProtoMessage() {}

func (x *PartyKickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyKickRequest.ProtoReflect.Descriptor instead.
func (*PartyKickRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{10}
}

func (x *PartyKickRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyKickRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type PartyPledgeLoyaltyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Loyal   bool  `protobuf:"varint,2,opt,name=loyal,proto3" json:"loyal,omitempty"`
}

func (x *PartyPledgeLoyaltyRequest) Reset() {
	*x = PartyPledgeLoyaltyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyPledgeLoyaltyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyPledgeLoyaltyRequest) ProtoMessage() {}

func (x *PartyPledgeLoyaltyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyPledgeLoyaltyRequest.ProtoReflect.Descriptor instead.
func (*PartyPledgeLoyaltyRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{11}
}

func (x *PartyPledgeLoyaltyRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyPledgeLoyaltyRequest) GetLoyal() bool {
	if x != nil {
		return x.Loyal
	}
	return false
}

type PartyNameSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32  `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PartyNameSetRequest) Reset() {
	*x = PartyNameSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyNameSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameSetRequest) ProtoMessage() {}

func (x *PartyNameSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameSetRequest.ProtoReflect.Descriptor instead.
func (*PartyNameSetRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{12}
}

func (x *PartyNameSetRequest) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyNameSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PartyInvitationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId         int32     `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PartyType       PartyType `protobuf:"varint,2,opt,name=party_type,json=partyType,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyType" json:"party_type,omitempty"`
	PartyName       string    `protobuf:"bytes,3,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty"`
	MaxParticipants int32     `protobuf:"varint,4,opt,name=max_participants,json=maxParticipants,proto3" json:"max_participants,omitempty"`
	FromPlayerId    int64     `protobuf:"varint,5,opt,name=from_player_id,json=fromPlayerId,proto3" json:"from_player_id,omitempty"`
	FromPlayerName  string    `protobuf:"bytes,6,opt,name=from_player_name,json=fromPlayerName,proto3" json:"from_player_name,omitempty"`
	ToPlayerId      int64     `protobuf:"varint,7,opt,name=to_player_id,json=toPlayerId,proto3" json:"to_player_id,omitempty"`
}

func (x *PartyInvitationEvent) Reset() {
	*x = PartyInvitationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationEvent) ProtoMessage() {}

func (x *PartyInvitationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationEvent.ProtoReflect.Descriptor instead.
func (*PartyInvitationEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{13}
}

func (x *PartyInvitationEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyInvitationEvent) GetPartyType() PartyType {
	if x != nil {
		return x.PartyType
	}
	return PartyType_UNDEFINED
}

func (x *PartyInvitationEvent) GetPartyName() string {
	if x != nil {
		return x.PartyName
	}
	return ""
}

func (x *PartyInvitationEvent) GetMaxParticipants() int32 {
	if x != nil {
		return x.MaxParticipants
	}
	return 0
}

func (x *PartyInvitationEvent) GetFromPlayerId() int64 {
	if x != nil {
		return x.FromPlayerId
	}
	return 0
}

func (x *PartyInvitationEvent) GetFromPlayerName() string {
	if x != nil {
		return x.FromPlayerName
	}
	return ""
}

func (x *PartyInvitationEvent) GetToPlayerId() int64 {
	if x != nil {
		return x.ToPlayerId
	}
	return 0
}

type PartyInvitationDetailsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId        int32               `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PartyType      PartyType           `protobuf:"varint,2,opt,name=party_type,json=partyType,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyType" json:"party_type,omitempty"`
	PartyName      string              `protobuf:"bytes,3,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty"`
	FromPlayerId   int64               `protobuf:"varint,4,opt,name=from_player_id,json=fromPlayerId,proto3" json:"from_player_id,omitempty"`
	FromPlayerName string              `protobuf:"bytes,5,opt,name=from_player_name,json=fromPlayerName,proto3" json:"from_player_name,omitempty"`
	LeaderId       int64               `protobuf:"varint,6,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	Members        []*common.Character `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
	Guests         []*PartyGuest       `protobuf:"bytes,8,rep,name=guests,proto3" json:"guests,omitempty"`
}

func (x *PartyInvitationDetailsEvent) Reset() {
	*x = PartyInvitationDetailsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationDetailsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationDetailsEvent) ProtoMessage() {}

func (x *PartyInvitationDetailsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationDetailsEvent.ProtoReflect.Descriptor instead.
func (*PartyInvitationDetailsEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{14}
}

func (x *PartyInvitationDetailsEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyInvitationDetailsEvent) GetPartyType() PartyType {
	if x != nil {
		return x.PartyType
	}
	return PartyType_UNDEFINED
}

func (x *PartyInvitationDetailsEvent) GetPartyName() string {
	if x != nil {
		return x.PartyName
	}
	return ""
}

func (x *PartyInvitationDetailsEvent) GetFromPlayerId() int64 {
	if x != nil {
		return x.FromPlayerId
	}
	return 0
}

func (x *PartyInvitationDetailsEvent) GetFromPlayerName() string {
	if x != nil {
		return x.FromPlayerName
	}
	return ""
}

func (x *PartyInvitationDetailsEvent) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *PartyInvitationDetailsEvent) GetMembers() []*common.Character {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *PartyInvitationDetailsEvent) GetGuests() []*PartyGuest {
	if x != nil {
		return x.Guests
	}
	return nil
}

type PartyInvitationCancelledForGuestEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId     int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	CancellerId int64 `protobuf:"varint,2,opt,name=canceller_id,json=cancellerId,proto3" json:"canceller_id,omitempty"`
}

func (x *PartyInvitationCancelledForGuestEvent) Reset() {
	*x = PartyInvitationCancelledForGuestEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationCancelledForGuestEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationCancelledForGuestEvent) ProtoMessage() {}

func (x *PartyInvitationCancelledForGuestEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationCancelledForGuestEvent.ProtoReflect.Descriptor instead.
func (*PartyInvitationCancelledForGuestEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{15}
}

func (x *PartyInvitationCancelledForGuestEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyInvitationCancelledForGuestEvent) GetCancellerId() int64 {
	if x != nil {
		return x.CancellerId
	}
	return 0
}

type PartyInvitationCancelledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId     int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	CancellerId int64 `protobuf:"varint,2,opt,name=canceller_id,json=cancellerId,proto3" json:"canceller_id,omitempty"`
	GuestId     int64 `protobuf:"varint,3,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
}

func (x *PartyInvitationCancelledEvent) Reset() {
	*x = PartyInvitationCancelledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationCancelledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationCancelledEvent) ProtoMessage() {}

func (x *PartyInvitationCancelledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationCancelledEvent.ProtoReflect.Descriptor instead.
func (*PartyInvitationCancelledEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{16}
}

func (x *PartyInvitationCancelledEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyInvitationCancelledEvent) GetCancellerId() int64 {
	if x != nil {
		return x.CancellerId
	}
	return 0
}

func (x *PartyInvitationCancelledEvent) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type PartyInvitationRefusedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	GuestId int64 `protobuf:"varint,2,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
}

func (x *PartyInvitationRefusedEvent) Reset() {
	*x = PartyInvitationRefusedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInvitationRefusedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInvitationRefusedEvent) ProtoMessage() {}

func (x *PartyInvitationRefusedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInvitationRefusedEvent.ProtoReflect.Descriptor instead.
func (*PartyInvitationRefusedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{17}
}

func (x *PartyInvitationRefusedEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyInvitationRefusedEvent) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type PartyJoinErrorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32                              `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Reason  PartyJoinErrorEvent_PartyJoinError `protobuf:"varint,2,opt,name=reason,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyJoinErrorEvent_PartyJoinError" json:"reason,omitempty"`
}

func (x *PartyJoinErrorEvent) Reset() {
	*x = PartyJoinErrorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyJoinErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyJoinErrorEvent) ProtoMessage() {}

func (x *PartyJoinErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyJoinErrorEvent.ProtoReflect.Descriptor instead.
func (*PartyJoinErrorEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{18}
}

func (x *PartyJoinErrorEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyJoinErrorEvent) GetReason() PartyJoinErrorEvent_PartyJoinError {
	if x != nil {
		return x.Reason
	}
	return PartyJoinErrorEvent_UNKNOWN
}

type PartyJoinEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId         int32               `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PartyType       PartyType           `protobuf:"varint,2,opt,name=party_type,json=partyType,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyType" json:"party_type,omitempty"`
	LeaderId        int64               `protobuf:"varint,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	MaxParticipants int32               `protobuf:"varint,4,opt,name=max_participants,json=maxParticipants,proto3" json:"max_participants,omitempty"`
	Members         []*common.Character `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
	Guests          []*PartyGuest       `protobuf:"bytes,6,rep,name=guests,proto3" json:"guests,omitempty"`
	Restricted      bool                `protobuf:"varint,7,opt,name=restricted,proto3" json:"restricted,omitempty"`
	PartyName       string              `protobuf:"bytes,8,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty"`
}

func (x *PartyJoinEvent) Reset() {
	*x = PartyJoinEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyJoinEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyJoinEvent) ProtoMessage() {}

func (x *PartyJoinEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyJoinEvent.ProtoReflect.Descriptor instead.
func (*PartyJoinEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{19}
}

func (x *PartyJoinEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyJoinEvent) GetPartyType() PartyType {
	if x != nil {
		return x.PartyType
	}
	return PartyType_UNDEFINED
}

func (x *PartyJoinEvent) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *PartyJoinEvent) GetMaxParticipants() int32 {
	if x != nil {
		return x.MaxParticipants
	}
	return 0
}

func (x *PartyJoinEvent) GetMembers() []*common.Character {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *PartyJoinEvent) GetGuests() []*PartyGuest {
	if x != nil {
		return x.Guests
	}
	return nil
}

func (x *PartyJoinEvent) GetRestricted() bool {
	if x != nil {
		return x.Restricted
	}
	return false
}

func (x *PartyJoinEvent) GetPartyName() string {
	if x != nil {
		return x.PartyName
	}
	return ""
}

type PartyNewGuestEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32       `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Guest   *PartyGuest `protobuf:"bytes,2,opt,name=guest,proto3" json:"guest,omitempty"`
}

func (x *PartyNewGuestEvent) Reset() {
	*x = PartyNewGuestEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyNewGuestEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNewGuestEvent) ProtoMessage() {}

func (x *PartyNewGuestEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNewGuestEvent.ProtoReflect.Descriptor instead.
func (*PartyNewGuestEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{20}
}

func (x *PartyNewGuestEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyNewGuestEvent) GetGuest() *PartyGuest {
	if x != nil {
		return x.Guest
	}
	return nil
}

type PartyMemberUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32             `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Member  *common.Character `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *PartyMemberUpdateEvent) Reset() {
	*x = PartyMemberUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyMemberUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyMemberUpdateEvent) ProtoMessage() {}

func (x *PartyMemberUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyMemberUpdateEvent.ProtoReflect.Descriptor instead.
func (*PartyMemberUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{21}
}

func (x *PartyMemberUpdateEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyMemberUpdateEvent) GetMember() *common.Character {
	if x != nil {
		return x.Member
	}
	return nil
}

type PartyNewMemberEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32             `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Member  *common.Character `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *PartyNewMemberEvent) Reset() {
	*x = PartyNewMemberEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyNewMemberEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNewMemberEvent) ProtoMessage() {}

func (x *PartyNewMemberEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNewMemberEvent.ProtoReflect.Descriptor instead.
func (*PartyNewMemberEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{22}
}

func (x *PartyNewMemberEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyNewMemberEvent) GetMember() *common.Character {
	if x != nil {
		return x.Member
	}
	return nil
}

type PartyMemberUpdateLightEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId            int32                                 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PlayerId           int64                                 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CommonsInformation *common.PartyUpdateCommonsInformation `protobuf:"bytes,3,opt,name=commons_information,json=commonsInformation,proto3" json:"commons_information,omitempty"`
	Index              *int32                                `protobuf:"varint,4,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *PartyMemberUpdateLightEvent) Reset() {
	*x = PartyMemberUpdateLightEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyMemberUpdateLightEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyMemberUpdateLightEvent) ProtoMessage() {}

func (x *PartyMemberUpdateLightEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyMemberUpdateLightEvent.ProtoReflect.Descriptor instead.
func (*PartyMemberUpdateLightEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{23}
}

func (x *PartyMemberUpdateLightEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyMemberUpdateLightEvent) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PartyMemberUpdateLightEvent) GetCommonsInformation() *common.PartyUpdateCommonsInformation {
	if x != nil {
		return x.CommonsInformation
	}
	return nil
}

func (x *PartyMemberUpdateLightEvent) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type PartyMemberRemoveEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId         int32  `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	LeavingPlayerId int64  `protobuf:"varint,2,opt,name=leaving_player_id,json=leavingPlayerId,proto3" json:"leaving_player_id,omitempty"`
	KickerId        *int64 `protobuf:"varint,3,opt,name=kicker_id,json=kickerId,proto3,oneof" json:"kicker_id,omitempty"`
}

func (x *PartyMemberRemoveEvent) Reset() {
	*x = PartyMemberRemoveEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyMemberRemoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyMemberRemoveEvent) ProtoMessage() {}

func (x *PartyMemberRemoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyMemberRemoveEvent.ProtoReflect.Descriptor instead.
func (*PartyMemberRemoveEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{24}
}

func (x *PartyMemberRemoveEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyMemberRemoveEvent) GetLeavingPlayerId() int64 {
	if x != nil {
		return x.LeavingPlayerId
	}
	return 0
}

func (x *PartyMemberRemoveEvent) GetKickerId() int64 {
	if x != nil && x.KickerId != nil {
		return *x.KickerId
	}
	return 0
}

type PartyLeaderUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId       int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PartyLeaderId int64 `protobuf:"varint,2,opt,name=party_leader_id,json=partyLeaderId,proto3" json:"party_leader_id,omitempty"`
}

func (x *PartyLeaderUpdateEvent) Reset() {
	*x = PartyLeaderUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyLeaderUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyLeaderUpdateEvent) ProtoMessage() {}

func (x *PartyLeaderUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyLeaderUpdateEvent.ProtoReflect.Descriptor instead.
func (*PartyLeaderUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{25}
}

func (x *PartyLeaderUpdateEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyLeaderUpdateEvent) GetPartyLeaderId() int64 {
	if x != nil {
		return x.PartyLeaderId
	}
	return 0
}

type PartyFollowStatusUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId    int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Success    bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	IsFollowed bool  `protobuf:"varint,3,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	FollowedId int64 `protobuf:"varint,4,opt,name=followed_id,json=followedId,proto3" json:"followed_id,omitempty"`
}

func (x *PartyFollowStatusUpdateEvent) Reset() {
	*x = PartyFollowStatusUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyFollowStatusUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyFollowStatusUpdateEvent) ProtoMessage() {}

func (x *PartyFollowStatusUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyFollowStatusUpdateEvent.ProtoReflect.Descriptor instead.
func (*PartyFollowStatusUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{26}
}

func (x *PartyFollowStatusUpdateEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyFollowStatusUpdateEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PartyFollowStatusUpdateEvent) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

func (x *PartyFollowStatusUpdateEvent) GetFollowedId() int64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type PartyLeaveEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *PartyLeaveEvent) Reset() {
	*x = PartyLeaveEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyLeaveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyLeaveEvent) ProtoMessage() {}

func (x *PartyLeaveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyLeaveEvent.ProtoReflect.Descriptor instead.
func (*PartyLeaveEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{27}
}

func (x *PartyLeaveEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

type PartyKickedByEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId  int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	KickerId int64 `protobuf:"varint,2,opt,name=kicker_id,json=kickerId,proto3" json:"kicker_id,omitempty"`
}

func (x *PartyKickedByEvent) Reset() {
	*x = PartyKickedByEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyKickedByEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyKickedByEvent) ProtoMessage() {}

func (x *PartyKickedByEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyKickedByEvent.ProtoReflect.Descriptor instead.
func (*PartyKickedByEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{28}
}

func (x *PartyKickedByEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyKickedByEvent) GetKickerId() int64 {
	if x != nil {
		return x.KickerId
	}
	return 0
}

type PartyRestrictedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId    int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Restricted bool  `protobuf:"varint,2,opt,name=restricted,proto3" json:"restricted,omitempty"`
}

func (x *PartyRestrictedEvent) Reset() {
	*x = PartyRestrictedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyRestrictedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyRestrictedEvent) ProtoMessage() {}

func (x *PartyRestrictedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyRestrictedEvent.ProtoReflect.Descriptor instead.
func (*PartyRestrictedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{29}
}

func (x *PartyRestrictedEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyRestrictedEvent) GetRestricted() bool {
	if x != nil {
		return x.Restricted
	}
	return false
}

type PartyDeletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *PartyDeletedEvent) Reset() {
	*x = PartyDeletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyDeletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyDeletedEvent) ProtoMessage() {}

func (x *PartyDeletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyDeletedEvent.ProtoReflect.Descriptor instead.
func (*PartyDeletedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{30}
}

func (x *PartyDeletedEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

type PartyLoyaltyStatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Loyal   bool  `protobuf:"varint,2,opt,name=loyal,proto3" json:"loyal,omitempty"`
}

func (x *PartyLoyaltyStatusEvent) Reset() {
	*x = PartyLoyaltyStatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyLoyaltyStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyLoyaltyStatusEvent) ProtoMessage() {}

func (x *PartyLoyaltyStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyLoyaltyStatusEvent.ProtoReflect.Descriptor instead.
func (*PartyLoyaltyStatusEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{31}
}

func (x *PartyLoyaltyStatusEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyLoyaltyStatusEvent) GetLoyal() bool {
	if x != nil {
		return x.Loyal
	}
	return false
}

type PartyMemberInFightEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId              int32                          `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Reason               PartyMemberInFightCause        `protobuf:"varint,2,opt,name=reason,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyMemberInFightCause" json:"reason,omitempty"`
	MemberId             int64                          `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	MemberAccountId      int64                          `protobuf:"varint,4,opt,name=member_account_id,json=memberAccountId,proto3" json:"member_account_id,omitempty"`
	MemberName           string                         `protobuf:"bytes,5,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
	FightId              int32                          `protobuf:"varint,6,opt,name=fight_id,json=fightId,proto3" json:"fight_id,omitempty"`
	TimeBeforeFightStart int32                          `protobuf:"varint,7,opt,name=time_before_fight_start,json=timeBeforeFightStart,proto3" json:"time_before_fight_start,omitempty"`
	StandardFightMap     *common.MapExtendedCoordinates `protobuf:"bytes,8,opt,name=standard_fight_map,json=standardFightMap,proto3" json:"standard_fight_map,omitempty"`
}

func (x *PartyMemberInFightEvent) Reset() {
	*x = PartyMemberInFightEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyMemberInFightEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyMemberInFightEvent) ProtoMessage() {}

func (x *PartyMemberInFightEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyMemberInFightEvent.ProtoReflect.Descriptor instead.
func (*PartyMemberInFightEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{32}
}

func (x *PartyMemberInFightEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyMemberInFightEvent) GetReason() PartyMemberInFightCause {
	if x != nil {
		return x.Reason
	}
	return PartyMemberInFightCause_UNKNOWN
}

func (x *PartyMemberInFightEvent) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PartyMemberInFightEvent) GetMemberAccountId() int64 {
	if x != nil {
		return x.MemberAccountId
	}
	return 0
}

func (x *PartyMemberInFightEvent) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *PartyMemberInFightEvent) GetFightId() int32 {
	if x != nil {
		return x.FightId
	}
	return 0
}

func (x *PartyMemberInFightEvent) GetTimeBeforeFightStart() int32 {
	if x != nil {
		return x.TimeBeforeFightStart
	}
	return 0
}

func (x *PartyMemberInFightEvent) GetStandardFightMap() *common.MapExtendedCoordinates {
	if x != nil {
		return x.StandardFightMap
	}
	return nil
}

type PartyMemberInBreachFightEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId              int32                   `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Reason               PartyMemberInFightCause `protobuf:"varint,2,opt,name=reason,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyMemberInFightCause" json:"reason,omitempty"`
	MemberId             int64                   `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	MemberAccountId      int64                   `protobuf:"varint,4,opt,name=member_account_id,json=memberAccountId,proto3" json:"member_account_id,omitempty"`
	MemberName           string                  `protobuf:"bytes,5,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
	FightId              int32                   `protobuf:"varint,6,opt,name=fight_id,json=fightId,proto3" json:"fight_id,omitempty"`
	TimeBeforeFightStart int32                   `protobuf:"varint,7,opt,name=time_before_fight_start,json=timeBeforeFightStart,proto3" json:"time_before_fight_start,omitempty"`
	Floor                int32                   `protobuf:"varint,8,opt,name=floor,proto3" json:"floor,omitempty"`
	Room                 int32                   `protobuf:"varint,9,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *PartyMemberInBreachFightEvent) Reset() {
	*x = PartyMemberInBreachFightEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyMemberInBreachFightEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyMemberInBreachFightEvent) ProtoMessage() {}

func (x *PartyMemberInBreachFightEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyMemberInBreachFightEvent.ProtoReflect.Descriptor instead.
func (*PartyMemberInBreachFightEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{33}
}

func (x *PartyMemberInBreachFightEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyMemberInBreachFightEvent) GetReason() PartyMemberInFightCause {
	if x != nil {
		return x.Reason
	}
	return PartyMemberInFightCause_UNKNOWN
}

func (x *PartyMemberInBreachFightEvent) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PartyMemberInBreachFightEvent) GetMemberAccountId() int64 {
	if x != nil {
		return x.MemberAccountId
	}
	return 0
}

func (x *PartyMemberInBreachFightEvent) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *PartyMemberInBreachFightEvent) GetFightId() int32 {
	if x != nil {
		return x.FightId
	}
	return 0
}

func (x *PartyMemberInBreachFightEvent) GetTimeBeforeFightStart() int32 {
	if x != nil {
		return x.TimeBeforeFightStart
	}
	return 0
}

func (x *PartyMemberInBreachFightEvent) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *PartyMemberInBreachFightEvent) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

type PartyNameUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32  `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PartyNameUpdateEvent) Reset() {
	*x = PartyNameUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyNameUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameUpdateEvent) ProtoMessage() {}

func (x *PartyNameUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameUpdateEvent.ProtoReflect.Descriptor instead.
func (*PartyNameUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{34}
}

func (x *PartyNameUpdateEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyNameUpdateEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PartyNameSetErrorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId int32                                 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Result  PartyNameSetErrorEvent_PartyNameError `protobuf:"varint,2,opt,name=result,proto3,enum=com.ankama.dofus.server.game.protocol.party.PartyNameSetErrorEvent_PartyNameError" json:"result,omitempty"`
}

func (x *PartyNameSetErrorEvent) Reset() {
	*x = PartyNameSetErrorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyNameSetErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameSetErrorEvent) ProtoMessage() {}

func (x *PartyNameSetErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameSetErrorEvent.ProtoReflect.Descriptor instead.
func (*PartyNameSetErrorEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{35}
}

func (x *PartyNameSetErrorEvent) GetPartyId() int32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyNameSetErrorEvent) GetResult() PartyNameSetErrorEvent_PartyNameError {
	if x != nil {
		return x.Result
	}
	return PartyNameSetErrorEvent_UNDEFINED_ERROR
}

type PartyGuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64                   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	HostId   int64                   `protobuf:"varint,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Name     string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Look     *common.EntityLook      `protobuf:"bytes,4,opt,name=look,proto3" json:"look,omitempty"`
	Breed    int32                   `protobuf:"varint,5,opt,name=breed,proto3" json:"breed,omitempty"`
	Gender   common.Gender           `protobuf:"varint,6,opt,name=gender,proto3,enum=com.ankama.dofus.server.game.protocol.common.Gender" json:"gender,omitempty"`
	Status   *common.CharacterStatus `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Entities []*common.PartyEntity   `protobuf:"bytes,8,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *PartyGuest) Reset() {
	*x = PartyGuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_party_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyGuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyGuest) ProtoMessage() {}

func (x *PartyGuest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_party_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyGuest.ProtoReflect.Descriptor instead.
func (*PartyGuest) Descriptor() ([]byte, []int) {
	return file_proto_game_party_proto_rawDescGZIP(), []int{36}
}

func (x *PartyGuest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PartyGuest) GetHostId() int64 {
	if x != nil {
		return x.HostId
	}
	return 0
}

func (x *PartyGuest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PartyGuest) GetLook() *common.EntityLook {
	if x != nil {
		return x.Look
	}
	return nil
}

func (x *PartyGuest) GetBreed() int32 {
	if x != nil {
		return x.Breed
	}
	return 0
}

func (x *PartyGuest) GetGender() common.Gender {
	if x != nil {
		return x.Gender
	}
	return common.Gender(0)
}

func (x *PartyGuest) GetStatus() *common.CharacterStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PartyGuest) GetEntities() []*common.PartyEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

var File_proto_game_party_proto protoreflect.FileDescriptor

var file_proto_game_party_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x1d, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1c, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x22, 0x39, 0x0a, 0x1c, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1c, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x54, 0x0a, 0x1a, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x62, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x18, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x56, 0x0a, 0x1c, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53,
	0x74, 0x6f, 0x70, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36,
	0x0a, 0x19, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4b,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x4c, 0x0a, 0x19, 0x50, 0x61, 0x72, 0x74, 0x79, 0x50, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x79, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x79, 0x61, 0x6c,
	0x22, 0x44, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x6f,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74,
	0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbf, 0x03,
	0x0a, 0x1b, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x4f,
	0x0a, 0x06, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x65, 0x0a, 0x25, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x1d, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x53, 0x0a, 0x1b, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xba, 0x03, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a,
	0x6f, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x67, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x9e, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x52, 0x54, 0x59,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x43, 0x49, 0x54, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4c, 0x4f,
	0x59, 0x41, 0x4c, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4d, 0x4f, 0x44, 0x49, 0x46,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x4d, 0x45, 0x54,
	0x5f, 0x43, 0x52, 0x49, 0x54, 0x45, 0x52, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x10,
	0x0a, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x55, 0x54, 0x4f, 0x52, 0x49, 0x41, 0x4c,
	0x10, 0x0c, 0x22, 0xad, 0x03, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x55, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6d, 0x61, 0x78, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x51, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x4f, 0x0a, 0x06, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x77, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xf8, 0x01,
	0x0a, 0x1b, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x7c, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x6c, 0x65, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x65, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x6b, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x08, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x16, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x1c, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22,
	0x2c, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4c, 0x0a,
	0x12, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x14, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x22, 0x2e,
	0x0a, 0x11, 0x50, 0x61, 0x72, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x17, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x79, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x79, 0x61, 0x6c, 0x22, 0xc2, 0x03, 0x0a, 0x17, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x5c, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x72, 0x0a, 0x12, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x10, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x61, 0x70, 0x22,
	0xfe, 0x02, 0x0a, 0x1d, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x61, 0x75,
	0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x22, 0x45, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x6a, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x0e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x13, 0x0a, 0x0f, 0x55,
	0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x4e, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x5f, 0x52, 0x49, 0x47,
	0x48, 0x54, 0x53, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x57, 0x10, 0x04, 0x22, 0xb6, 0x03, 0x0a, 0x0a, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x4c, 0x0a, 0x04, 0x6c, 0x6f, 0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x72, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x62, 0x72, 0x65, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2a, 0x80, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f,
	0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x10,
	0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x4b, 0x45, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e,
	0x47, 0x45, 0x10, 0x04, 0x2a, 0x34, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x52, 0x45, 0x4e, 0x41, 0x10, 0x02, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x6f,
	0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x72,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_party_proto_rawDescOnce sync.Once
	file_proto_game_party_proto_rawDescData = file_proto_game_party_proto_rawDesc
)

func file_proto_game_party_proto_rawDescGZIP() []byte {
	file_proto_game_party_proto_rawDescOnce.Do(func() {
		file_proto_game_party_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_party_proto_rawDescData)
	})
	return file_proto_game_party_proto_rawDescData
}

var file_proto_game_party_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_game_party_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_game_party_proto_goTypes = []any{
	(PartyMemberInFightCause)(0),                  // 0: com.ankama.dofus.server.game.protocol.party.PartyMemberInFightCause
	(PartyType)(0),                                // 1: com.ankama.dofus.server.game.protocol.party.PartyType
	(PartyJoinErrorEvent_PartyJoinError)(0),       // 2: com.ankama.dofus.server.game.protocol.party.PartyJoinErrorEvent.PartyJoinError
	(PartyNameSetErrorEvent_PartyNameError)(0),    // 3: com.ankama.dofus.server.game.protocol.party.PartyNameSetErrorEvent.PartyNameError
	(*PartyInvitationRequest)(nil),                // 4: com.ankama.dofus.server.game.protocol.party.PartyInvitationRequest
	(*PartyInvitationDetailsRequest)(nil),         // 5: com.ankama.dofus.server.game.protocol.party.PartyInvitationDetailsRequest
	(*PartyInvitationAcceptRequest)(nil),          // 6: com.ankama.dofus.server.game.protocol.party.PartyInvitationAcceptRequest
	(*PartyInvitationRefuseRequest)(nil),          // 7: com.ankama.dofus.server.game.protocol.party.PartyInvitationRefuseRequest
	(*PartyInvitationCancelRequest)(nil),          // 8: com.ankama.dofus.server.game.protocol.party.PartyInvitationCancelRequest
	(*PartyAbdicateThroneRequest)(nil),            // 9: com.ankama.dofus.server.game.protocol.party.PartyAbdicateThroneRequest
	(*PartyFollowMemberRequest)(nil),              // 10: com.ankama.dofus.server.game.protocol.party.PartyFollowMemberRequest
	(*PartyStopFollowMemberRequest)(nil),          // 11: com.ankama.dofus.server.game.protocol.party.PartyStopFollowMemberRequest
	(*PartyLocateMembersRequest)(nil),             // 12: com.ankama.dofus.server.game.protocol.party.PartyLocateMembersRequest
	(*PartyLeaveRequest)(nil),                     // 13: com.ankama.dofus.server.game.protocol.party.PartyLeaveRequest
	(*PartyKickRequest)(nil),                      // 14: com.ankama.dofus.server.game.protocol.party.PartyKickRequest
	(*PartyPledgeLoyaltyRequest)(nil),             // 15: com.ankama.dofus.server.game.protocol.party.PartyPledgeLoyaltyRequest
	(*PartyNameSetRequest)(nil),                   // 16: com.ankama.dofus.server.game.protocol.party.PartyNameSetRequest
	(*PartyInvitationEvent)(nil),                  // 17: com.ankama.dofus.server.game.protocol.party.PartyInvitationEvent
	(*PartyInvitationDetailsEvent)(nil),           // 18: com.ankama.dofus.server.game.protocol.party.PartyInvitationDetailsEvent
	(*PartyInvitationCancelledForGuestEvent)(nil), // 19: com.ankama.dofus.server.game.protocol.party.PartyInvitationCancelledForGuestEvent
	(*PartyInvitationCancelledEvent)(nil),         // 20: com.ankama.dofus.server.game.protocol.party.PartyInvitationCancelledEvent
	(*PartyInvitationRefusedEvent)(nil),           // 21: com.ankama.dofus.server.game.protocol.party.PartyInvitationRefusedEvent
	(*PartyJoinErrorEvent)(nil),                   // 22: com.ankama.dofus.server.game.protocol.party.PartyJoinErrorEvent
	(*PartyJoinEvent)(nil),                        // 23: com.ankama.dofus.server.game.protocol.party.PartyJoinEvent
	(*PartyNewGuestEvent)(nil),                    // 24: com.ankama.dofus.server.game.protocol.party.PartyNewGuestEvent
	(*PartyMemberUpdateEvent)(nil),                // 25: com.ankama.dofus.server.game.protocol.party.PartyMemberUpdateEvent
	(*PartyNewMemberEvent)(nil),                   // 26: com.ankama.dofus.server.game.protocol.party.PartyNewMemberEvent
	(*PartyMemberUpdateLightEvent)(nil),           // 27: com.ankama.dofus.server.game.protocol.party.PartyMemberUpdateLightEvent
	(*PartyMemberRemoveEvent)(nil),                // 28: com.ankama.dofus.server.game.protocol.party.PartyMemberRemoveEvent
	(*PartyLeaderUpdateEvent)(nil),                // 29: com.ankama.dofus.server.game.protocol.party.PartyLeaderUpdateEvent
	(*PartyFollowStatusUpdateEvent)(nil),          // 30: com.ankama.dofus.server.game.protocol.party.PartyFollowStatusUpdateEvent
	(*PartyLeaveEvent)(nil),                       // 31: com.ankama.dofus.server.game.protocol.party.PartyLeaveEvent
	(*PartyKickedByEvent)(nil),                    // 32: com.ankama.dofus.server.game.protocol.party.PartyKickedByEvent
	(*PartyRestrictedEvent)(nil),                  // 33: com.ankama.dofus.server.game.protocol.party.PartyRestrictedEvent
	(*PartyDeletedEvent)(nil),                     // 34: com.ankama.dofus.server.game.protocol.party.PartyDeletedEvent
	(*PartyLoyaltyStatusEvent)(nil),               // 35: com.ankama.dofus.server.game.protocol.party.PartyLoyaltyStatusEvent
	(*PartyMemberInFightEvent)(nil),               // 36: com.ankama.dofus.server.game.protocol.party.PartyMemberInFightEvent
	(*PartyMemberInBreachFightEvent)(nil),         // 37: com.ankama.dofus.server.game.protocol.party.PartyMemberInBreachFightEvent
	(*PartyNameUpdateEvent)(nil),                  // 38: com.ankama.dofus.server.game.protocol.party.PartyNameUpdateEvent
	(*PartyNameSetErrorEvent)(nil),                // 39: com.ankama.dofus.server.game.protocol.party.PartyNameSetErrorEvent
	(*PartyGuest)(nil),                            // 40: com.ankama.dofus.server.game.protocol.party.PartyGuest
	(*common.PlayerSearch)(nil),                   // 41: com.ankama.dofus.server.game.protocol.common.PlayerSearch
	(*common.Character)(nil),                      // 42: com.ankama.dofus.server.game.protocol.common.Character
	(*common.PartyUpdateCommonsInformation)(nil),  // 43: com.ankama.dofus.server.game.protocol.common.PartyUpdateCommonsInformation
	(*common.MapExtendedCoordinates)(nil),         // 44: com.ankama.dofus.server.game.protocol.common.MapExtendedCoordinates
	(*common.EntityLook)(nil),                     // 45: com.ankama.dofus.server.game.protocol.common.EntityLook
	(common.Gender)(0),                            // 46: com.ankama.dofus.server.game.protocol.common.Gender
	(*common.CharacterStatus)(nil),                // 47: com.ankama.dofus.server.game.protocol.common.CharacterStatus
	(*common.PartyEntity)(nil),                    // 48: com.ankama.dofus.server.game.protocol.common.PartyEntity
}
var file_proto_game_party_proto_depIdxs = []int32{
	41, // 0: com.ankama.dofus.server.game.protocol.party.PartyInvitationRequest.target:type_name -> com.ankama.dofus.server.game.protocol.common.PlayerSearch
	1,  // 1: com.ankama.dofus.server.game.protocol.party.PartyInvitationRequest.party_type:type_name -> com.ankama.dofus.server.game.protocol.party.PartyType
	1,  // 2: com.ankama.dofus.server.game.protocol.party.PartyInvitationEvent.party_type:type_name -> com.ankama.dofus.server.game.protocol.party.PartyType
	1,  // 3: com.ankama.dofus.server.game.protocol.party.PartyInvitationDetailsEvent.party_type:type_name -> com.ankama.dofus.server.game.protocol.party.PartyType
	42, // 4: com.ankama.dofus.server.game.protocol.party.PartyInvitationDetailsEvent.members:type_name -> com.ankama.dofus.server.game.protocol.common.Character
	40, // 5: com.ankama.dofus.server.game.protocol.party.PartyInvitationDetailsEvent.guests:type_name -> com.ankama.dofus.server.game.protocol.party.PartyGuest
	2,  // 6: com.ankama.dofus.server.game.protocol.party.PartyJoinErrorEvent.reason:type_name -> com.ankama.dofus.server.game.protocol.party.PartyJoinErrorEvent.PartyJoinError
	1,  // 7: com.ankama.dofus.server.game.protocol.party.PartyJoinEvent.party_type:type_name -> com.ankama.dofus.server.game.protocol.party.PartyType
	42, // 8: com.ankama.dofus.server.game.protocol.party.PartyJoinEvent.members:type_name -> com.ankama.dofus.server.game.protocol.common.Character
	40, // 9: com.ankama.dofus.server.game.protocol.party.PartyJoinEvent.guests:type_name -> com.ankama.dofus.server.game.protocol.party.PartyGuest
	40, // 10: com.ankama.dofus.server.game.protocol.party.PartyNewGuestEvent.guest:type_name -> com.ankama.dofus.server.game.protocol.party.PartyGuest
	42, // 11: com.ankama.dofus.server.game.protocol.party.PartyMemberUpdateEvent.member:type_name -> com.ankama.dofus.server.game.protocol.common.Character
	42, // 12: com.ankama.dofus.server.game.protocol.party.PartyNewMemberEvent.member:type_name -> com.ankama.dofus.server.game.protocol.common.Character
	43, // 13: com.ankama.dofus.server.game.protocol.party.PartyMemberUpdateLightEvent.commons_information:type_name -> com.ankama.dofus.server.game.protocol.common.PartyUpdateCommonsInformation
	0,  // 14: com.ankama.dofus.server.game.protocol.party.PartyMemberInFightEvent.reason:type_name -> com.ankama.dofus.server.game.protocol.party.PartyMemberInFightCause
	44, // 15: com.ankama.dofus.server.game.protocol.party.PartyMemberInFightEvent.standard_fight_map:type_name -> com.ankama.dofus.server.game.protocol.common.MapExtendedCoordinates
	0,  // 16: com.ankama.dofus.server.game.protocol.party.PartyMemberInBreachFightEvent.reason:type_name -> com.ankama.dofus.server.game.protocol.party.PartyMemberInFightCause
	3,  // 17: com.ankama.dofus.server.game.protocol.party.PartyNameSetErrorEvent.result:type_name -> com.ankama.dofus.server.game.protocol.party.PartyNameSetErrorEvent.PartyNameError
	45, // 18: com.ankama.dofus.server.game.protocol.party.PartyGuest.look:type_name -> com.ankama.dofus.server.game.protocol.common.EntityLook
	46, // 19: com.ankama.dofus.server.game.protocol.party.PartyGuest.gender:type_name -> com.ankama.dofus.server.game.protocol.common.Gender
	47, // 20: com.ankama.dofus.server.game.protocol.party.PartyGuest.status:type_name -> com.ankama.dofus.server.game.protocol.common.CharacterStatus
	48, // 21: com.ankama.dofus.server.game.protocol.party.PartyGuest.entities:type_name -> com.ankama.dofus.server.game.protocol.common.PartyEntity
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_game_party_proto_init() }
func file_proto_game_party_proto_init() {
	if File_proto_game_party_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_party_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationAcceptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationRefuseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PartyAbdicateThroneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PartyFollowMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PartyStopFollowMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PartyLocateMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PartyLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PartyKickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PartyPledgeLoyaltyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PartyNameSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationDetailsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationCancelledForGuestEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationCancelledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInvitationRefusedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PartyJoinErrorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PartyJoinEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*PartyNewGuestEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PartyMemberUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PartyNewMemberEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PartyMemberUpdateLightEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*PartyMemberRemoveEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*PartyLeaderUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*PartyFollowStatusUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PartyLeaveEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PartyKickedByEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PartyRestrictedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*PartyDeletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*PartyLoyaltyStatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*PartyMemberInFightEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*PartyMemberInBreachFightEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*PartyNameUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*PartyNameSetErrorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_party_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*PartyGuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_party_proto_msgTypes[6].OneofWrappers = []any{}
	file_proto_game_party_proto_msgTypes[23].OneofWrappers = []any{}
	file_proto_game_party_proto_msgTypes[24].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_party_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_party_proto_goTypes,
		DependencyIndexes: file_proto_game_party_proto_depIdxs,
		EnumInfos:         file_proto_game_party_proto_enumTypes,
		MessageInfos:      file_proto_game_party_proto_msgTypes,
	}.Build()
	File_proto_game_party_proto = out.File
	file_proto_game_party_proto_rawDesc = nil
	file_proto_game_party_proto_goTypes = nil
	file_proto_game_party_proto_depIdxs = nil
}
