// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/alliance_conquest.proto

package alliance_conquest

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType int32

const (
	KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_FIGHT      KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType = 0
	KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_DOMINATION KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType = 1
	KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_PRISM      KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType = 2
)

// Enum value maps for KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType.
var (
	KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType_name = map[int32]string{
		0: "FIGHT",
		1: "DOMINATION",
		2: "PRISM",
	}
	KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType_value = map[string]int32{
		"FIGHT":      0,
		"DOMINATION": 1,
		"PRISM":      2,
	}
)

func (x KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType) Enum() *KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType {
	p := new(KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType)
	*p = x
	return p
}

func (x KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_alliance_conquest_proto_enumTypes[0].Descriptor()
}

func (KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType) Type() protoreflect.EnumType {
	return &file_proto_game_alliance_conquest_proto_enumTypes[0]
}

func (x KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType.Descriptor instead.
func (KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{12, 0, 1, 0}
}

type AVAStateUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *AVAStateUpdateRequest) Reset() {
	*x = AVAStateUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AVAStateUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AVAStateUpdateRequest) ProtoMessage() {}

func (x *AVAStateUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AVAStateUpdateRequest.ProtoReflect.Descriptor instead.
func (*AVAStateUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{0}
}

func (x *AVAStateUpdateRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type AllianceFightListenStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllianceFightListenStartRequest) Reset() {
	*x = AllianceFightListenStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightListenStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightListenStartRequest) ProtoMessage() {}

func (x *AllianceFightListenStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightListenStartRequest.ProtoReflect.Descriptor instead.
func (*AllianceFightListenStartRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{1}
}

type AllianceFightListenStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllianceFightListenStopRequest) Reset() {
	*x = AllianceFightListenStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightListenStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightListenStopRequest) ProtoMessage() {}

func (x *AllianceFightListenStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightListenStopRequest.ProtoReflect.Descriptor instead.
func (*AllianceFightListenStopRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{2}
}

type AllianceFightJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
}

func (x *AllianceFightJoinRequest) Reset() {
	*x = AllianceFightJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightJoinRequest) ProtoMessage() {}

func (x *AllianceFightJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightJoinRequest.ProtoReflect.Descriptor instead.
func (*AllianceFightJoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{3}
}

func (x *AllianceFightJoinRequest) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

type AllianceFightReplaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation   *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
	ToReplaceFighterId int64                          `protobuf:"varint,2,opt,name=to_replace_fighter_id,json=toReplaceFighterId,proto3" json:"to_replace_fighter_id,omitempty"`
}

func (x *AllianceFightReplaceRequest) Reset() {
	*x = AllianceFightReplaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightReplaceRequest) ProtoMessage() {}

func (x *AllianceFightReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightReplaceRequest.ProtoReflect.Descriptor instead.
func (*AllianceFightReplaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{4}
}

func (x *AllianceFightReplaceRequest) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

func (x *AllianceFightReplaceRequest) GetToReplaceFighterId() int64 {
	if x != nil {
		return x.ToReplaceFighterId
	}
	return 0
}

type AllianceFightLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
}

func (x *AllianceFightLeaveRequest) Reset() {
	*x = AllianceFightLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightLeaveRequest) ProtoMessage() {}

func (x *AllianceFightLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightLeaveRequest.ProtoReflect.Descriptor instead.
func (*AllianceFightLeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{5}
}

func (x *AllianceFightLeaveRequest) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

type AllianceFightsInformationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllianceFights []*common.SocialFight `protobuf:"bytes,1,rep,name=alliance_fights,json=allianceFights,proto3" json:"alliance_fights,omitempty"`
}

func (x *AllianceFightsInformationEvent) Reset() {
	*x = AllianceFightsInformationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightsInformationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightsInformationEvent) ProtoMessage() {}

func (x *AllianceFightsInformationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightsInformationEvent.ProtoReflect.Descriptor instead.
func (*AllianceFightsInformationEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{6}
}

func (x *AllianceFightsInformationEvent) GetAllianceFights() []*common.SocialFight {
	if x != nil {
		return x.AllianceFights
	}
	return nil
}

type AllianceFightStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
	Phase            *common.FightPhaseInfo         `protobuf:"bytes,2,opt,name=phase,proto3" json:"phase,omitempty"`
}

func (x *AllianceFightStartedEvent) Reset() {
	*x = AllianceFightStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightStartedEvent) ProtoMessage() {}

func (x *AllianceFightStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightStartedEvent.ProtoReflect.Descriptor instead.
func (*AllianceFightStartedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{7}
}

func (x *AllianceFightStartedEvent) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

func (x *AllianceFightStartedEvent) GetPhase() *common.FightPhaseInfo {
	if x != nil {
		return x.Phase
	}
	return nil
}

type AllianceFightFinishedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
}

func (x *AllianceFightFinishedEvent) Reset() {
	*x = AllianceFightFinishedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightFinishedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightFinishedEvent) ProtoMessage() {}

func (x *AllianceFightFinishedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightFinishedEvent.ProtoReflect.Descriptor instead.
func (*AllianceFightFinishedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{8}
}

func (x *AllianceFightFinishedEvent) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

type AllianceFightPhaseUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
	Phase            *common.FightPhaseInfo         `protobuf:"bytes,2,opt,name=phase,proto3" json:"phase,omitempty"`
}

func (x *AllianceFightPhaseUpdateEvent) Reset() {
	*x = AllianceFightPhaseUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightPhaseUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightPhaseUpdateEvent) ProtoMessage() {}

func (x *AllianceFightPhaseUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightPhaseUpdateEvent.ProtoReflect.Descriptor instead.
func (*AllianceFightPhaseUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{9}
}

func (x *AllianceFightPhaseUpdateEvent) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

func (x *AllianceFightPhaseUpdateEvent) GetPhase() *common.FightPhaseInfo {
	if x != nil {
		return x.Phase
	}
	return nil
}

type AllianceFightFighterAddedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
	Fighter          *common.Character              `protobuf:"bytes,2,opt,name=fighter,proto3" json:"fighter,omitempty"`
	Team             common.Team                    `protobuf:"varint,3,opt,name=team,proto3,enum=com.ankama.dofus.server.game.protocol.common.Team" json:"team,omitempty"`
}

func (x *AllianceFightFighterAddedEvent) Reset() {
	*x = AllianceFightFighterAddedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightFighterAddedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightFighterAddedEvent) ProtoMessage() {}

func (x *AllianceFightFighterAddedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightFighterAddedEvent.ProtoReflect.Descriptor instead.
func (*AllianceFightFighterAddedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{10}
}

func (x *AllianceFightFighterAddedEvent) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

func (x *AllianceFightFighterAddedEvent) GetFighter() *common.Character {
	if x != nil {
		return x.Fighter
	}
	return nil
}

func (x *AllianceFightFighterAddedEvent) GetTeam() common.Team {
	if x != nil {
		return x.Team
	}
	return common.Team(0)
}

type AllianceFightFighterRemovedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightInformation *common.SocialFightInformation `protobuf:"bytes,1,opt,name=fight_information,json=fightInformation,proto3" json:"fight_information,omitempty"`
	FighterId        int64                          `protobuf:"varint,2,opt,name=fighter_id,json=fighterId,proto3" json:"fighter_id,omitempty"`
}

func (x *AllianceFightFighterRemovedEvent) Reset() {
	*x = AllianceFightFighterRemovedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceFightFighterRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceFightFighterRemovedEvent) ProtoMessage() {}

func (x *AllianceFightFighterRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceFightFighterRemovedEvent.ProtoReflect.Descriptor instead.
func (*AllianceFightFighterRemovedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{11}
}

func (x *AllianceFightFighterRemovedEvent) GetFightInformation() *common.SocialFightInformation {
	if x != nil {
		return x.FightInformation
	}
	return nil
}

func (x *AllianceFightFighterRemovedEvent) GetFighterId() int64 {
	if x != nil {
		return x.FighterId
	}
	return 0
}

type KOTHUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KothAllianceInformation []*KOTHUpdateEvent_KOTHAllianceInformation `protobuf:"bytes,1,rep,name=koth_alliance_information,json=kothAllianceInformation,proto3" json:"koth_alliance_information,omitempty"`
	StartingAvaTimestamp    string                                     `protobuf:"bytes,2,opt,name=starting_ava_timestamp,json=startingAvaTimestamp,proto3" json:"starting_ava_timestamp,omitempty"`
	NextTickTime            int64                                      `protobuf:"varint,3,opt,name=next_tick_time,json=nextTickTime,proto3" json:"next_tick_time,omitempty"`
}

func (x *KOTHUpdateEvent) Reset() {
	*x = KOTHUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KOTHUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KOTHUpdateEvent) ProtoMessage() {}

func (x *KOTHUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KOTHUpdateEvent.ProtoReflect.Descriptor instead.
func (*KOTHUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{12}
}

func (x *KOTHUpdateEvent) GetKothAllianceInformation() []*KOTHUpdateEvent_KOTHAllianceInformation {
	if x != nil {
		return x.KothAllianceInformation
	}
	return nil
}

func (x *KOTHUpdateEvent) GetStartingAvaTimestamp() string {
	if x != nil {
		return x.StartingAvaTimestamp
	}
	return ""
}

func (x *KOTHUpdateEvent) GetNextTickTime() int64 {
	if x != nil {
		return x.NextTickTime
	}
	return 0
}

type KOTHEndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Winner *common.AllianceInformation `protobuf:"bytes,1,opt,name=winner,proto3,oneof" json:"winner,omitempty"`
}

func (x *KOTHEndEvent) Reset() {
	*x = KOTHEndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KOTHEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KOTHEndEvent) ProtoMessage() {}

func (x *KOTHEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KOTHEndEvent.ProtoReflect.Descriptor instead.
func (*KOTHEndEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{13}
}

func (x *KOTHEndEvent) GetWinner() *common.AllianceInformation {
	if x != nil {
		return x.Winner
	}
	return nil
}

type NuggetsBeneficiary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId     int64 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	NuggetsQuantity int32 `protobuf:"varint,2,opt,name=nuggets_quantity,json=nuggetsQuantity,proto3" json:"nuggets_quantity,omitempty"`
}

func (x *NuggetsBeneficiary) Reset() {
	*x = NuggetsBeneficiary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NuggetsBeneficiary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NuggetsBeneficiary) ProtoMessage() {}

func (x *NuggetsBeneficiary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NuggetsBeneficiary.ProtoReflect.Descriptor instead.
func (*NuggetsBeneficiary) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{14}
}

func (x *NuggetsBeneficiary) GetCharacterId() int64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *NuggetsBeneficiary) GetNuggetsQuantity() int32 {
	if x != nil {
		return x.NuggetsQuantity
	}
	return 0
}

type NuggetsDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beneficiaries []*NuggetsBeneficiary `protobuf:"bytes,1,rep,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
}

func (x *NuggetsDistributionRequest) Reset() {
	*x = NuggetsDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NuggetsDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NuggetsDistributionRequest) ProtoMessage() {}

func (x *NuggetsDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NuggetsDistributionRequest.ProtoReflect.Descriptor instead.
func (*NuggetsDistributionRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{15}
}

func (x *NuggetsDistributionRequest) GetBeneficiaries() []*NuggetsBeneficiary {
	if x != nil {
		return x.Beneficiaries
	}
	return nil
}

type NuggetsListenStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NuggetsListenStartRequest) Reset() {
	*x = NuggetsListenStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NuggetsListenStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NuggetsListenStartRequest) ProtoMessage() {}

func (x *NuggetsListenStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NuggetsListenStartRequest.ProtoReflect.Descriptor instead.
func (*NuggetsListenStartRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{16}
}

type NuggetsListenStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NuggetsListenStopRequest) Reset() {
	*x = NuggetsListenStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NuggetsListenStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NuggetsListenStopRequest) ProtoMessage() {}

func (x *NuggetsListenStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NuggetsListenStopRequest.ProtoReflect.Descriptor instead.
func (*NuggetsListenStopRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{17}
}

type NuggetsInformationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NuggetsQuantity int32 `protobuf:"varint,1,opt,name=nuggets_quantity,json=nuggetsQuantity,proto3" json:"nuggets_quantity,omitempty"`
}

func (x *NuggetsInformationEvent) Reset() {
	*x = NuggetsInformationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NuggetsInformationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NuggetsInformationEvent) ProtoMessage() {}

func (x *NuggetsInformationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NuggetsInformationEvent.ProtoReflect.Descriptor instead.
func (*NuggetsInformationEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{18}
}

func (x *NuggetsInformationEvent) GetNuggetsQuantity() int32 {
	if x != nil {
		return x.NuggetsQuantity
	}
	return 0
}

type KOTHUpdateEvent_KOTHAllianceInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alliance              *common.AllianceInformation                                       `protobuf:"bytes,1,opt,name=alliance,proto3" json:"alliance,omitempty"`
	MemberCount           int64                                                             `protobuf:"varint,2,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	KothRoles             []*KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber `protobuf:"bytes,3,rep,name=koth_roles,json=kothRoles,proto3" json:"koth_roles,omitempty"`
	Scores                []*KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore              `protobuf:"bytes,4,rep,name=scores,proto3" json:"scores,omitempty"`
	MatchDominationScores int32                                                             `protobuf:"varint,5,opt,name=match_domination_scores,json=matchDominationScores,proto3" json:"match_domination_scores,omitempty"`
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) Reset() {
	*x = KOTHUpdateEvent_KOTHAllianceInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KOTHUpdateEvent_KOTHAllianceInformation) ProtoMessage() {}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KOTHUpdateEvent_KOTHAllianceInformation.ProtoReflect.Descriptor instead.
func (*KOTHUpdateEvent_KOTHAllianceInformation) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{12, 0}
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) GetAlliance() *common.AllianceInformation {
	if x != nil {
		return x.Alliance
	}
	return nil
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) GetKothRoles() []*KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber {
	if x != nil {
		return x.KothRoles
	}
	return nil
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) GetScores() []*KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation) GetMatchDominationScores() int32 {
	if x != nil {
		return x.MatchDominationScores
	}
	return 0
}

type KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberCount int64 `protobuf:"varint,1,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	KothRole    int32 `protobuf:"varint,2,opt,name=koth_role,json=kothRole,proto3" json:"koth_role,omitempty"`
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber) Reset() {
	*x = KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber) ProtoMessage() {}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber.ProtoReflect.Descriptor instead.
func (*KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{12, 0, 0}
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber) GetKothRole() int32 {
	if x != nil {
		return x.KothRole
	}
	return 0
}

type KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreType       KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType `protobuf:"varint,1,opt,name=score_type,json=scoreType,proto3,enum=com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType" json:"score_type,omitempty"`
	RoundScores     int32                                                           `protobuf:"varint,2,opt,name=round_scores,json=roundScores,proto3" json:"round_scores,omitempty"`
	CumulatedScores int32                                                           `protobuf:"varint,3,opt,name=cumulated_scores,json=cumulatedScores,proto3" json:"cumulated_scores,omitempty"`
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) Reset() {
	*x = KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_alliance_conquest_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) ProtoMessage() {}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_alliance_conquest_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore.ProtoReflect.Descriptor instead.
func (*KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) Descriptor() ([]byte, []int) {
	return file_proto_game_alliance_conquest_proto_rawDescGZIP(), []int{12, 0, 1}
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) GetScoreType() KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType {
	if x != nil {
		return x.ScoreType
	}
	return KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_FIGHT
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) GetRoundScores() int32 {
	if x != nil {
		return x.RoundScores
	}
	return 0
}

func (x *KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore) GetCumulatedScores() int32 {
	if x != nil {
		return x.CumulatedScores
	}
	return 0
}

var File_proto_game_alliance_conquest_proto protoreflect.FileDescriptor

var file_proto_game_alliance_conquest_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x61, 0x6c, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x37, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x6c, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x15, 0x41,
	0x56, 0x41, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x21, 0x0a, 0x1f,
	0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x20, 0x0a, 0x1e, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x8d, 0x01, 0x0a, 0x18, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x71,
	0x0a, 0x11, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x10, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc3, 0x01, 0x0a, 0x1b, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x71, 0x0a, 0x11, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x71, 0x0a, 0x11, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x41, 0x6c, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x62, 0x0a, 0x0f, 0x61,
	0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x0e, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22,
	0xe2, 0x01, 0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x71, 0x0a,
	0x11, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x52, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x1a, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x69, 0x67, 0x68, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x71, 0x0a, 0x11, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x1d, 0x41, 0x6c, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x71, 0x0a, 0x11, 0x66, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x67, 0x68, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x22,
	0xae, 0x02, 0x0a, 0x1e, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x71, 0x0a, 0x11, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x07, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x22, 0xb4, 0x01, 0x0a, 0x20, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x71, 0x0a, 0x11, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69,
	0x67, 0x68, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x87, 0x09, 0x0a, 0x0f, 0x4b, 0x4f, 0x54, 0x48,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x9c, 0x01, 0x0a, 0x19,
	0x6b, 0x6f, 0x74, 0x68, 0x5f, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x60, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x41, 0x6c,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x17, 0x6b, 0x6f, 0x74, 0x68, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xf8, 0x06, 0x0a, 0x17, 0x4b, 0x4f, 0x54, 0x48, 0x41,
	0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x96, 0x01, 0x0a, 0x0a, 0x6b, 0x6f, 0x74, 0x68, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x4f, 0x54, 0x48,
	0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x09, 0x6b, 0x6f, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x82, 0x01,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x41, 0x6c, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0x58, 0x0a, 0x16, 0x4b, 0x4f,
	0x54, 0x48, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x6f, 0x74, 0x68, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x6f, 0x74, 0x68,
	0x52, 0x6f, 0x6c, 0x65, 0x1a, 0xaa, 0x02, 0x0a, 0x09, 0x4b, 0x4f, 0x54, 0x48, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4b, 0x4f, 0x54, 0x48, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x75, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x4b, 0x4f,
	0x54, 0x48, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x49, 0x47, 0x48, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x10,
	0x02, 0x22, 0x79, 0x0a, 0x0c, 0x4b, 0x4f, 0x54, 0x48, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x5e, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x12,
	0x4e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x8f, 0x01, 0x0a, 0x1a, 0x4e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x71, 0x0a, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x52, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x1a, 0x0a, 0x18, 0x4e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x17, 0x4e,
	0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x75, 0x67, 0x67, 0x65, 0x74,
	0x73, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x6e, 0x75, 0x67, 0x67, 0x65, 0x74, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x6f, 0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_alliance_conquest_proto_rawDescOnce sync.Once
	file_proto_game_alliance_conquest_proto_rawDescData = file_proto_game_alliance_conquest_proto_rawDesc
)

func file_proto_game_alliance_conquest_proto_rawDescGZIP() []byte {
	file_proto_game_alliance_conquest_proto_rawDescOnce.Do(func() {
		file_proto_game_alliance_conquest_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_alliance_conquest_proto_rawDescData)
	})
	return file_proto_game_alliance_conquest_proto_rawDescData
}

var file_proto_game_alliance_conquest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_game_alliance_conquest_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_proto_game_alliance_conquest_proto_goTypes = []any{
	(KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore_KOTHScoreType)(0),   // 0: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.KOTHScore.KOTHScoreType
	(*AVAStateUpdateRequest)(nil),                                          // 1: com.ankama.dofus.server.game.protocol.alliance.conquest.AVAStateUpdateRequest
	(*AllianceFightListenStartRequest)(nil),                                // 2: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightListenStartRequest
	(*AllianceFightListenStopRequest)(nil),                                 // 3: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightListenStopRequest
	(*AllianceFightJoinRequest)(nil),                                       // 4: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightJoinRequest
	(*AllianceFightReplaceRequest)(nil),                                    // 5: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightReplaceRequest
	(*AllianceFightLeaveRequest)(nil),                                      // 6: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightLeaveRequest
	(*AllianceFightsInformationEvent)(nil),                                 // 7: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightsInformationEvent
	(*AllianceFightStartedEvent)(nil),                                      // 8: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightStartedEvent
	(*AllianceFightFinishedEvent)(nil),                                     // 9: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFinishedEvent
	(*AllianceFightPhaseUpdateEvent)(nil),                                  // 10: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightPhaseUpdateEvent
	(*AllianceFightFighterAddedEvent)(nil),                                 // 11: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFighterAddedEvent
	(*AllianceFightFighterRemovedEvent)(nil),                               // 12: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFighterRemovedEvent
	(*KOTHUpdateEvent)(nil),                                                // 13: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent
	(*KOTHEndEvent)(nil),                                                   // 14: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHEndEvent
	(*NuggetsBeneficiary)(nil),                                             // 15: com.ankama.dofus.server.game.protocol.alliance.conquest.NuggetsBeneficiary
	(*NuggetsDistributionRequest)(nil),                                     // 16: com.ankama.dofus.server.game.protocol.alliance.conquest.NuggetsDistributionRequest
	(*NuggetsListenStartRequest)(nil),                                      // 17: com.ankama.dofus.server.game.protocol.alliance.conquest.NuggetsListenStartRequest
	(*NuggetsListenStopRequest)(nil),                                       // 18: com.ankama.dofus.server.game.protocol.alliance.conquest.NuggetsListenStopRequest
	(*NuggetsInformationEvent)(nil),                                        // 19: com.ankama.dofus.server.game.protocol.alliance.conquest.NuggetsInformationEvent
	(*KOTHUpdateEvent_KOTHAllianceInformation)(nil),                        // 20: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation
	(*KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber)(nil), // 21: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.KOTHAllianceRoleNumber
	(*KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore)(nil),              // 22: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.KOTHScore
	(*common.SocialFightInformation)(nil),                                  // 23: com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	(*common.SocialFight)(nil),                                             // 24: com.ankama.dofus.server.game.protocol.common.SocialFight
	(*common.FightPhaseInfo)(nil),                                          // 25: com.ankama.dofus.server.game.protocol.common.FightPhaseInfo
	(*common.Character)(nil),                                               // 26: com.ankama.dofus.server.game.protocol.common.Character
	(common.Team)(0),                                                       // 27: com.ankama.dofus.server.game.protocol.common.Team
	(*common.AllianceInformation)(nil),                                     // 28: com.ankama.dofus.server.game.protocol.common.AllianceInformation
}
var file_proto_game_alliance_conquest_proto_depIdxs = []int32{
	23, // 0: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightJoinRequest.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	23, // 1: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightReplaceRequest.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	23, // 2: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightLeaveRequest.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	24, // 3: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightsInformationEvent.alliance_fights:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFight
	23, // 4: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightStartedEvent.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	25, // 5: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightStartedEvent.phase:type_name -> com.ankama.dofus.server.game.protocol.common.FightPhaseInfo
	23, // 6: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFinishedEvent.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	23, // 7: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightPhaseUpdateEvent.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	25, // 8: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightPhaseUpdateEvent.phase:type_name -> com.ankama.dofus.server.game.protocol.common.FightPhaseInfo
	23, // 9: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFighterAddedEvent.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	26, // 10: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFighterAddedEvent.fighter:type_name -> com.ankama.dofus.server.game.protocol.common.Character
	27, // 11: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFighterAddedEvent.team:type_name -> com.ankama.dofus.server.game.protocol.common.Team
	23, // 12: com.ankama.dofus.server.game.protocol.alliance.conquest.AllianceFightFighterRemovedEvent.fight_information:type_name -> com.ankama.dofus.server.game.protocol.common.SocialFightInformation
	20, // 13: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.koth_alliance_information:type_name -> com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation
	28, // 14: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHEndEvent.winner:type_name -> com.ankama.dofus.server.game.protocol.common.AllianceInformation
	15, // 15: com.ankama.dofus.server.game.protocol.alliance.conquest.NuggetsDistributionRequest.beneficiaries:type_name -> com.ankama.dofus.server.game.protocol.alliance.conquest.NuggetsBeneficiary
	28, // 16: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.alliance:type_name -> com.ankama.dofus.server.game.protocol.common.AllianceInformation
	21, // 17: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.koth_roles:type_name -> com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.KOTHAllianceRoleNumber
	22, // 18: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.scores:type_name -> com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.KOTHScore
	0,  // 19: com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.KOTHScore.score_type:type_name -> com.ankama.dofus.server.game.protocol.alliance.conquest.KOTHUpdateEvent.KOTHAllianceInformation.KOTHScore.KOTHScoreType
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_game_alliance_conquest_proto_init() }
func file_proto_game_alliance_conquest_proto_init() {
	if File_proto_game_alliance_conquest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_alliance_conquest_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AVAStateUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightListenStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightListenStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightReplaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightsInformationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightFinishedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightPhaseUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightFighterAddedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AllianceFightFighterRemovedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*KOTHUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*KOTHEndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*NuggetsBeneficiary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*NuggetsDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*NuggetsListenStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*NuggetsListenStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*NuggetsInformationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*KOTHUpdateEvent_KOTHAllianceInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*KOTHUpdateEvent_KOTHAllianceInformation_KOTHAllianceRoleNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_alliance_conquest_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*KOTHUpdateEvent_KOTHAllianceInformation_KOTHScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_alliance_conquest_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_alliance_conquest_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_alliance_conquest_proto_goTypes,
		DependencyIndexes: file_proto_game_alliance_conquest_proto_depIdxs,
		EnumInfos:         file_proto_game_alliance_conquest_proto_enumTypes,
		MessageInfos:      file_proto_game_alliance_conquest_proto_msgTypes,
	}.Build()
	File_proto_game_alliance_conquest_proto = out.File
	file_proto_game_alliance_conquest_proto_rawDesc = nil
	file_proto_game_alliance_conquest_proto_goTypes = nil
	file_proto_game_alliance_conquest_proto_depIdxs = nil
}
