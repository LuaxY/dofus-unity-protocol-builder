// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/game/game_action.proto

package game_action

import (
	common "go-xp-dofus-unity-proto-builder/src/protocol/game/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FightSpellCastCritical int32

const (
	FightSpellCastCritical_NORMAL        FightSpellCastCritical = 0
	FightSpellCastCritical_CRITICAL_HIT  FightSpellCastCritical = 1
	FightSpellCastCritical_CRITICAL_FAIL FightSpellCastCritical = 2
)

// Enum value maps for FightSpellCastCritical.
var (
	FightSpellCastCritical_name = map[int32]string{
		0: "NORMAL",
		1: "CRITICAL_HIT",
		2: "CRITICAL_FAIL",
	}
	FightSpellCastCritical_value = map[string]int32{
		"NORMAL":        0,
		"CRITICAL_HIT":  1,
		"CRITICAL_FAIL": 2,
	}
)

func (x FightSpellCastCritical) Enum() *FightSpellCastCritical {
	p := new(FightSpellCastCritical)
	*p = x
	return p
}

func (x FightSpellCastCritical) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FightSpellCastCritical) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_game_action_proto_enumTypes[0].Descriptor()
}

func (FightSpellCastCritical) Type() protoreflect.EnumType {
	return &file_proto_game_game_action_proto_enumTypes[0]
}

func (x FightSpellCastCritical) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FightSpellCastCritical.Descriptor instead.
func (FightSpellCastCritical) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{0}
}

type SequenceType int32

const (
	SequenceType_SPELL           SequenceType = 0
	SequenceType_WEAPON          SequenceType = 1
	SequenceType_GLYPH_TRAP      SequenceType = 2
	SequenceType_TRIGGERED       SequenceType = 3
	SequenceType_MOVE            SequenceType = 4
	SequenceType_CHARACTER_DEATH SequenceType = 5
	SequenceType_TURN_START      SequenceType = 6
	SequenceType_TURN_END        SequenceType = 7
	SequenceType_FIGHT_START     SequenceType = 8
)

// Enum value maps for SequenceType.
var (
	SequenceType_name = map[int32]string{
		0: "SPELL",
		1: "WEAPON",
		2: "GLYPH_TRAP",
		3: "TRIGGERED",
		4: "MOVE",
		5: "CHARACTER_DEATH",
		6: "TURN_START",
		7: "TURN_END",
		8: "FIGHT_START",
	}
	SequenceType_value = map[string]int32{
		"SPELL":           0,
		"WEAPON":          1,
		"GLYPH_TRAP":      2,
		"TRIGGERED":       3,
		"MOVE":            4,
		"CHARACTER_DEATH": 5,
		"TURN_START":      6,
		"TURN_END":        7,
		"FIGHT_START":     8,
	}
)

func (x SequenceType) Enum() *SequenceType {
	p := new(SequenceType)
	*p = x
	return p
}

func (x SequenceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SequenceType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_game_action_proto_enumTypes[1].Descriptor()
}

func (SequenceType) Type() protoreflect.EnumType {
	return &file_proto_game_game_action_proto_enumTypes[1]
}

func (x SequenceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SequenceType.Descriptor instead.
func (SequenceType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{1}
}

type GameActionItemConsumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId int32 `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *GameActionItemConsumeRequest) Reset() {
	*x = GameActionItemConsumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionItemConsumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionItemConsumeRequest) ProtoMessage() {}

func (x *GameActionItemConsumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionItemConsumeRequest.ProtoReflect.Descriptor instead.
func (*GameActionItemConsumeRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{0}
}

func (x *GameActionItemConsumeRequest) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *GameActionItemConsumeRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type GameActionItemConsumeAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *GameActionItemConsumeAllRequest) Reset() {
	*x = GameActionItemConsumeAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionItemConsumeAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionItemConsumeAllRequest) ProtoMessage() {}

func (x *GameActionItemConsumeAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionItemConsumeAllRequest.ProtoReflect.Descriptor instead.
func (*GameActionItemConsumeAllRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{1}
}

func (x *GameActionItemConsumeAllRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type GameActionFightCastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId int32 `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Cell    int32 `protobuf:"varint,2,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *GameActionFightCastRequest) Reset() {
	*x = GameActionFightCastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightCastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightCastRequest) ProtoMessage() {}

func (x *GameActionFightCastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightCastRequest.ProtoReflect.Descriptor instead.
func (*GameActionFightCastRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{2}
}

func (x *GameActionFightCastRequest) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *GameActionFightCastRequest) GetCell() int32 {
	if x != nil {
		return x.Cell
	}
	return 0
}

type GameActionFightCastOnTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId  int32 `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	TargetId int64 `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GameActionFightCastOnTargetRequest) Reset() {
	*x = GameActionFightCastOnTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightCastOnTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightCastOnTargetRequest) ProtoMessage() {}

func (x *GameActionFightCastOnTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightCastOnTargetRequest.ProtoReflect.Descriptor instead.
func (*GameActionFightCastOnTargetRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{3}
}

func (x *GameActionFightCastOnTargetRequest) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *GameActionFightCastOnTargetRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type GameActionAcknowledgementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid    bool  `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	ActionId int32 `protobuf:"varint,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *GameActionAcknowledgementRequest) Reset() {
	*x = GameActionAcknowledgementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionAcknowledgementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionAcknowledgementRequest) ProtoMessage() {}

func (x *GameActionAcknowledgementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionAcknowledgementRequest.ProtoReflect.Descriptor instead.
func (*GameActionAcknowledgementRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{4}
}

func (x *GameActionAcknowledgementRequest) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *GameActionAcknowledgementRequest) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

type GameActionItemListEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*common.GameActionItem `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GameActionItemListEvent) Reset() {
	*x = GameActionItemListEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionItemListEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionItemListEvent) ProtoMessage() {}

func (x *GameActionItemListEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionItemListEvent.ProtoReflect.Descriptor instead.
func (*GameActionItemListEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{5}
}

func (x *GameActionItemListEvent) GetActions() []*common.GameActionItem {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GameActionItemConsumedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success         bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ActionId        int32 `protobuf:"varint,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	AutomaticAction bool  `protobuf:"varint,3,opt,name=automatic_action,json=automaticAction,proto3" json:"automatic_action,omitempty"`
}

func (x *GameActionItemConsumedEvent) Reset() {
	*x = GameActionItemConsumedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionItemConsumedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionItemConsumedEvent) ProtoMessage() {}

func (x *GameActionItemConsumedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionItemConsumedEvent.ProtoReflect.Descriptor instead.
func (*GameActionItemConsumedEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{6}
}

func (x *GameActionItemConsumedEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GameActionItemConsumedEvent) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *GameActionItemConsumedEvent) GetAutomaticAction() bool {
	if x != nil {
		return x.AutomaticAction
	}
	return false
}

type GameActionSpamEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cells []int32 `protobuf:"varint,1,rep,packed,name=cells,proto3" json:"cells,omitempty"`
}

func (x *GameActionSpamEvent) Reset() {
	*x = GameActionSpamEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionSpamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionSpamEvent) ProtoMessage() {}

func (x *GameActionSpamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionSpamEvent.ProtoReflect.Descriptor instead.
func (*GameActionSpamEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{7}
}

func (x *GameActionSpamEvent) GetCells() []int32 {
	if x != nil {
		return x.Cells
	}
	return nil
}

type GameActionFightEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId int32 `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	SourceId int64 `protobuf:"varint,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// Types that are assignable to Action:
	//
	//	*GameActionFightEvent_Slide_
	//	*GameActionFightEvent_DodgePointLoss_
	//	*GameActionFightEvent_ReflectDamages_
	//	*GameActionFightEvent_ReduceDamages_
	//	*GameActionFightEvent_ReflectSpell_
	//	*GameActionFightEvent_RemovableEffect_
	//	*GameActionFightEvent_LifePointsLost_
	//	*GameActionFightEvent_LifePointsGain_
	//	*GameActionFightEvent_SpellImmunity_
	//	*GameActionFightEvent_SpellCoolDownVariation_
	//	*GameActionFightEvent_Vanish_
	//	*GameActionFightEvent_Kill_
	//	*GameActionFightEvent_Death_
	//	*GameActionFightEvent_TargetedAbility_
	//	*GameActionFightEvent_Tackled_
	//	*GameActionFightEvent_PointsVariation_
	//	*GameActionFightEvent_InvisibleDetected_
	//	*GameActionFightEvent_TeleportOnSameMap_
	//	*GameActionFightEvent_ExchangePositions_
	//	*GameActionFightEvent_SpellRemove_
	//	*GameActionFightEvent_ModifyEffectsDuration_
	//	*GameActionFightEvent_StealKama_
	//	*GameActionFightEvent_ChangeLook_
	//	*GameActionFightEvent_Invisibility_
	//	*GameActionFightEvent_Summons_
	//	*GameActionFightEvent_MarkCells_
	//	*GameActionFightEvent_UnmarkCells_
	//	*GameActionFightEvent_TriggerGlyphTrap_
	//	*GameActionFightEvent_ActivateGlyphTrap_
	//	*GameActionFightEvent_CarryCharacter_
	//	*GameActionFightEvent_ThrowCharacter_
	//	*GameActionFightEvent_DropCharacter_
	//	*GameActionFightEvent_ExecuteScript_
	Action isGameActionFightEvent_Action `protobuf_oneof:"action"`
}

func (x *GameActionFightEvent) Reset() {
	*x = GameActionFightEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent) ProtoMessage() {}

func (x *GameActionFightEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8}
}

func (x *GameActionFightEvent) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *GameActionFightEvent) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (m *GameActionFightEvent) GetAction() isGameActionFightEvent_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *GameActionFightEvent) GetSlide() *GameActionFightEvent_Slide {
	if x, ok := x.GetAction().(*GameActionFightEvent_Slide_); ok {
		return x.Slide
	}
	return nil
}

func (x *GameActionFightEvent) GetDodgePointLoss() *GameActionFightEvent_DodgePointLoss {
	if x, ok := x.GetAction().(*GameActionFightEvent_DodgePointLoss_); ok {
		return x.DodgePointLoss
	}
	return nil
}

func (x *GameActionFightEvent) GetReflectDamages() *GameActionFightEvent_ReflectDamages {
	if x, ok := x.GetAction().(*GameActionFightEvent_ReflectDamages_); ok {
		return x.ReflectDamages
	}
	return nil
}

func (x *GameActionFightEvent) GetReduceDamages() *GameActionFightEvent_ReduceDamages {
	if x, ok := x.GetAction().(*GameActionFightEvent_ReduceDamages_); ok {
		return x.ReduceDamages
	}
	return nil
}

func (x *GameActionFightEvent) GetReflectSpell() *GameActionFightEvent_ReflectSpell {
	if x, ok := x.GetAction().(*GameActionFightEvent_ReflectSpell_); ok {
		return x.ReflectSpell
	}
	return nil
}

func (x *GameActionFightEvent) GetRemovableEffect() *GameActionFightEvent_RemovableEffect {
	if x, ok := x.GetAction().(*GameActionFightEvent_RemovableEffect_); ok {
		return x.RemovableEffect
	}
	return nil
}

func (x *GameActionFightEvent) GetLifePointsLost() *GameActionFightEvent_LifePointsLost {
	if x, ok := x.GetAction().(*GameActionFightEvent_LifePointsLost_); ok {
		return x.LifePointsLost
	}
	return nil
}

func (x *GameActionFightEvent) GetLifePointsGain() *GameActionFightEvent_LifePointsGain {
	if x, ok := x.GetAction().(*GameActionFightEvent_LifePointsGain_); ok {
		return x.LifePointsGain
	}
	return nil
}

func (x *GameActionFightEvent) GetSpellImmunity() *GameActionFightEvent_SpellImmunity {
	if x, ok := x.GetAction().(*GameActionFightEvent_SpellImmunity_); ok {
		return x.SpellImmunity
	}
	return nil
}

func (x *GameActionFightEvent) GetSpellCoolDownVariation() *GameActionFightEvent_SpellCoolDownVariation {
	if x, ok := x.GetAction().(*GameActionFightEvent_SpellCoolDownVariation_); ok {
		return x.SpellCoolDownVariation
	}
	return nil
}

func (x *GameActionFightEvent) GetVanish() *GameActionFightEvent_Vanish {
	if x, ok := x.GetAction().(*GameActionFightEvent_Vanish_); ok {
		return x.Vanish
	}
	return nil
}

func (x *GameActionFightEvent) GetKill() *GameActionFightEvent_Kill {
	if x, ok := x.GetAction().(*GameActionFightEvent_Kill_); ok {
		return x.Kill
	}
	return nil
}

func (x *GameActionFightEvent) GetDeath() *GameActionFightEvent_Death {
	if x, ok := x.GetAction().(*GameActionFightEvent_Death_); ok {
		return x.Death
	}
	return nil
}

func (x *GameActionFightEvent) GetTargetedAbility() *GameActionFightEvent_TargetedAbility {
	if x, ok := x.GetAction().(*GameActionFightEvent_TargetedAbility_); ok {
		return x.TargetedAbility
	}
	return nil
}

func (x *GameActionFightEvent) GetTackled() *GameActionFightEvent_Tackled {
	if x, ok := x.GetAction().(*GameActionFightEvent_Tackled_); ok {
		return x.Tackled
	}
	return nil
}

func (x *GameActionFightEvent) GetPointsVariation() *GameActionFightEvent_PointsVariation {
	if x, ok := x.GetAction().(*GameActionFightEvent_PointsVariation_); ok {
		return x.PointsVariation
	}
	return nil
}

func (x *GameActionFightEvent) GetInvisibleDetected() *GameActionFightEvent_InvisibleDetected {
	if x, ok := x.GetAction().(*GameActionFightEvent_InvisibleDetected_); ok {
		return x.InvisibleDetected
	}
	return nil
}

func (x *GameActionFightEvent) GetTeleportOnSameMap() *GameActionFightEvent_TeleportOnSameMap {
	if x, ok := x.GetAction().(*GameActionFightEvent_TeleportOnSameMap_); ok {
		return x.TeleportOnSameMap
	}
	return nil
}

func (x *GameActionFightEvent) GetExchangePositions() *GameActionFightEvent_ExchangePositions {
	if x, ok := x.GetAction().(*GameActionFightEvent_ExchangePositions_); ok {
		return x.ExchangePositions
	}
	return nil
}

func (x *GameActionFightEvent) GetSpellRemove() *GameActionFightEvent_SpellRemove {
	if x, ok := x.GetAction().(*GameActionFightEvent_SpellRemove_); ok {
		return x.SpellRemove
	}
	return nil
}

func (x *GameActionFightEvent) GetModifyEffectsDuration() *GameActionFightEvent_ModifyEffectsDuration {
	if x, ok := x.GetAction().(*GameActionFightEvent_ModifyEffectsDuration_); ok {
		return x.ModifyEffectsDuration
	}
	return nil
}

func (x *GameActionFightEvent) GetStealKama() *GameActionFightEvent_StealKama {
	if x, ok := x.GetAction().(*GameActionFightEvent_StealKama_); ok {
		return x.StealKama
	}
	return nil
}

func (x *GameActionFightEvent) GetChangeLook() *GameActionFightEvent_ChangeLook {
	if x, ok := x.GetAction().(*GameActionFightEvent_ChangeLook_); ok {
		return x.ChangeLook
	}
	return nil
}

func (x *GameActionFightEvent) GetInvisibility() *GameActionFightEvent_Invisibility {
	if x, ok := x.GetAction().(*GameActionFightEvent_Invisibility_); ok {
		return x.Invisibility
	}
	return nil
}

func (x *GameActionFightEvent) GetSummons() *GameActionFightEvent_Summons {
	if x, ok := x.GetAction().(*GameActionFightEvent_Summons_); ok {
		return x.Summons
	}
	return nil
}

func (x *GameActionFightEvent) GetMarkCells() *GameActionFightEvent_MarkCells {
	if x, ok := x.GetAction().(*GameActionFightEvent_MarkCells_); ok {
		return x.MarkCells
	}
	return nil
}

func (x *GameActionFightEvent) GetUnmarkCells() *GameActionFightEvent_UnmarkCells {
	if x, ok := x.GetAction().(*GameActionFightEvent_UnmarkCells_); ok {
		return x.UnmarkCells
	}
	return nil
}

func (x *GameActionFightEvent) GetTriggerGlyphTrap() *GameActionFightEvent_TriggerGlyphTrap {
	if x, ok := x.GetAction().(*GameActionFightEvent_TriggerGlyphTrap_); ok {
		return x.TriggerGlyphTrap
	}
	return nil
}

func (x *GameActionFightEvent) GetActivateGlyphTrap() *GameActionFightEvent_ActivateGlyphTrap {
	if x, ok := x.GetAction().(*GameActionFightEvent_ActivateGlyphTrap_); ok {
		return x.ActivateGlyphTrap
	}
	return nil
}

func (x *GameActionFightEvent) GetCarryCharacter() *GameActionFightEvent_CarryCharacter {
	if x, ok := x.GetAction().(*GameActionFightEvent_CarryCharacter_); ok {
		return x.CarryCharacter
	}
	return nil
}

func (x *GameActionFightEvent) GetThrowCharacter() *GameActionFightEvent_ThrowCharacter {
	if x, ok := x.GetAction().(*GameActionFightEvent_ThrowCharacter_); ok {
		return x.ThrowCharacter
	}
	return nil
}

func (x *GameActionFightEvent) GetDropCharacter() *GameActionFightEvent_DropCharacter {
	if x, ok := x.GetAction().(*GameActionFightEvent_DropCharacter_); ok {
		return x.DropCharacter
	}
	return nil
}

func (x *GameActionFightEvent) GetExecuteScript() *GameActionFightEvent_ExecuteScript {
	if x, ok := x.GetAction().(*GameActionFightEvent_ExecuteScript_); ok {
		return x.ExecuteScript
	}
	return nil
}

type isGameActionFightEvent_Action interface {
	isGameActionFightEvent_Action()
}

type GameActionFightEvent_Slide_ struct {
	Slide *GameActionFightEvent_Slide `protobuf:"bytes,3,opt,name=slide,proto3,oneof"`
}

type GameActionFightEvent_DodgePointLoss_ struct {
	DodgePointLoss *GameActionFightEvent_DodgePointLoss `protobuf:"bytes,4,opt,name=dodge_point_loss,json=dodgePointLoss,proto3,oneof"`
}

type GameActionFightEvent_ReflectDamages_ struct {
	ReflectDamages *GameActionFightEvent_ReflectDamages `protobuf:"bytes,5,opt,name=reflect_damages,json=reflectDamages,proto3,oneof"`
}

type GameActionFightEvent_ReduceDamages_ struct {
	ReduceDamages *GameActionFightEvent_ReduceDamages `protobuf:"bytes,6,opt,name=reduce_damages,json=reduceDamages,proto3,oneof"`
}

type GameActionFightEvent_ReflectSpell_ struct {
	ReflectSpell *GameActionFightEvent_ReflectSpell `protobuf:"bytes,7,opt,name=reflect_spell,json=reflectSpell,proto3,oneof"`
}

type GameActionFightEvent_RemovableEffect_ struct {
	RemovableEffect *GameActionFightEvent_RemovableEffect `protobuf:"bytes,8,opt,name=removable_effect,json=removableEffect,proto3,oneof"`
}

type GameActionFightEvent_LifePointsLost_ struct {
	LifePointsLost *GameActionFightEvent_LifePointsLost `protobuf:"bytes,9,opt,name=life_points_lost,json=lifePointsLost,proto3,oneof"`
}

type GameActionFightEvent_LifePointsGain_ struct {
	LifePointsGain *GameActionFightEvent_LifePointsGain `protobuf:"bytes,10,opt,name=life_points_gain,json=lifePointsGain,proto3,oneof"`
}

type GameActionFightEvent_SpellImmunity_ struct {
	SpellImmunity *GameActionFightEvent_SpellImmunity `protobuf:"bytes,11,opt,name=spell_immunity,json=spellImmunity,proto3,oneof"`
}

type GameActionFightEvent_SpellCoolDownVariation_ struct {
	SpellCoolDownVariation *GameActionFightEvent_SpellCoolDownVariation `protobuf:"bytes,12,opt,name=spell_cool_down_variation,json=spellCoolDownVariation,proto3,oneof"`
}

type GameActionFightEvent_Vanish_ struct {
	Vanish *GameActionFightEvent_Vanish `protobuf:"bytes,13,opt,name=vanish,proto3,oneof"`
}

type GameActionFightEvent_Kill_ struct {
	Kill *GameActionFightEvent_Kill `protobuf:"bytes,14,opt,name=kill,proto3,oneof"`
}

type GameActionFightEvent_Death_ struct {
	Death *GameActionFightEvent_Death `protobuf:"bytes,15,opt,name=death,proto3,oneof"`
}

type GameActionFightEvent_TargetedAbility_ struct {
	TargetedAbility *GameActionFightEvent_TargetedAbility `protobuf:"bytes,16,opt,name=targeted_ability,json=targetedAbility,proto3,oneof"`
}

type GameActionFightEvent_Tackled_ struct {
	Tackled *GameActionFightEvent_Tackled `protobuf:"bytes,17,opt,name=tackled,proto3,oneof"`
}

type GameActionFightEvent_PointsVariation_ struct {
	PointsVariation *GameActionFightEvent_PointsVariation `protobuf:"bytes,18,opt,name=points_variation,json=pointsVariation,proto3,oneof"`
}

type GameActionFightEvent_InvisibleDetected_ struct {
	InvisibleDetected *GameActionFightEvent_InvisibleDetected `protobuf:"bytes,19,opt,name=invisible_detected,json=invisibleDetected,proto3,oneof"`
}

type GameActionFightEvent_TeleportOnSameMap_ struct {
	TeleportOnSameMap *GameActionFightEvent_TeleportOnSameMap `protobuf:"bytes,20,opt,name=teleport_on_same_map,json=teleportOnSameMap,proto3,oneof"`
}

type GameActionFightEvent_ExchangePositions_ struct {
	ExchangePositions *GameActionFightEvent_ExchangePositions `protobuf:"bytes,21,opt,name=exchange_positions,json=exchangePositions,proto3,oneof"`
}

type GameActionFightEvent_SpellRemove_ struct {
	SpellRemove *GameActionFightEvent_SpellRemove `protobuf:"bytes,22,opt,name=spell_remove,json=spellRemove,proto3,oneof"`
}

type GameActionFightEvent_ModifyEffectsDuration_ struct {
	ModifyEffectsDuration *GameActionFightEvent_ModifyEffectsDuration `protobuf:"bytes,23,opt,name=modify_effects_duration,json=modifyEffectsDuration,proto3,oneof"`
}

type GameActionFightEvent_StealKama_ struct {
	StealKama *GameActionFightEvent_StealKama `protobuf:"bytes,24,opt,name=steal_kama,json=stealKama,proto3,oneof"`
}

type GameActionFightEvent_ChangeLook_ struct {
	ChangeLook *GameActionFightEvent_ChangeLook `protobuf:"bytes,25,opt,name=change_look,json=changeLook,proto3,oneof"`
}

type GameActionFightEvent_Invisibility_ struct {
	Invisibility *GameActionFightEvent_Invisibility `protobuf:"bytes,26,opt,name=invisibility,proto3,oneof"`
}

type GameActionFightEvent_Summons_ struct {
	Summons *GameActionFightEvent_Summons `protobuf:"bytes,27,opt,name=summons,proto3,oneof"`
}

type GameActionFightEvent_MarkCells_ struct {
	MarkCells *GameActionFightEvent_MarkCells `protobuf:"bytes,28,opt,name=mark_cells,json=markCells,proto3,oneof"`
}

type GameActionFightEvent_UnmarkCells_ struct {
	UnmarkCells *GameActionFightEvent_UnmarkCells `protobuf:"bytes,29,opt,name=unmark_cells,json=unmarkCells,proto3,oneof"`
}

type GameActionFightEvent_TriggerGlyphTrap_ struct {
	TriggerGlyphTrap *GameActionFightEvent_TriggerGlyphTrap `protobuf:"bytes,30,opt,name=trigger_glyph_trap,json=triggerGlyphTrap,proto3,oneof"`
}

type GameActionFightEvent_ActivateGlyphTrap_ struct {
	ActivateGlyphTrap *GameActionFightEvent_ActivateGlyphTrap `protobuf:"bytes,31,opt,name=activate_glyph_trap,json=activateGlyphTrap,proto3,oneof"`
}

type GameActionFightEvent_CarryCharacter_ struct {
	CarryCharacter *GameActionFightEvent_CarryCharacter `protobuf:"bytes,32,opt,name=carry_character,json=carryCharacter,proto3,oneof"`
}

type GameActionFightEvent_ThrowCharacter_ struct {
	ThrowCharacter *GameActionFightEvent_ThrowCharacter `protobuf:"bytes,33,opt,name=throw_character,json=throwCharacter,proto3,oneof"`
}

type GameActionFightEvent_DropCharacter_ struct {
	DropCharacter *GameActionFightEvent_DropCharacter `protobuf:"bytes,34,opt,name=drop_character,json=dropCharacter,proto3,oneof"`
}

type GameActionFightEvent_ExecuteScript_ struct {
	ExecuteScript *GameActionFightEvent_ExecuteScript `protobuf:"bytes,35,opt,name=execute_script,json=executeScript,proto3,oneof"`
}

func (*GameActionFightEvent_Slide_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_DodgePointLoss_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ReflectDamages_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ReduceDamages_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ReflectSpell_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_RemovableEffect_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_LifePointsLost_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_LifePointsGain_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_SpellImmunity_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_SpellCoolDownVariation_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_Vanish_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_Kill_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_Death_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_TargetedAbility_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_Tackled_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_PointsVariation_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_InvisibleDetected_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_TeleportOnSameMap_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ExchangePositions_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_SpellRemove_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ModifyEffectsDuration_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_StealKama_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ChangeLook_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_Invisibility_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_Summons_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_MarkCells_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_UnmarkCells_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_TriggerGlyphTrap_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ActivateGlyphTrap_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_CarryCharacter_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ThrowCharacter_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_DropCharacter_) isGameActionFightEvent_Action() {}

func (*GameActionFightEvent_ExecuteScript_) isGameActionFightEvent_Action() {}

type GameActionUpdateEffectTriggerCountEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectsCountOnTarget []*GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount `protobuf:"bytes,1,rep,name=effects_count_on_target,json=effectsCountOnTarget,proto3" json:"effects_count_on_target,omitempty"`
}

func (x *GameActionUpdateEffectTriggerCountEvent) Reset() {
	*x = GameActionUpdateEffectTriggerCountEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionUpdateEffectTriggerCountEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionUpdateEffectTriggerCountEvent) ProtoMessage() {}

func (x *GameActionUpdateEffectTriggerCountEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionUpdateEffectTriggerCountEvent.ProtoReflect.Descriptor instead.
func (*GameActionUpdateEffectTriggerCountEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{9}
}

func (x *GameActionUpdateEffectTriggerCountEvent) GetEffectsCountOnTarget() []*GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount {
	if x != nil {
		return x.EffectsCountOnTarget
	}
	return nil
}

type SequenceStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceType SequenceType `protobuf:"varint,1,opt,name=sequence_type,json=sequenceType,proto3,enum=com.ankama.dofus.server.game.protocol.game.action.SequenceType" json:"sequence_type,omitempty"`
	AuthorId     int64        `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *SequenceStartEvent) Reset() {
	*x = SequenceStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequenceStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceStartEvent) ProtoMessage() {}

func (x *SequenceStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceStartEvent.ProtoReflect.Descriptor instead.
func (*SequenceStartEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{10}
}

func (x *SequenceStartEvent) GetSequenceType() SequenceType {
	if x != nil {
		return x.SequenceType
	}
	return SequenceType_SPELL
}

func (x *SequenceStartEvent) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type SequenceEndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId     int32        `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	AuthorId     int64        `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	SequenceType SequenceType `protobuf:"varint,3,opt,name=sequence_type,json=sequenceType,proto3,enum=com.ankama.dofus.server.game.protocol.game.action.SequenceType" json:"sequence_type,omitempty"`
}

func (x *SequenceEndEvent) Reset() {
	*x = SequenceEndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequenceEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceEndEvent) ProtoMessage() {}

func (x *SequenceEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceEndEvent.ProtoReflect.Descriptor instead.
func (*SequenceEndEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{11}
}

func (x *SequenceEndEvent) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *SequenceEndEvent) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *SequenceEndEvent) GetSequenceType() SequenceType {
	if x != nil {
		return x.SequenceType
	}
	return SequenceType_SPELL
}

type EntitySpawnInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SpawnInformation:
	//
	//	*EntitySpawnInformation_Monster_
	//	*EntitySpawnInformation_Character_
	//	*EntitySpawnInformation_Companion_
	SpawnInformation isEntitySpawnInformation_SpawnInformation `protobuf_oneof:"spawn_information"`
}

func (x *EntitySpawnInformation) Reset() {
	*x = EntitySpawnInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySpawnInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySpawnInformation) ProtoMessage() {}

func (x *EntitySpawnInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySpawnInformation.ProtoReflect.Descriptor instead.
func (*EntitySpawnInformation) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{12}
}

func (m *EntitySpawnInformation) GetSpawnInformation() isEntitySpawnInformation_SpawnInformation {
	if m != nil {
		return m.SpawnInformation
	}
	return nil
}

func (x *EntitySpawnInformation) GetMonster() *EntitySpawnInformation_Monster {
	if x, ok := x.GetSpawnInformation().(*EntitySpawnInformation_Monster_); ok {
		return x.Monster
	}
	return nil
}

func (x *EntitySpawnInformation) GetCharacter() *EntitySpawnInformation_Character {
	if x, ok := x.GetSpawnInformation().(*EntitySpawnInformation_Character_); ok {
		return x.Character
	}
	return nil
}

func (x *EntitySpawnInformation) GetCompanion() *EntitySpawnInformation_Companion {
	if x, ok := x.GetSpawnInformation().(*EntitySpawnInformation_Companion_); ok {
		return x.Companion
	}
	return nil
}

type isEntitySpawnInformation_SpawnInformation interface {
	isEntitySpawnInformation_SpawnInformation()
}

type EntitySpawnInformation_Monster_ struct {
	Monster *EntitySpawnInformation_Monster `protobuf:"bytes,1,opt,name=monster,proto3,oneof"`
}

type EntitySpawnInformation_Character_ struct {
	Character *EntitySpawnInformation_Character `protobuf:"bytes,2,opt,name=character,proto3,oneof"`
}

type EntitySpawnInformation_Companion_ struct {
	Companion *EntitySpawnInformation_Companion `protobuf:"bytes,3,opt,name=companion,proto3,oneof"`
}

func (*EntitySpawnInformation_Monster_) isEntitySpawnInformation_SpawnInformation() {}

func (*EntitySpawnInformation_Character_) isEntitySpawnInformation_SpawnInformation() {}

func (*EntitySpawnInformation_Companion_) isEntitySpawnInformation_SpawnInformation() {}

type GameActionFightEvent_CarryCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Cell     int32 `protobuf:"varint,4,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *GameActionFightEvent_CarryCharacter) Reset() {
	*x = GameActionFightEvent_CarryCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_CarryCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_CarryCharacter) ProtoMessage() {}

func (x *GameActionFightEvent_CarryCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_CarryCharacter.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_CarryCharacter) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GameActionFightEvent_CarryCharacter) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_CarryCharacter) GetCell() int32 {
	if x != nil {
		return x.Cell
	}
	return 0
}

type GameActionFightEvent_ThrowCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Cell     int32 `protobuf:"varint,4,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *GameActionFightEvent_ThrowCharacter) Reset() {
	*x = GameActionFightEvent_ThrowCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ThrowCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ThrowCharacter) ProtoMessage() {}

func (x *GameActionFightEvent_ThrowCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ThrowCharacter.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ThrowCharacter) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 1}
}

func (x *GameActionFightEvent_ThrowCharacter) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_ThrowCharacter) GetCell() int32 {
	if x != nil {
		return x.Cell
	}
	return 0
}

type GameActionFightEvent_DropCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Cell     int32 `protobuf:"varint,4,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *GameActionFightEvent_DropCharacter) Reset() {
	*x = GameActionFightEvent_DropCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_DropCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_DropCharacter) ProtoMessage() {}

func (x *GameActionFightEvent_DropCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_DropCharacter.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_DropCharacter) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 2}
}

func (x *GameActionFightEvent_DropCharacter) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_DropCharacter) GetCell() int32 {
	if x != nil {
		return x.Cell
	}
	return 0
}

type GameActionFightEvent_ExecuteScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptUsageId int32 `protobuf:"varint,1,opt,name=script_usage_id,json=scriptUsageId,proto3" json:"script_usage_id,omitempty"`
	Critical      bool  `protobuf:"varint,2,opt,name=critical,proto3" json:"critical,omitempty"`
	SpellId       int32 `protobuf:"varint,3,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	SpellRank     int32 `protobuf:"varint,4,opt,name=spell_rank,json=spellRank,proto3" json:"spell_rank,omitempty"`
	Cell          int32 `protobuf:"varint,5,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *GameActionFightEvent_ExecuteScript) Reset() {
	*x = GameActionFightEvent_ExecuteScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ExecuteScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ExecuteScript) ProtoMessage() {}

func (x *GameActionFightEvent_ExecuteScript) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ExecuteScript.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ExecuteScript) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 3}
}

func (x *GameActionFightEvent_ExecuteScript) GetScriptUsageId() int32 {
	if x != nil {
		return x.ScriptUsageId
	}
	return 0
}

func (x *GameActionFightEvent_ExecuteScript) GetCritical() bool {
	if x != nil {
		return x.Critical
	}
	return false
}

func (x *GameActionFightEvent_ExecuteScript) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *GameActionFightEvent_ExecuteScript) GetSpellRank() int32 {
	if x != nil {
		return x.SpellRank
	}
	return 0
}

func (x *GameActionFightEvent_ExecuteScript) GetCell() int32 {
	if x != nil {
		return x.Cell
	}
	return 0
}

type GameActionFightEvent_UnmarkCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId int32 `protobuf:"varint,1,opt,name=mark_id,json=markId,proto3" json:"mark_id,omitempty"`
}

func (x *GameActionFightEvent_UnmarkCells) Reset() {
	*x = GameActionFightEvent_UnmarkCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_UnmarkCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_UnmarkCells) ProtoMessage() {}

func (x *GameActionFightEvent_UnmarkCells) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_UnmarkCells.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_UnmarkCells) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 4}
}

func (x *GameActionFightEvent_UnmarkCells) GetMarkId() int32 {
	if x != nil {
		return x.MarkId
	}
	return 0
}

type GameActionFightEvent_TriggerGlyphTrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId                int32 `protobuf:"varint,1,opt,name=mark_id,json=markId,proto3" json:"mark_id,omitempty"`
	MarkImpactCell        int32 `protobuf:"varint,2,opt,name=mark_impact_cell,json=markImpactCell,proto3" json:"mark_impact_cell,omitempty"`
	TriggeringCharacterId int64 `protobuf:"varint,3,opt,name=triggering_character_id,json=triggeringCharacterId,proto3" json:"triggering_character_id,omitempty"`
}

func (x *GameActionFightEvent_TriggerGlyphTrap) Reset() {
	*x = GameActionFightEvent_TriggerGlyphTrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_TriggerGlyphTrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_TriggerGlyphTrap) ProtoMessage() {}

func (x *GameActionFightEvent_TriggerGlyphTrap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_TriggerGlyphTrap.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_TriggerGlyphTrap) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 5}
}

func (x *GameActionFightEvent_TriggerGlyphTrap) GetMarkId() int32 {
	if x != nil {
		return x.MarkId
	}
	return 0
}

func (x *GameActionFightEvent_TriggerGlyphTrap) GetMarkImpactCell() int32 {
	if x != nil {
		return x.MarkImpactCell
	}
	return 0
}

func (x *GameActionFightEvent_TriggerGlyphTrap) GetTriggeringCharacterId() int64 {
	if x != nil {
		return x.TriggeringCharacterId
	}
	return 0
}

type GameActionFightEvent_ActivateGlyphTrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId int32 `protobuf:"varint,1,opt,name=mark_id,json=markId,proto3" json:"mark_id,omitempty"`
	Active bool  `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *GameActionFightEvent_ActivateGlyphTrap) Reset() {
	*x = GameActionFightEvent_ActivateGlyphTrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ActivateGlyphTrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ActivateGlyphTrap) ProtoMessage() {}

func (x *GameActionFightEvent_ActivateGlyphTrap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ActivateGlyphTrap.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ActivateGlyphTrap) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 6}
}

func (x *GameActionFightEvent_ActivateGlyphTrap) GetMarkId() int32 {
	if x != nil {
		return x.MarkId
	}
	return 0
}

func (x *GameActionFightEvent_ActivateGlyphTrap) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type GameActionFightEvent_Invisibility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId          int64                         `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	InvisibilityState common.FightInvisibilityState `protobuf:"varint,2,opt,name=invisibility_state,json=invisibilityState,proto3,enum=com.ankama.dofus.server.game.protocol.common.FightInvisibilityState" json:"invisibility_state,omitempty"`
}

func (x *GameActionFightEvent_Invisibility) Reset() {
	*x = GameActionFightEvent_Invisibility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Invisibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Invisibility) ProtoMessage() {}

func (x *GameActionFightEvent_Invisibility) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Invisibility.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Invisibility) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 7}
}

func (x *GameActionFightEvent_Invisibility) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_Invisibility) GetInvisibilityState() common.FightInvisibilityState {
	if x != nil {
		return x.InvisibilityState
	}
	return common.FightInvisibilityState(0)
}

type GameActionFightEvent_Summons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Summons:
	//
	//	*GameActionFightEvent_Summons_SummonsByActor_
	//	*GameActionFightEvent_Summons_SummonsByContextInformation_
	Summons isGameActionFightEvent_Summons_Summons `protobuf_oneof:"summons"`
}

func (x *GameActionFightEvent_Summons) Reset() {
	*x = GameActionFightEvent_Summons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Summons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Summons) ProtoMessage() {}

func (x *GameActionFightEvent_Summons) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Summons.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Summons) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 8}
}

func (m *GameActionFightEvent_Summons) GetSummons() isGameActionFightEvent_Summons_Summons {
	if m != nil {
		return m.Summons
	}
	return nil
}

func (x *GameActionFightEvent_Summons) GetSummonsByActor() *GameActionFightEvent_Summons_SummonsByActor {
	if x, ok := x.GetSummons().(*GameActionFightEvent_Summons_SummonsByActor_); ok {
		return x.SummonsByActor
	}
	return nil
}

func (x *GameActionFightEvent_Summons) GetSummonsByContextInformation() *GameActionFightEvent_Summons_SummonsByContextInformation {
	if x, ok := x.GetSummons().(*GameActionFightEvent_Summons_SummonsByContextInformation_); ok {
		return x.SummonsByContextInformation
	}
	return nil
}

type isGameActionFightEvent_Summons_Summons interface {
	isGameActionFightEvent_Summons_Summons()
}

type GameActionFightEvent_Summons_SummonsByActor_ struct {
	SummonsByActor *GameActionFightEvent_Summons_SummonsByActor `protobuf:"bytes,1,opt,name=summons_by_actor,json=summonsByActor,proto3,oneof"`
}

type GameActionFightEvent_Summons_SummonsByContextInformation_ struct {
	SummonsByContextInformation *GameActionFightEvent_Summons_SummonsByContextInformation `protobuf:"bytes,2,opt,name=summons_by_context_information,json=summonsByContextInformation,proto3,oneof"`
}

func (*GameActionFightEvent_Summons_SummonsByActor_) isGameActionFightEvent_Summons_Summons() {}

func (*GameActionFightEvent_Summons_SummonsByContextInformation_) isGameActionFightEvent_Summons_Summons() {
}

type GameActionFightEvent_MarkCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mark *common.FightMark `protobuf:"bytes,1,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *GameActionFightEvent_MarkCells) Reset() {
	*x = GameActionFightEvent_MarkCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_MarkCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_MarkCells) ProtoMessage() {}

func (x *GameActionFightEvent_MarkCells) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_MarkCells.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_MarkCells) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 9}
}

func (x *GameActionFightEvent_MarkCells) GetMark() *common.FightMark {
	if x != nil {
		return x.Mark
	}
	return nil
}

type GameActionFightEvent_ModifyEffectsDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Delta    int32 `protobuf:"varint,4,opt,name=delta,proto3" json:"delta,omitempty"`
}

func (x *GameActionFightEvent_ModifyEffectsDuration) Reset() {
	*x = GameActionFightEvent_ModifyEffectsDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ModifyEffectsDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ModifyEffectsDuration) ProtoMessage() {}

func (x *GameActionFightEvent_ModifyEffectsDuration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ModifyEffectsDuration.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ModifyEffectsDuration) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 10}
}

func (x *GameActionFightEvent_ModifyEffectsDuration) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_ModifyEffectsDuration) GetDelta() int32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

type GameActionFightEvent_StealKama struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Amount   int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GameActionFightEvent_StealKama) Reset() {
	*x = GameActionFightEvent_StealKama{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_StealKama) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_StealKama) ProtoMessage() {}

func (x *GameActionFightEvent_StealKama) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_StealKama.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_StealKama) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 11}
}

func (x *GameActionFightEvent_StealKama) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_StealKama) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GameActionFightEvent_ChangeLook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64              `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Look     *common.EntityLook `protobuf:"bytes,4,opt,name=look,proto3" json:"look,omitempty"`
}

func (x *GameActionFightEvent_ChangeLook) Reset() {
	*x = GameActionFightEvent_ChangeLook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ChangeLook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ChangeLook) ProtoMessage() {}

func (x *GameActionFightEvent_ChangeLook) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ChangeLook.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ChangeLook) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 12}
}

func (x *GameActionFightEvent_ChangeLook) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_ChangeLook) GetLook() *common.EntityLook {
	if x != nil {
		return x.Look
	}
	return nil
}

type GameActionFightEvent_TeleportOnSameMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Cell     int32 `protobuf:"varint,2,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *GameActionFightEvent_TeleportOnSameMap) Reset() {
	*x = GameActionFightEvent_TeleportOnSameMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_TeleportOnSameMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_TeleportOnSameMap) ProtoMessage() {}

func (x *GameActionFightEvent_TeleportOnSameMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_TeleportOnSameMap.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_TeleportOnSameMap) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 13}
}

func (x *GameActionFightEvent_TeleportOnSameMap) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_TeleportOnSameMap) GetCell() int32 {
	if x != nil {
		return x.Cell
	}
	return 0
}

type GameActionFightEvent_ExchangePositions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	CasterCellId int32 `protobuf:"varint,2,opt,name=caster_cell_id,json=casterCellId,proto3" json:"caster_cell_id,omitempty"`
	TargetCellId int32 `protobuf:"varint,3,opt,name=target_cell_id,json=targetCellId,proto3" json:"target_cell_id,omitempty"`
}

func (x *GameActionFightEvent_ExchangePositions) Reset() {
	*x = GameActionFightEvent_ExchangePositions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ExchangePositions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ExchangePositions) ProtoMessage() {}

func (x *GameActionFightEvent_ExchangePositions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ExchangePositions.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ExchangePositions) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 14}
}

func (x *GameActionFightEvent_ExchangePositions) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_ExchangePositions) GetCasterCellId() int32 {
	if x != nil {
		return x.CasterCellId
	}
	return 0
}

func (x *GameActionFightEvent_ExchangePositions) GetTargetCellId() int32 {
	if x != nil {
		return x.TargetCellId
	}
	return 0
}

type GameActionFightEvent_SpellRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId    int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	VerboseCast bool  `protobuf:"varint,2,opt,name=verbose_cast,json=verboseCast,proto3" json:"verbose_cast,omitempty"`
	// Types that are assignable to Complement:
	//
	//	*GameActionFightEvent_SpellRemove_EffectRemove_
	//	*GameActionFightEvent_SpellRemove_SpellId
	Complement isGameActionFightEvent_SpellRemove_Complement `protobuf_oneof:"complement"`
}

func (x *GameActionFightEvent_SpellRemove) Reset() {
	*x = GameActionFightEvent_SpellRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_SpellRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_SpellRemove) ProtoMessage() {}

func (x *GameActionFightEvent_SpellRemove) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_SpellRemove.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_SpellRemove) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 15}
}

func (x *GameActionFightEvent_SpellRemove) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_SpellRemove) GetVerboseCast() bool {
	if x != nil {
		return x.VerboseCast
	}
	return false
}

func (m *GameActionFightEvent_SpellRemove) GetComplement() isGameActionFightEvent_SpellRemove_Complement {
	if m != nil {
		return m.Complement
	}
	return nil
}

func (x *GameActionFightEvent_SpellRemove) GetEffectRemove() *GameActionFightEvent_SpellRemove_EffectRemove {
	if x, ok := x.GetComplement().(*GameActionFightEvent_SpellRemove_EffectRemove_); ok {
		return x.EffectRemove
	}
	return nil
}

func (x *GameActionFightEvent_SpellRemove) GetSpellId() int32 {
	if x, ok := x.GetComplement().(*GameActionFightEvent_SpellRemove_SpellId); ok {
		return x.SpellId
	}
	return 0
}

type isGameActionFightEvent_SpellRemove_Complement interface {
	isGameActionFightEvent_SpellRemove_Complement()
}

type GameActionFightEvent_SpellRemove_EffectRemove_ struct {
	EffectRemove *GameActionFightEvent_SpellRemove_EffectRemove `protobuf:"bytes,3,opt,name=effect_remove,json=effectRemove,proto3,oneof"`
}

type GameActionFightEvent_SpellRemove_SpellId struct {
	SpellId int32 `protobuf:"varint,4,opt,name=spell_id,json=spellId,proto3,oneof"`
}

func (*GameActionFightEvent_SpellRemove_EffectRemove_) isGameActionFightEvent_SpellRemove_Complement() {
}

func (*GameActionFightEvent_SpellRemove_SpellId) isGameActionFightEvent_SpellRemove_Complement() {}

type GameActionFightEvent_Tackled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TacklersId []int64 `protobuf:"varint,1,rep,packed,name=tacklers_id,json=tacklersId,proto3" json:"tacklers_id,omitempty"`
}

func (x *GameActionFightEvent_Tackled) Reset() {
	*x = GameActionFightEvent_Tackled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Tackled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Tackled) ProtoMessage() {}

func (x *GameActionFightEvent_Tackled) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Tackled.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Tackled) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 16}
}

func (x *GameActionFightEvent_Tackled) GetTacklersId() []int64 {
	if x != nil {
		return x.TacklersId
	}
	return nil
}

type GameActionFightEvent_PointsVariation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Delta    int32 `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
}

func (x *GameActionFightEvent_PointsVariation) Reset() {
	*x = GameActionFightEvent_PointsVariation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_PointsVariation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_PointsVariation) ProtoMessage() {}

func (x *GameActionFightEvent_PointsVariation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_PointsVariation.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_PointsVariation) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 17}
}

func (x *GameActionFightEvent_PointsVariation) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_PointsVariation) GetDelta() int32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

type GameActionFightEvent_InvisibleDetected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Cell     int32 `protobuf:"varint,2,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *GameActionFightEvent_InvisibleDetected) Reset() {
	*x = GameActionFightEvent_InvisibleDetected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_InvisibleDetected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_InvisibleDetected) ProtoMessage() {}

func (x *GameActionFightEvent_InvisibleDetected) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_InvisibleDetected.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_InvisibleDetected) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 18}
}

func (x *GameActionFightEvent_InvisibleDetected) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_InvisibleDetected) GetCell() int32 {
	if x != nil {
		return x.Cell
	}
	return 0
}

type GameActionFightEvent_TargetedAbility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId        int64                  `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	DestinationCell int32                  `protobuf:"varint,2,opt,name=destination_cell,json=destinationCell,proto3" json:"destination_cell,omitempty"`
	Critical        FightSpellCastCritical `protobuf:"varint,3,opt,name=critical,proto3,enum=com.ankama.dofus.server.game.protocol.game.action.FightSpellCastCritical" json:"critical,omitempty"`
	SilentCast      bool                   `protobuf:"varint,4,opt,name=silent_cast,json=silentCast,proto3" json:"silent_cast,omitempty"`
	VerboseCast     bool                   `protobuf:"varint,5,opt,name=verbose_cast,json=verboseCast,proto3" json:"verbose_cast,omitempty"`
	// Types that are assignable to Fight:
	//
	//	*GameActionFightEvent_TargetedAbility_SpellCast_
	//	*GameActionFightEvent_TargetedAbility_WeaponGenericId
	Fight isGameActionFightEvent_TargetedAbility_Fight `protobuf_oneof:"fight"`
}

func (x *GameActionFightEvent_TargetedAbility) Reset() {
	*x = GameActionFightEvent_TargetedAbility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_TargetedAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_TargetedAbility) ProtoMessage() {}

func (x *GameActionFightEvent_TargetedAbility) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_TargetedAbility.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_TargetedAbility) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 19}
}

func (x *GameActionFightEvent_TargetedAbility) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_TargetedAbility) GetDestinationCell() int32 {
	if x != nil {
		return x.DestinationCell
	}
	return 0
}

func (x *GameActionFightEvent_TargetedAbility) GetCritical() FightSpellCastCritical {
	if x != nil {
		return x.Critical
	}
	return FightSpellCastCritical_NORMAL
}

func (x *GameActionFightEvent_TargetedAbility) GetSilentCast() bool {
	if x != nil {
		return x.SilentCast
	}
	return false
}

func (x *GameActionFightEvent_TargetedAbility) GetVerboseCast() bool {
	if x != nil {
		return x.VerboseCast
	}
	return false
}

func (m *GameActionFightEvent_TargetedAbility) GetFight() isGameActionFightEvent_TargetedAbility_Fight {
	if m != nil {
		return m.Fight
	}
	return nil
}

func (x *GameActionFightEvent_TargetedAbility) GetSpellCast() *GameActionFightEvent_TargetedAbility_SpellCast {
	if x, ok := x.GetFight().(*GameActionFightEvent_TargetedAbility_SpellCast_); ok {
		return x.SpellCast
	}
	return nil
}

func (x *GameActionFightEvent_TargetedAbility) GetWeaponGenericId() int32 {
	if x, ok := x.GetFight().(*GameActionFightEvent_TargetedAbility_WeaponGenericId); ok {
		return x.WeaponGenericId
	}
	return 0
}

type isGameActionFightEvent_TargetedAbility_Fight interface {
	isGameActionFightEvent_TargetedAbility_Fight()
}

type GameActionFightEvent_TargetedAbility_SpellCast_ struct {
	SpellCast *GameActionFightEvent_TargetedAbility_SpellCast `protobuf:"bytes,6,opt,name=spell_cast,json=spellCast,proto3,oneof"`
}

type GameActionFightEvent_TargetedAbility_WeaponGenericId struct {
	WeaponGenericId int32 `protobuf:"varint,7,opt,name=weapon_generic_id,json=weaponGenericId,proto3,oneof"`
}

func (*GameActionFightEvent_TargetedAbility_SpellCast_) isGameActionFightEvent_TargetedAbility_Fight() {
}

func (*GameActionFightEvent_TargetedAbility_WeaponGenericId) isGameActionFightEvent_TargetedAbility_Fight() {
}

type GameActionFightEvent_Vanish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GameActionFightEvent_Vanish) Reset() {
	*x = GameActionFightEvent_Vanish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Vanish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Vanish) ProtoMessage() {}

func (x *GameActionFightEvent_Vanish) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Vanish.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Vanish) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 20}
}

func (x *GameActionFightEvent_Vanish) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type GameActionFightEvent_Kill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GameActionFightEvent_Kill) Reset() {
	*x = GameActionFightEvent_Kill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Kill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Kill) ProtoMessage() {}

func (x *GameActionFightEvent_Kill) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Kill.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Kill) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 21}
}

func (x *GameActionFightEvent_Kill) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type GameActionFightEvent_Death struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GameActionFightEvent_Death) Reset() {
	*x = GameActionFightEvent_Death{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Death) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Death) ProtoMessage() {}

func (x *GameActionFightEvent_Death) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Death.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Death) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 22}
}

func (x *GameActionFightEvent_Death) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type GameActionFightEvent_SpellImmunity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	SpellId  int32 `protobuf:"varint,2,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
}

func (x *GameActionFightEvent_SpellImmunity) Reset() {
	*x = GameActionFightEvent_SpellImmunity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_SpellImmunity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_SpellImmunity) ProtoMessage() {}

func (x *GameActionFightEvent_SpellImmunity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_SpellImmunity.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_SpellImmunity) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 23}
}

func (x *GameActionFightEvent_SpellImmunity) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_SpellImmunity) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

type GameActionFightEvent_SpellCoolDownVariation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	SpellId  int32 `protobuf:"varint,2,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Value    int32 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GameActionFightEvent_SpellCoolDownVariation) Reset() {
	*x = GameActionFightEvent_SpellCoolDownVariation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_SpellCoolDownVariation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_SpellCoolDownVariation) ProtoMessage() {}

func (x *GameActionFightEvent_SpellCoolDownVariation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_SpellCoolDownVariation.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_SpellCoolDownVariation) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 24}
}

func (x *GameActionFightEvent_SpellCoolDownVariation) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_SpellCoolDownVariation) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *GameActionFightEvent_SpellCoolDownVariation) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GameActionFightEvent_LifePointsLost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId         int64  `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Loss             int32  `protobuf:"varint,2,opt,name=loss,proto3" json:"loss,omitempty"`
	PermanentDamages int32  `protobuf:"varint,3,opt,name=permanent_damages,json=permanentDamages,proto3" json:"permanent_damages,omitempty"`
	ElementId        int32  `protobuf:"varint,4,opt,name=element_id,json=elementId,proto3" json:"element_id,omitempty"`
	ShieldLoss       *int32 `protobuf:"varint,5,opt,name=shield_loss,json=shieldLoss,proto3,oneof" json:"shield_loss,omitempty"`
}

func (x *GameActionFightEvent_LifePointsLost) Reset() {
	*x = GameActionFightEvent_LifePointsLost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_LifePointsLost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_LifePointsLost) ProtoMessage() {}

func (x *GameActionFightEvent_LifePointsLost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_LifePointsLost.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_LifePointsLost) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 25}
}

func (x *GameActionFightEvent_LifePointsLost) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_LifePointsLost) GetLoss() int32 {
	if x != nil {
		return x.Loss
	}
	return 0
}

func (x *GameActionFightEvent_LifePointsLost) GetPermanentDamages() int32 {
	if x != nil {
		return x.PermanentDamages
	}
	return 0
}

func (x *GameActionFightEvent_LifePointsLost) GetElementId() int32 {
	if x != nil {
		return x.ElementId
	}
	return 0
}

func (x *GameActionFightEvent_LifePointsLost) GetShieldLoss() int32 {
	if x != nil && x.ShieldLoss != nil {
		return *x.ShieldLoss
	}
	return 0
}

type GameActionFightEvent_LifePointsGain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Delta    int32 `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
}

func (x *GameActionFightEvent_LifePointsGain) Reset() {
	*x = GameActionFightEvent_LifePointsGain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_LifePointsGain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_LifePointsGain) ProtoMessage() {}

func (x *GameActionFightEvent_LifePointsGain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_LifePointsGain.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_LifePointsGain) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 26}
}

func (x *GameActionFightEvent_LifePointsGain) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_LifePointsGain) GetDelta() int32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

type GameActionFightEvent_RemovableEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Effect *common.FightRemovableEffect `protobuf:"bytes,1,opt,name=effect,proto3" json:"effect,omitempty"`
}

func (x *GameActionFightEvent_RemovableEffect) Reset() {
	*x = GameActionFightEvent_RemovableEffect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_RemovableEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_RemovableEffect) ProtoMessage() {}

func (x *GameActionFightEvent_RemovableEffect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_RemovableEffect.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_RemovableEffect) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 27}
}

func (x *GameActionFightEvent_RemovableEffect) GetEffect() *common.FightRemovableEffect {
	if x != nil {
		return x.Effect
	}
	return nil
}

type GameActionFightEvent_Slide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId  int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	StartCell int32 `protobuf:"varint,2,opt,name=start_cell,json=startCell,proto3" json:"start_cell,omitempty"`
	EndCell   int32 `protobuf:"varint,3,opt,name=end_cell,json=endCell,proto3" json:"end_cell,omitempty"`
}

func (x *GameActionFightEvent_Slide) Reset() {
	*x = GameActionFightEvent_Slide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Slide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Slide) ProtoMessage() {}

func (x *GameActionFightEvent_Slide) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Slide.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Slide) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 28}
}

func (x *GameActionFightEvent_Slide) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_Slide) GetStartCell() int32 {
	if x != nil {
		return x.StartCell
	}
	return 0
}

func (x *GameActionFightEvent_Slide) GetEndCell() int32 {
	if x != nil {
		return x.EndCell
	}
	return 0
}

type GameActionFightEvent_DodgePointLoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Amount   int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GameActionFightEvent_DodgePointLoss) Reset() {
	*x = GameActionFightEvent_DodgePointLoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_DodgePointLoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_DodgePointLoss) ProtoMessage() {}

func (x *GameActionFightEvent_DodgePointLoss) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_DodgePointLoss.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_DodgePointLoss) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 29}
}

func (x *GameActionFightEvent_DodgePointLoss) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_DodgePointLoss) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GameActionFightEvent_ReflectDamages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GameActionFightEvent_ReflectDamages) Reset() {
	*x = GameActionFightEvent_ReflectDamages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ReflectDamages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ReflectDamages) ProtoMessage() {}

func (x *GameActionFightEvent_ReflectDamages) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ReflectDamages.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ReflectDamages) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 30}
}

func (x *GameActionFightEvent_ReflectDamages) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type GameActionFightEvent_ReduceDamages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Amount   int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GameActionFightEvent_ReduceDamages) Reset() {
	*x = GameActionFightEvent_ReduceDamages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ReduceDamages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ReduceDamages) ProtoMessage() {}

func (x *GameActionFightEvent_ReduceDamages) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ReduceDamages.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ReduceDamages) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 31}
}

func (x *GameActionFightEvent_ReduceDamages) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionFightEvent_ReduceDamages) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GameActionFightEvent_ReflectSpell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GameActionFightEvent_ReflectSpell) Reset() {
	*x = GameActionFightEvent_ReflectSpell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_ReflectSpell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_ReflectSpell) ProtoMessage() {}

func (x *GameActionFightEvent_ReflectSpell) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_ReflectSpell.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_ReflectSpell) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 32}
}

func (x *GameActionFightEvent_ReflectSpell) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type GameActionFightEvent_Summons_SummonsByActor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summons []*common.ActorPositionInformation `protobuf:"bytes,1,rep,name=summons,proto3" json:"summons,omitempty"`
}

func (x *GameActionFightEvent_Summons_SummonsByActor) Reset() {
	*x = GameActionFightEvent_Summons_SummonsByActor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Summons_SummonsByActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Summons_SummonsByActor) ProtoMessage() {}

func (x *GameActionFightEvent_Summons_SummonsByActor) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Summons_SummonsByActor.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Summons_SummonsByActor) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 8, 0}
}

func (x *GameActionFightEvent_Summons_SummonsByActor) GetSummons() []*common.ActorPositionInformation {
	if x != nil {
		return x.Summons
	}
	return nil
}

type GameActionFightEvent_Summons_SummonsByContextInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summons []*GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation `protobuf:"bytes,1,rep,name=summons,proto3" json:"summons,omitempty"`
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation) Reset() {
	*x = GameActionFightEvent_Summons_SummonsByContextInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Summons_SummonsByContextInformation) ProtoMessage() {}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Summons_SummonsByContextInformation.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Summons_SummonsByContextInformation) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 8, 1}
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation) GetSummons() []*GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation {
	if x != nil {
		return x.Summons
	}
	return nil
}

type GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpawnInformation *EntitySpawnInformation      `protobuf:"bytes,1,opt,name=spawn_information,json=spawnInformation,proto3" json:"spawn_information,omitempty"`
	Wave             int32                        `protobuf:"varint,2,opt,name=wave,proto3" json:"wave,omitempty"`
	Look             *common.EntityLook           `protobuf:"bytes,3,opt,name=look,proto3" json:"look,omitempty"`
	Characteristics  *common.FightCharacteristics `protobuf:"bytes,4,opt,name=characteristics,proto3" json:"characteristics,omitempty"`
	Summons          []*common.SpawnInformation   `protobuf:"bytes,5,rep,name=summons,proto3" json:"summons,omitempty"`
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) Reset() {
	*x = GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) ProtoMessage() {
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 8, 1, 0}
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) GetSpawnInformation() *EntitySpawnInformation {
	if x != nil {
		return x.SpawnInformation
	}
	return nil
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) GetWave() int32 {
	if x != nil {
		return x.Wave
	}
	return 0
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) GetLook() *common.EntityLook {
	if x != nil {
		return x.Look
	}
	return nil
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) GetCharacteristics() *common.FightCharacteristics {
	if x != nil {
		return x.Characteristics
	}
	return nil
}

func (x *GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation) GetSummons() []*common.SpawnInformation {
	if x != nil {
		return x.Summons
	}
	return nil
}

type GameActionFightEvent_SpellRemove_EffectRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Effect  int32 `protobuf:"varint,1,opt,name=effect,proto3" json:"effect,omitempty"`
	Trigger bool  `protobuf:"varint,2,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *GameActionFightEvent_SpellRemove_EffectRemove) Reset() {
	*x = GameActionFightEvent_SpellRemove_EffectRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_SpellRemove_EffectRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_SpellRemove_EffectRemove) ProtoMessage() {}

func (x *GameActionFightEvent_SpellRemove_EffectRemove) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_SpellRemove_EffectRemove.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_SpellRemove_EffectRemove) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 15, 0}
}

func (x *GameActionFightEvent_SpellRemove_EffectRemove) GetEffect() int32 {
	if x != nil {
		return x.Effect
	}
	return 0
}

func (x *GameActionFightEvent_SpellRemove_EffectRemove) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

type GameActionFightEvent_TargetedAbility_SpellCast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId    int32   `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	SpellLevel int32   `protobuf:"varint,2,opt,name=spell_level,json=spellLevel,proto3" json:"spell_level,omitempty"`
	PortalsId  []int32 `protobuf:"varint,3,rep,packed,name=portals_id,json=portalsId,proto3" json:"portals_id,omitempty"`
}

func (x *GameActionFightEvent_TargetedAbility_SpellCast) Reset() {
	*x = GameActionFightEvent_TargetedAbility_SpellCast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionFightEvent_TargetedAbility_SpellCast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionFightEvent_TargetedAbility_SpellCast) ProtoMessage() {}

func (x *GameActionFightEvent_TargetedAbility_SpellCast) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionFightEvent_TargetedAbility_SpellCast.ProtoReflect.Descriptor instead.
func (*GameActionFightEvent_TargetedAbility_SpellCast) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{8, 19, 0}
}

func (x *GameActionFightEvent_TargetedAbility_SpellCast) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *GameActionFightEvent_TargetedAbility_SpellCast) GetSpellLevel() int32 {
	if x != nil {
		return x.SpellLevel
	}
	return 0
}

func (x *GameActionFightEvent_TargetedAbility_SpellCast) GetPortalsId() []int32 {
	if x != nil {
		return x.PortalsId
	}
	return nil
}

type GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectId int32 `protobuf:"varint,1,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty"`
	TargetId int64 `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Count    int32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) Reset() {
	*x = GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) ProtoMessage() {}

func (x *GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount.ProtoReflect.Descriptor instead.
func (*GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) GetEffectId() int32 {
	if x != nil {
		return x.EffectId
	}
	return 0
}

func (x *GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type EntitySpawnInformation_Monster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterGid int32 `protobuf:"varint,1,opt,name=monster_gid,json=monsterGid,proto3" json:"monster_gid,omitempty"`
	// Types that are assignable to InvocationInformation:
	//
	//	*EntitySpawnInformation_Monster_Grade
	//	*EntitySpawnInformation_Monster_Level
	InvocationInformation isEntitySpawnInformation_Monster_InvocationInformation `protobuf_oneof:"invocation_information"`
}

func (x *EntitySpawnInformation_Monster) Reset() {
	*x = EntitySpawnInformation_Monster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySpawnInformation_Monster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySpawnInformation_Monster) ProtoMessage() {}

func (x *EntitySpawnInformation_Monster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySpawnInformation_Monster.ProtoReflect.Descriptor instead.
func (*EntitySpawnInformation_Monster) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{12, 0}
}

func (x *EntitySpawnInformation_Monster) GetMonsterGid() int32 {
	if x != nil {
		return x.MonsterGid
	}
	return 0
}

func (m *EntitySpawnInformation_Monster) GetInvocationInformation() isEntitySpawnInformation_Monster_InvocationInformation {
	if m != nil {
		return m.InvocationInformation
	}
	return nil
}

func (x *EntitySpawnInformation_Monster) GetGrade() int32 {
	if x, ok := x.GetInvocationInformation().(*EntitySpawnInformation_Monster_Grade); ok {
		return x.Grade
	}
	return 0
}

func (x *EntitySpawnInformation_Monster) GetLevel() int32 {
	if x, ok := x.GetInvocationInformation().(*EntitySpawnInformation_Monster_Level); ok {
		return x.Level
	}
	return 0
}

type isEntitySpawnInformation_Monster_InvocationInformation interface {
	isEntitySpawnInformation_Monster_InvocationInformation()
}

type EntitySpawnInformation_Monster_Grade struct {
	Grade int32 `protobuf:"varint,2,opt,name=grade,proto3,oneof"`
}

type EntitySpawnInformation_Monster_Level struct {
	Level int32 `protobuf:"varint,3,opt,name=level,proto3,oneof"`
}

func (*EntitySpawnInformation_Monster_Grade) isEntitySpawnInformation_Monster_InvocationInformation() {
}

func (*EntitySpawnInformation_Monster_Level) isEntitySpawnInformation_Monster_InvocationInformation() {
}

type EntitySpawnInformation_Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *EntitySpawnInformation_Character) Reset() {
	*x = EntitySpawnInformation_Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySpawnInformation_Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySpawnInformation_Character) ProtoMessage() {}

func (x *EntitySpawnInformation_Character) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySpawnInformation_Character.ProtoReflect.Descriptor instead.
func (*EntitySpawnInformation_Character) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{12, 1}
}

func (x *EntitySpawnInformation_Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntitySpawnInformation_Character) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type EntitySpawnInformation_Companion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId    int32 `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Level      int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	SummonerId int64 `protobuf:"varint,3,opt,name=summoner_id,json=summonerId,proto3" json:"summoner_id,omitempty"`
	OwnerId    int64 `protobuf:"varint,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *EntitySpawnInformation_Companion) Reset() {
	*x = EntitySpawnInformation_Companion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_game_action_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySpawnInformation_Companion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySpawnInformation_Companion) ProtoMessage() {}

func (x *EntitySpawnInformation_Companion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_action_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySpawnInformation_Companion.ProtoReflect.Descriptor instead.
func (*EntitySpawnInformation_Companion) Descriptor() ([]byte, []int) {
	return file_proto_game_game_action_proto_rawDescGZIP(), []int{12, 2}
}

func (x *EntitySpawnInformation_Companion) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *EntitySpawnInformation_Companion) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *EntitySpawnInformation_Companion) GetSummonerId() int64 {
	if x != nil {
		return x.SummonerId
	}
	return 0
}

func (x *EntitySpawnInformation_Companion) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

var File_proto_game_game_action_proto protoreflect.FileDescriptor

var file_proto_game_game_action_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x31,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x58, 0x0a, 0x1c, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x1f, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x1a, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x22, 0x5c, 0x0a, 0x22, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x17, 0x47,
	0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7f,
	0x0a, 0x1b, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2b, 0x0a, 0x13, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x61,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0xd6, 0x44, 0x0a,
	0x14, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x65, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x64, 0x6f, 0x64, 0x67, 0x65,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x56, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x64, 0x67, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x6f, 0x64,
	0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0f,
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x7e, 0x0a, 0x0e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x0d, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x7b, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x84, 0x01, 0x0a,
	0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x6c, 0x69, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x4c, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x69, 0x66, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x6c, 0x69, 0x66,
	0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x66,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x47, 0x61, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6c,
	0x69, 0x66, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x47, 0x61, 0x69, 0x6e, 0x12, 0x7e, 0x0a,
	0x0e, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0d,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x9b, 0x01,
	0x0a, 0x19, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x5e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x16, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f,
	0x77, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x06, 0x76,
	0x61, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x06, 0x76,
	0x61, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x62, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x69, 0x6c,
	0x6c, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x65, 0x0a, 0x05, 0x64, 0x65, 0x61,
	0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x61, 0x74, 0x68,
	0x12, 0x84, 0x01, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x65, 0x64, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x07, 0x74, 0x61, 0x63, 0x6b, 0x6c,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x61, 0x63, 0x6b, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61, 0x63,
	0x6b, 0x6c, 0x65, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x57, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8a, 0x01, 0x0a, 0x12,
	0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x8c, 0x01, 0x0a, 0x14, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x6e, 0x53, 0x61, 0x6d, 0x65, 0x4d,
	0x61, 0x70, 0x48, 0x00, 0x52, 0x11, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x6e,
	0x53, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x8a, 0x01, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x11, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x78, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x97,
	0x01, 0x0a, 0x17, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x5d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x15, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x61,
	0x6c, 0x5f, 0x6b, 0x61, 0x6d, 0x61, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x4b, 0x61, 0x6d, 0x61, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x4b, 0x61, 0x6d, 0x61, 0x12, 0x75, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x52, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x6f, 0x6f, 0x6b, 0x12, 0x7a, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x6b, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x12, 0x72, 0x0a, 0x0a,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x51, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x65, 0x6c, 0x6c, 0x73,
	0x12, 0x78, 0x0a, 0x0c, 0x75, 0x6e, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x6e, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x75,
	0x6e, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x88, 0x01, 0x0a, 0x12, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x67, 0x6c, 0x79, 0x70, 0x68, 0x5f, 0x74, 0x72, 0x61,
	0x70, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x6c, 0x79, 0x70, 0x68, 0x54, 0x72, 0x61,
	0x70, 0x48, 0x00, 0x52, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x6c, 0x79, 0x70,
	0x68, 0x54, 0x72, 0x61, 0x70, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x67, 0x6c, 0x79, 0x70, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x79, 0x70, 0x68, 0x54, 0x72, 0x61, 0x70, 0x48, 0x00,
	0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x79, 0x70, 0x68, 0x54,
	0x72, 0x61, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x79, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x74, 0x68, 0x72, 0x6f,
	0x77, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x56, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x68, 0x72, 0x6f, 0x77,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x68, 0x72,
	0x6f, 0x77, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x0e, 0x64,
	0x72, 0x6f, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x72, 0x6f,
	0x70, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x72,
	0x6f, 0x70, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x0e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x41, 0x0a, 0x0e, 0x43,
	0x61, 0x72, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x1a, 0x41,
	0x0a, 0x0e, 0x54, 0x68, 0x72, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x65, 0x6c,
	0x6c, 0x1a, 0x40, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x65, 0x6c, 0x6c, 0x1a, 0xa1, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x1a, 0x26, 0x0a, 0x0b, 0x55, 0x6e, 0x6d, 0x61, 0x72,
	0x6b, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x1a,
	0x8d, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x6c, 0x79, 0x70, 0x68,
	0x54, 0x72, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x65, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x44, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x79, 0x70, 0x68,
	0x54, 0x72, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0xa0, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x73, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xcb, 0x08, 0x0a, 0x07, 0x53, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x10, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x5f, 0x62, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x5e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x0e, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0xb2, 0x01, 0x0a, 0x1e, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x5f, 0x62, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x72, 0x0a, 0x0e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x60, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x1a, 0xfe, 0x04, 0x0a, 0x1b, 0x53,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9f, 0x01, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x84, 0x01, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x1a, 0xbc, 0x03, 0x0a,
	0x18, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x11, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x10, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x77, 0x61, 0x76, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x6c, 0x6f, 0x6f, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x6c,
	0x6f, 0x6f, 0x6b, 0x12, 0x6c, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x58, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x1a, 0x58, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x12, 0x4b, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b,
	0x1a, 0x4a, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x1a, 0x40, 0x0a, 0x09,
	0x53, 0x74, 0x65, 0x61, 0x6c, 0x4b, 0x61, 0x6d, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x77,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x04, 0x6c, 0x6f, 0x6f,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x6f,
	0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x6b, 0x1a, 0x44, 0x0a, 0x11, 0x54, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4f, 0x6e, 0x53, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x1a, 0x7c, 0x0a,
	0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x1a, 0xc4, 0x02, 0x0a, 0x0b,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x62,
	0x6f, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x73, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x0d,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x49, 0x64, 0x1a, 0x40, 0x0a, 0x0c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x2a, 0x0a, 0x07, 0x54, 0x61, 0x63, 0x6b, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x63, 0x6b, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x63, 0x6b, 0x6c, 0x65, 0x72, 0x73, 0x49, 0x64, 0x1a, 0x44,
	0x0a, 0x0f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x1a, 0x44, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x1a, 0xa8, 0x04, 0x0a, 0x0f, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x65, 0x64, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x65, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x73,
	0x74, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x65, 0x64, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x43, 0x61, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x49, 0x64, 0x1a, 0x66, 0x0a, 0x09, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x43, 0x61, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x25, 0x0a, 0x06, 0x56, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x23, 0x0a, 0x04,
	0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x1a, 0x24, 0x0a, 0x05, 0x44, 0x65, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x47, 0x0a, 0x0d, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x1a, 0x66, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77,
	0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xc3, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x66,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x0a, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x1a, 0x43,
	0x0a, 0x0e, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x47, 0x61, 0x69, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x1a, 0x6d, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x5a, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x1a, 0x5e, 0x0a, 0x05, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x63,
	0x65, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x43, 0x65,
	0x6c, 0x6c, 0x1a, 0x45, 0x0a, 0x0e, 0x44, 0x6f, 0x64, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4c, 0x6f, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x2d, 0x0a, 0x0e, 0x52, 0x65, 0x66,
	0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x44, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x2b,
	0x0a, 0x0c, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x02, 0x0a, 0x27, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0xa9, 0x01, 0x0a, 0x17, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x14, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x69, 0x0a,
	0x17, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x64, 0x0a, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x45,
	0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x64, 0x0a, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xad, 0x05, 0x0a, 0x16, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x70,
	0x61, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x73, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x73, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x1a, 0x74, 0x0a, 0x07, 0x4d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x47, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x18, 0x0a, 0x16, 0x69, 0x6e, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x35, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x78, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x49, 0x0a, 0x16, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x48, 0x49, 0x54, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x10, 0x02, 0x2a, 0x92, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x45, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x4c,
	0x59, 0x50, 0x48, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52,
	0x49, 0x47, 0x47, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x56,
	0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52,
	0x5f, 0x44, 0x45, 0x41, 0x54, 0x48, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x55, 0x52, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x55, 0x52, 0x4e,
	0x5f, 0x45, 0x4e, 0x44, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x08, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x6f, 0x2d, 0x78, 0x70,
	0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_game_action_proto_rawDescOnce sync.Once
	file_proto_game_game_action_proto_rawDescData = file_proto_game_game_action_proto_rawDesc
)

func file_proto_game_game_action_proto_rawDescGZIP() []byte {
	file_proto_game_game_action_proto_rawDescOnce.Do(func() {
		file_proto_game_game_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_game_action_proto_rawDescData)
	})
	return file_proto_game_game_action_proto_rawDescData
}

var file_proto_game_game_action_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_game_game_action_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_proto_game_game_action_proto_goTypes = []any{
	(FightSpellCastCritical)(0),                                                               // 0: com.ankama.dofus.server.game.protocol.game.action.FightSpellCastCritical
	(SequenceType)(0),                                                                         // 1: com.ankama.dofus.server.game.protocol.game.action.SequenceType
	(*GameActionItemConsumeRequest)(nil),                                                      // 2: com.ankama.dofus.server.game.protocol.game.action.GameActionItemConsumeRequest
	(*GameActionItemConsumeAllRequest)(nil),                                                   // 3: com.ankama.dofus.server.game.protocol.game.action.GameActionItemConsumeAllRequest
	(*GameActionFightCastRequest)(nil),                                                        // 4: com.ankama.dofus.server.game.protocol.game.action.GameActionFightCastRequest
	(*GameActionFightCastOnTargetRequest)(nil),                                                // 5: com.ankama.dofus.server.game.protocol.game.action.GameActionFightCastOnTargetRequest
	(*GameActionAcknowledgementRequest)(nil),                                                  // 6: com.ankama.dofus.server.game.protocol.game.action.GameActionAcknowledgementRequest
	(*GameActionItemListEvent)(nil),                                                           // 7: com.ankama.dofus.server.game.protocol.game.action.GameActionItemListEvent
	(*GameActionItemConsumedEvent)(nil),                                                       // 8: com.ankama.dofus.server.game.protocol.game.action.GameActionItemConsumedEvent
	(*GameActionSpamEvent)(nil),                                                               // 9: com.ankama.dofus.server.game.protocol.game.action.GameActionSpamEvent
	(*GameActionFightEvent)(nil),                                                              // 10: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent
	(*GameActionUpdateEffectTriggerCountEvent)(nil),                                           // 11: com.ankama.dofus.server.game.protocol.game.action.GameActionUpdateEffectTriggerCountEvent
	(*SequenceStartEvent)(nil),                                                                // 12: com.ankama.dofus.server.game.protocol.game.action.SequenceStartEvent
	(*SequenceEndEvent)(nil),                                                                  // 13: com.ankama.dofus.server.game.protocol.game.action.SequenceEndEvent
	(*EntitySpawnInformation)(nil),                                                            // 14: com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation
	(*GameActionFightEvent_CarryCharacter)(nil),                                               // 15: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.CarryCharacter
	(*GameActionFightEvent_ThrowCharacter)(nil),                                               // 16: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ThrowCharacter
	(*GameActionFightEvent_DropCharacter)(nil),                                                // 17: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.DropCharacter
	(*GameActionFightEvent_ExecuteScript)(nil),                                                // 18: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ExecuteScript
	(*GameActionFightEvent_UnmarkCells)(nil),                                                  // 19: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.UnmarkCells
	(*GameActionFightEvent_TriggerGlyphTrap)(nil),                                             // 20: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TriggerGlyphTrap
	(*GameActionFightEvent_ActivateGlyphTrap)(nil),                                            // 21: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ActivateGlyphTrap
	(*GameActionFightEvent_Invisibility)(nil),                                                 // 22: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Invisibility
	(*GameActionFightEvent_Summons)(nil),                                                      // 23: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons
	(*GameActionFightEvent_MarkCells)(nil),                                                    // 24: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.MarkCells
	(*GameActionFightEvent_ModifyEffectsDuration)(nil),                                        // 25: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ModifyEffectsDuration
	(*GameActionFightEvent_StealKama)(nil),                                                    // 26: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.StealKama
	(*GameActionFightEvent_ChangeLook)(nil),                                                   // 27: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ChangeLook
	(*GameActionFightEvent_TeleportOnSameMap)(nil),                                            // 28: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TeleportOnSameMap
	(*GameActionFightEvent_ExchangePositions)(nil),                                            // 29: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ExchangePositions
	(*GameActionFightEvent_SpellRemove)(nil),                                                  // 30: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellRemove
	(*GameActionFightEvent_Tackled)(nil),                                                      // 31: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Tackled
	(*GameActionFightEvent_PointsVariation)(nil),                                              // 32: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.PointsVariation
	(*GameActionFightEvent_InvisibleDetected)(nil),                                            // 33: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.InvisibleDetected
	(*GameActionFightEvent_TargetedAbility)(nil),                                              // 34: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TargetedAbility
	(*GameActionFightEvent_Vanish)(nil),                                                       // 35: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Vanish
	(*GameActionFightEvent_Kill)(nil),                                                         // 36: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Kill
	(*GameActionFightEvent_Death)(nil),                                                        // 37: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Death
	(*GameActionFightEvent_SpellImmunity)(nil),                                                // 38: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellImmunity
	(*GameActionFightEvent_SpellCoolDownVariation)(nil),                                       // 39: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellCoolDownVariation
	(*GameActionFightEvent_LifePointsLost)(nil),                                               // 40: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.LifePointsLost
	(*GameActionFightEvent_LifePointsGain)(nil),                                               // 41: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.LifePointsGain
	(*GameActionFightEvent_RemovableEffect)(nil),                                              // 42: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.RemovableEffect
	(*GameActionFightEvent_Slide)(nil),                                                        // 43: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Slide
	(*GameActionFightEvent_DodgePointLoss)(nil),                                               // 44: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.DodgePointLoss
	(*GameActionFightEvent_ReflectDamages)(nil),                                               // 45: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ReflectDamages
	(*GameActionFightEvent_ReduceDamages)(nil),                                                // 46: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ReduceDamages
	(*GameActionFightEvent_ReflectSpell)(nil),                                                 // 47: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ReflectSpell
	(*GameActionFightEvent_Summons_SummonsByActor)(nil),                                       // 48: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByActor
	(*GameActionFightEvent_Summons_SummonsByContextInformation)(nil),                          // 49: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation
	(*GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation)(nil), // 50: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation.SummonContextInformation
	(*GameActionFightEvent_SpellRemove_EffectRemove)(nil),                                     // 51: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellRemove.EffectRemove
	(*GameActionFightEvent_TargetedAbility_SpellCast)(nil),                                    // 52: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TargetedAbility.SpellCast
	(*GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount)(nil),                   // 53: com.ankama.dofus.server.game.protocol.game.action.GameActionUpdateEffectTriggerCountEvent.FightEffectTriggerCount
	(*EntitySpawnInformation_Monster)(nil),                                                    // 54: com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.Monster
	(*EntitySpawnInformation_Character)(nil),                                                  // 55: com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.Character
	(*EntitySpawnInformation_Companion)(nil),                                                  // 56: com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.Companion
	(*common.GameActionItem)(nil),                                                             // 57: com.ankama.dofus.server.game.protocol.common.GameActionItem
	(common.FightInvisibilityState)(0),                                                        // 58: com.ankama.dofus.server.game.protocol.common.FightInvisibilityState
	(*common.FightMark)(nil),                                                                  // 59: com.ankama.dofus.server.game.protocol.common.FightMark
	(*common.EntityLook)(nil),                                                                 // 60: com.ankama.dofus.server.game.protocol.common.EntityLook
	(*common.FightRemovableEffect)(nil),                                                       // 61: com.ankama.dofus.server.game.protocol.common.FightRemovableEffect
	(*common.ActorPositionInformation)(nil),                                                   // 62: com.ankama.dofus.server.game.protocol.common.ActorPositionInformation
	(*common.FightCharacteristics)(nil),                                                       // 63: com.ankama.dofus.server.game.protocol.common.FightCharacteristics
	(*common.SpawnInformation)(nil),                                                           // 64: com.ankama.dofus.server.game.protocol.common.SpawnInformation
}
var file_proto_game_game_action_proto_depIdxs = []int32{
	57, // 0: com.ankama.dofus.server.game.protocol.game.action.GameActionItemListEvent.actions:type_name -> com.ankama.dofus.server.game.protocol.common.GameActionItem
	43, // 1: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.slide:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Slide
	44, // 2: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.dodge_point_loss:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.DodgePointLoss
	45, // 3: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.reflect_damages:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ReflectDamages
	46, // 4: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.reduce_damages:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ReduceDamages
	47, // 5: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.reflect_spell:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ReflectSpell
	42, // 6: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.removable_effect:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.RemovableEffect
	40, // 7: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.life_points_lost:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.LifePointsLost
	41, // 8: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.life_points_gain:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.LifePointsGain
	38, // 9: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.spell_immunity:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellImmunity
	39, // 10: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.spell_cool_down_variation:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellCoolDownVariation
	35, // 11: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.vanish:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Vanish
	36, // 12: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.kill:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Kill
	37, // 13: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.death:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Death
	34, // 14: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.targeted_ability:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TargetedAbility
	31, // 15: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.tackled:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Tackled
	32, // 16: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.points_variation:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.PointsVariation
	33, // 17: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.invisible_detected:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.InvisibleDetected
	28, // 18: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.teleport_on_same_map:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TeleportOnSameMap
	29, // 19: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.exchange_positions:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ExchangePositions
	30, // 20: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.spell_remove:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellRemove
	25, // 21: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.modify_effects_duration:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ModifyEffectsDuration
	26, // 22: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.steal_kama:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.StealKama
	27, // 23: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.change_look:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ChangeLook
	22, // 24: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.invisibility:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Invisibility
	23, // 25: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.summons:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons
	24, // 26: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.mark_cells:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.MarkCells
	19, // 27: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.unmark_cells:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.UnmarkCells
	20, // 28: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.trigger_glyph_trap:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TriggerGlyphTrap
	21, // 29: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.activate_glyph_trap:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ActivateGlyphTrap
	15, // 30: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.carry_character:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.CarryCharacter
	16, // 31: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.throw_character:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ThrowCharacter
	17, // 32: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.drop_character:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.DropCharacter
	18, // 33: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.execute_script:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ExecuteScript
	53, // 34: com.ankama.dofus.server.game.protocol.game.action.GameActionUpdateEffectTriggerCountEvent.effects_count_on_target:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionUpdateEffectTriggerCountEvent.FightEffectTriggerCount
	1,  // 35: com.ankama.dofus.server.game.protocol.game.action.SequenceStartEvent.sequence_type:type_name -> com.ankama.dofus.server.game.protocol.game.action.SequenceType
	1,  // 36: com.ankama.dofus.server.game.protocol.game.action.SequenceEndEvent.sequence_type:type_name -> com.ankama.dofus.server.game.protocol.game.action.SequenceType
	54, // 37: com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.monster:type_name -> com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.Monster
	55, // 38: com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.character:type_name -> com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.Character
	56, // 39: com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.companion:type_name -> com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation.Companion
	58, // 40: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Invisibility.invisibility_state:type_name -> com.ankama.dofus.server.game.protocol.common.FightInvisibilityState
	48, // 41: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.summons_by_actor:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByActor
	49, // 42: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.summons_by_context_information:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation
	59, // 43: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.MarkCells.mark:type_name -> com.ankama.dofus.server.game.protocol.common.FightMark
	60, // 44: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.ChangeLook.look:type_name -> com.ankama.dofus.server.game.protocol.common.EntityLook
	51, // 45: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellRemove.effect_remove:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.SpellRemove.EffectRemove
	0,  // 46: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TargetedAbility.critical:type_name -> com.ankama.dofus.server.game.protocol.game.action.FightSpellCastCritical
	52, // 47: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TargetedAbility.spell_cast:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.TargetedAbility.SpellCast
	61, // 48: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.RemovableEffect.effect:type_name -> com.ankama.dofus.server.game.protocol.common.FightRemovableEffect
	62, // 49: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByActor.summons:type_name -> com.ankama.dofus.server.game.protocol.common.ActorPositionInformation
	50, // 50: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation.summons:type_name -> com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation.SummonContextInformation
	14, // 51: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation.SummonContextInformation.spawn_information:type_name -> com.ankama.dofus.server.game.protocol.game.action.EntitySpawnInformation
	60, // 52: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation.SummonContextInformation.look:type_name -> com.ankama.dofus.server.game.protocol.common.EntityLook
	63, // 53: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation.SummonContextInformation.characteristics:type_name -> com.ankama.dofus.server.game.protocol.common.FightCharacteristics
	64, // 54: com.ankama.dofus.server.game.protocol.game.action.GameActionFightEvent.Summons.SummonsByContextInformation.SummonContextInformation.summons:type_name -> com.ankama.dofus.server.game.protocol.common.SpawnInformation
	55, // [55:55] is the sub-list for method output_type
	55, // [55:55] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_proto_game_game_action_proto_init() }
func file_proto_game_game_action_proto_init() {
	if File_proto_game_game_action_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_game_game_action_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionItemConsumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionItemConsumeAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightCastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightCastOnTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionAcknowledgementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionItemListEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionItemConsumedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionSpamEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionUpdateEffectTriggerCountEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SequenceStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SequenceEndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*EntitySpawnInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_CarryCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ThrowCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_DropCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ExecuteScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_UnmarkCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_TriggerGlyphTrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ActivateGlyphTrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Invisibility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Summons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_MarkCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ModifyEffectsDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_StealKama); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ChangeLook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_TeleportOnSameMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ExchangePositions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_SpellRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Tackled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_PointsVariation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_InvisibleDetected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_TargetedAbility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Vanish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Kill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Death); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_SpellImmunity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_SpellCoolDownVariation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_LifePointsLost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_LifePointsGain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_RemovableEffect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Slide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_DodgePointLoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ReflectDamages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ReduceDamages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_ReflectSpell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Summons_SummonsByActor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Summons_SummonsByContextInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_Summons_SummonsByContextInformation_SummonContextInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_SpellRemove_EffectRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionFightEvent_TargetedAbility_SpellCast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*GameActionUpdateEffectTriggerCountEvent_FightEffectTriggerCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*EntitySpawnInformation_Monster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*EntitySpawnInformation_Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_game_action_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*EntitySpawnInformation_Companion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_game_action_proto_msgTypes[8].OneofWrappers = []any{
		(*GameActionFightEvent_Slide_)(nil),
		(*GameActionFightEvent_DodgePointLoss_)(nil),
		(*GameActionFightEvent_ReflectDamages_)(nil),
		(*GameActionFightEvent_ReduceDamages_)(nil),
		(*GameActionFightEvent_ReflectSpell_)(nil),
		(*GameActionFightEvent_RemovableEffect_)(nil),
		(*GameActionFightEvent_LifePointsLost_)(nil),
		(*GameActionFightEvent_LifePointsGain_)(nil),
		(*GameActionFightEvent_SpellImmunity_)(nil),
		(*GameActionFightEvent_SpellCoolDownVariation_)(nil),
		(*GameActionFightEvent_Vanish_)(nil),
		(*GameActionFightEvent_Kill_)(nil),
		(*GameActionFightEvent_Death_)(nil),
		(*GameActionFightEvent_TargetedAbility_)(nil),
		(*GameActionFightEvent_Tackled_)(nil),
		(*GameActionFightEvent_PointsVariation_)(nil),
		(*GameActionFightEvent_InvisibleDetected_)(nil),
		(*GameActionFightEvent_TeleportOnSameMap_)(nil),
		(*GameActionFightEvent_ExchangePositions_)(nil),
		(*GameActionFightEvent_SpellRemove_)(nil),
		(*GameActionFightEvent_ModifyEffectsDuration_)(nil),
		(*GameActionFightEvent_StealKama_)(nil),
		(*GameActionFightEvent_ChangeLook_)(nil),
		(*GameActionFightEvent_Invisibility_)(nil),
		(*GameActionFightEvent_Summons_)(nil),
		(*GameActionFightEvent_MarkCells_)(nil),
		(*GameActionFightEvent_UnmarkCells_)(nil),
		(*GameActionFightEvent_TriggerGlyphTrap_)(nil),
		(*GameActionFightEvent_ActivateGlyphTrap_)(nil),
		(*GameActionFightEvent_CarryCharacter_)(nil),
		(*GameActionFightEvent_ThrowCharacter_)(nil),
		(*GameActionFightEvent_DropCharacter_)(nil),
		(*GameActionFightEvent_ExecuteScript_)(nil),
	}
	file_proto_game_game_action_proto_msgTypes[12].OneofWrappers = []any{
		(*EntitySpawnInformation_Monster_)(nil),
		(*EntitySpawnInformation_Character_)(nil),
		(*EntitySpawnInformation_Companion_)(nil),
	}
	file_proto_game_game_action_proto_msgTypes[21].OneofWrappers = []any{
		(*GameActionFightEvent_Summons_SummonsByActor_)(nil),
		(*GameActionFightEvent_Summons_SummonsByContextInformation_)(nil),
	}
	file_proto_game_game_action_proto_msgTypes[28].OneofWrappers = []any{
		(*GameActionFightEvent_SpellRemove_EffectRemove_)(nil),
		(*GameActionFightEvent_SpellRemove_SpellId)(nil),
	}
	file_proto_game_game_action_proto_msgTypes[32].OneofWrappers = []any{
		(*GameActionFightEvent_TargetedAbility_SpellCast_)(nil),
		(*GameActionFightEvent_TargetedAbility_WeaponGenericId)(nil),
	}
	file_proto_game_game_action_proto_msgTypes[38].OneofWrappers = []any{}
	file_proto_game_game_action_proto_msgTypes[52].OneofWrappers = []any{
		(*EntitySpawnInformation_Monster_Grade)(nil),
		(*EntitySpawnInformation_Monster_Level)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_game_action_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_game_action_proto_goTypes,
		DependencyIndexes: file_proto_game_game_action_proto_depIdxs,
		EnumInfos:         file_proto_game_game_action_proto_enumTypes,
		MessageInfos:      file_proto_game_game_action_proto_msgTypes,
	}.Build()
	File_proto_game_game_action_proto = out.File
	file_proto_game_game_action_proto_rawDesc = nil
	file_proto_game_game_action_proto_goTypes = nil
	file_proto_game_game_action_proto_depIdxs = nil
}
