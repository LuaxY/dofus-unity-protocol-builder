// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/connection/message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdentificationResponse_Error_Reason int32

const (
	IdentificationResponse_Error_UNKNOWN_AUTH_ERROR         IdentificationResponse_Error_Reason = 0
	IdentificationResponse_Error_ALREADY_CONNECTED          IdentificationResponse_Error_Reason = 1
	IdentificationResponse_Error_OTP_TIMEOUT                IdentificationResponse_Error_Reason = 2
	IdentificationResponse_Error_BANNED                     IdentificationResponse_Error_Reason = 3
	IdentificationResponse_Error_INVALID_SHIELD_CERTIFICATE IdentificationResponse_Error_Reason = 4
	IdentificationResponse_Error_LOCKED                     IdentificationResponse_Error_Reason = 5
	IdentificationResponse_Error_CREDENTIALS_RESET          IdentificationResponse_Error_Reason = 6
	IdentificationResponse_Error_WRONG_CREDENTIALS          IdentificationResponse_Error_Reason = 7
	IdentificationResponse_Error_EMAIL_UNVALIDATED          IdentificationResponse_Error_Reason = 8
	IdentificationResponse_Error_ANONYMOUS_IP_FORBIDDEN     IdentificationResponse_Error_Reason = 9
	IdentificationResponse_Error_NICKNAME_REGISTRATION      IdentificationResponse_Error_Reason = 10
	IdentificationResponse_Error_UNAUTHORIZED               IdentificationResponse_Error_Reason = 11
	IdentificationResponse_Error_INVALID_CLIENT_VERSION     IdentificationResponse_Error_Reason = 12
	IdentificationResponse_Error_OUTDATED_CLIENT_VERSION    IdentificationResponse_Error_Reason = 13
)

// Enum value maps for IdentificationResponse_Error_Reason.
var (
	IdentificationResponse_Error_Reason_name = map[int32]string{
		0:  "UNKNOWN_AUTH_ERROR",
		1:  "ALREADY_CONNECTED",
		2:  "OTP_TIMEOUT",
		3:  "BANNED",
		4:  "INVALID_SHIELD_CERTIFICATE",
		5:  "LOCKED",
		6:  "CREDENTIALS_RESET",
		7:  "WRONG_CREDENTIALS",
		8:  "EMAIL_UNVALIDATED",
		9:  "ANONYMOUS_IP_FORBIDDEN",
		10: "NICKNAME_REGISTRATION",
		11: "UNAUTHORIZED",
		12: "INVALID_CLIENT_VERSION",
		13: "OUTDATED_CLIENT_VERSION",
	}
	IdentificationResponse_Error_Reason_value = map[string]int32{
		"UNKNOWN_AUTH_ERROR":         0,
		"ALREADY_CONNECTED":          1,
		"OTP_TIMEOUT":                2,
		"BANNED":                     3,
		"INVALID_SHIELD_CERTIFICATE": 4,
		"LOCKED":                     5,
		"CREDENTIALS_RESET":          6,
		"WRONG_CREDENTIALS":          7,
		"EMAIL_UNVALIDATED":          8,
		"ANONYMOUS_IP_FORBIDDEN":     9,
		"NICKNAME_REGISTRATION":      10,
		"UNAUTHORIZED":               11,
		"INVALID_CLIENT_VERSION":     12,
		"OUTDATED_CLIENT_VERSION":    13,
	}
)

func (x IdentificationResponse_Error_Reason) Enum() *IdentificationResponse_Error_Reason {
	p := new(IdentificationResponse_Error_Reason)
	*p = x
	return p
}

func (x IdentificationResponse_Error_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentificationResponse_Error_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[0].Descriptor()
}

func (IdentificationResponse_Error_Reason) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[0]
}

func (x IdentificationResponse_Error_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentificationResponse_Error_Reason.Descriptor instead.
func (IdentificationResponse_Error_Reason) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{10, 1, 0}
}

type SelectServerResponse_Error int32

const (
	SelectServerResponse_REFUSED                      SelectServerResponse_Error = 0
	SelectServerResponse_SUBSCRIBER_ONLY              SelectServerResponse_Error = 1
	SelectServerResponse_SINGLE_ACCOUNT_VERIFIED_ONLY SelectServerResponse_Error = 2
	SelectServerResponse_MAINTENANCE                  SelectServerResponse_Error = 3
)

// Enum value maps for SelectServerResponse_Error.
var (
	SelectServerResponse_Error_name = map[int32]string{
		0: "REFUSED",
		1: "SUBSCRIBER_ONLY",
		2: "SINGLE_ACCOUNT_VERIFIED_ONLY",
		3: "MAINTENANCE",
	}
	SelectServerResponse_Error_value = map[string]int32{
		"REFUSED":                      0,
		"SUBSCRIBER_ONLY":              1,
		"SINGLE_ACCOUNT_VERIFIED_ONLY": 2,
		"MAINTENANCE":                  3,
	}
)

func (x SelectServerResponse_Error) Enum() *SelectServerResponse_Error {
	p := new(SelectServerResponse_Error)
	*p = x
	return p
}

func (x SelectServerResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SelectServerResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[1].Descriptor()
}

func (SelectServerResponse_Error) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[1]
}

func (x SelectServerResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SelectServerResponse_Error.Descriptor instead.
func (SelectServerResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{12, 0}
}

type ServerInformation_Accessibility int32

const (
	ServerInformation_ACCESSIBLE               ServerInformation_Accessibility = 0
	ServerInformation_SUBSCRIBE_RESTRICTION    ServerInformation_Accessibility = 1
	ServerInformation_MONO_ACCOUNT_RESTRICTION ServerInformation_Accessibility = 2
)

// Enum value maps for ServerInformation_Accessibility.
var (
	ServerInformation_Accessibility_name = map[int32]string{
		0: "ACCESSIBLE",
		1: "SUBSCRIBE_RESTRICTION",
		2: "MONO_ACCOUNT_RESTRICTION",
	}
	ServerInformation_Accessibility_value = map[string]int32{
		"ACCESSIBLE":               0,
		"SUBSCRIBE_RESTRICTION":    1,
		"MONO_ACCOUNT_RESTRICTION": 2,
	}
)

func (x ServerInformation_Accessibility) Enum() *ServerInformation_Accessibility {
	p := new(ServerInformation_Accessibility)
	*p = x
	return p
}

func (x ServerInformation_Accessibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerInformation_Accessibility) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[2].Descriptor()
}

func (ServerInformation_Accessibility) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[2]
}

func (x ServerInformation_Accessibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerInformation_Accessibility.Descriptor instead.
func (ServerInformation_Accessibility) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{14, 0}
}

type Server_Status int32

const (
	Server_OFFLINE     Server_Status = 0
	Server_ONLINE      Server_Status = 1
	Server_MAINTENANCE Server_Status = 2
)

// Enum value maps for Server_Status.
var (
	Server_Status_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "MAINTENANCE",
	}
	Server_Status_value = map[string]int32{
		"OFFLINE":     0,
		"ONLINE":      1,
		"MAINTENANCE": 2,
	}
)

func (x Server_Status) Enum() *Server_Status {
	p := new(Server_Status)
	*p = x
	return p
}

func (x Server_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Server_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[3].Descriptor()
}

func (Server_Status) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[3]
}

func (x Server_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Server_Status.Descriptor instead.
func (Server_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{15, 0}
}

type CharacterListResponse_CharacterInformation_Gender int32

const (
	CharacterListResponse_CharacterInformation_MALE   CharacterListResponse_CharacterInformation_Gender = 0
	CharacterListResponse_CharacterInformation_FEMALE CharacterListResponse_CharacterInformation_Gender = 1
)

// Enum value maps for CharacterListResponse_CharacterInformation_Gender.
var (
	CharacterListResponse_CharacterInformation_Gender_name = map[int32]string{
		0: "MALE",
		1: "FEMALE",
	}
	CharacterListResponse_CharacterInformation_Gender_value = map[string]int32{
		"MALE":   0,
		"FEMALE": 1,
	}
)

func (x CharacterListResponse_CharacterInformation_Gender) Enum() *CharacterListResponse_CharacterInformation_Gender {
	p := new(CharacterListResponse_CharacterInformation_Gender)
	*p = x
	return p
}

func (x CharacterListResponse_CharacterInformation_Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterListResponse_CharacterInformation_Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[4].Descriptor()
}

func (CharacterListResponse_CharacterInformation_Gender) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[4]
}

func (x CharacterListResponse_CharacterInformation_Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterListResponse_CharacterInformation_Gender.Descriptor instead.
func (CharacterListResponse_CharacterInformation_Gender) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{22, 0, 0}
}

type CharacterListResponse_CharacterInformation_Breed int32

const (
	CharacterListResponse_CharacterInformation_FECA         CharacterListResponse_CharacterInformation_Breed = 0
	CharacterListResponse_CharacterInformation_OSAMODAS     CharacterListResponse_CharacterInformation_Breed = 1
	CharacterListResponse_CharacterInformation_ENUTROF      CharacterListResponse_CharacterInformation_Breed = 2
	CharacterListResponse_CharacterInformation_SRAM         CharacterListResponse_CharacterInformation_Breed = 3
	CharacterListResponse_CharacterInformation_XELOR        CharacterListResponse_CharacterInformation_Breed = 4
	CharacterListResponse_CharacterInformation_ECAFLIP      CharacterListResponse_CharacterInformation_Breed = 5
	CharacterListResponse_CharacterInformation_ENIRIPSA     CharacterListResponse_CharacterInformation_Breed = 6
	CharacterListResponse_CharacterInformation_IOP          CharacterListResponse_CharacterInformation_Breed = 7
	CharacterListResponse_CharacterInformation_CRA          CharacterListResponse_CharacterInformation_Breed = 8
	CharacterListResponse_CharacterInformation_SADIDA       CharacterListResponse_CharacterInformation_Breed = 9
	CharacterListResponse_CharacterInformation_SACRIER      CharacterListResponse_CharacterInformation_Breed = 10
	CharacterListResponse_CharacterInformation_PANDAWA      CharacterListResponse_CharacterInformation_Breed = 11
	CharacterListResponse_CharacterInformation_ROGUE        CharacterListResponse_CharacterInformation_Breed = 12
	CharacterListResponse_CharacterInformation_MASQUERAIDER CharacterListResponse_CharacterInformation_Breed = 13
	CharacterListResponse_CharacterInformation_FOGGERNAUTS  CharacterListResponse_CharacterInformation_Breed = 14
	CharacterListResponse_CharacterInformation_ELIOTROPE    CharacterListResponse_CharacterInformation_Breed = 15
	CharacterListResponse_CharacterInformation_HUPPERMAGE   CharacterListResponse_CharacterInformation_Breed = 16
	CharacterListResponse_CharacterInformation_OUGINAK      CharacterListResponse_CharacterInformation_Breed = 17
	CharacterListResponse_CharacterInformation_FORGELANCE   CharacterListResponse_CharacterInformation_Breed = 18
)

// Enum value maps for CharacterListResponse_CharacterInformation_Breed.
var (
	CharacterListResponse_CharacterInformation_Breed_name = map[int32]string{
		0:  "FECA",
		1:  "OSAMODAS",
		2:  "ENUTROF",
		3:  "SRAM",
		4:  "XELOR",
		5:  "ECAFLIP",
		6:  "ENIRIPSA",
		7:  "IOP",
		8:  "CRA",
		9:  "SADIDA",
		10: "SACRIER",
		11: "PANDAWA",
		12: "ROGUE",
		13: "MASQUERAIDER",
		14: "FOGGERNAUTS",
		15: "ELIOTROPE",
		16: "HUPPERMAGE",
		17: "OUGINAK",
		18: "FORGELANCE",
	}
	CharacterListResponse_CharacterInformation_Breed_value = map[string]int32{
		"FECA":         0,
		"OSAMODAS":     1,
		"ENUTROF":      2,
		"SRAM":         3,
		"XELOR":        4,
		"ECAFLIP":      5,
		"ENIRIPSA":     6,
		"IOP":          7,
		"CRA":          8,
		"SADIDA":       9,
		"SACRIER":      10,
		"PANDAWA":      11,
		"ROGUE":        12,
		"MASQUERAIDER": 13,
		"FOGGERNAUTS":  14,
		"ELIOTROPE":    15,
		"HUPPERMAGE":   16,
		"OUGINAK":      17,
		"FORGELANCE":   18,
	}
)

func (x CharacterListResponse_CharacterInformation_Breed) Enum() *CharacterListResponse_CharacterInformation_Breed {
	p := new(CharacterListResponse_CharacterInformation_Breed)
	*p = x
	return p
}

func (x CharacterListResponse_CharacterInformation_Breed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterListResponse_CharacterInformation_Breed) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[5].Descriptor()
}

func (CharacterListResponse_CharacterInformation_Breed) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[5]
}

func (x CharacterListResponse_CharacterInformation_Breed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterListResponse_CharacterInformation_Breed.Descriptor instead.
func (CharacterListResponse_CharacterInformation_Breed) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{22, 0, 1}
}

type FriendListResponse_Error int32

const (
	FriendListResponse_UNKNOWN  FriendListResponse_Error = 0
	FriendListResponse_FLOODING FriendListResponse_Error = 1
)

// Enum value maps for FriendListResponse_Error.
var (
	FriendListResponse_Error_name = map[int32]string{
		0: "UNKNOWN",
		1: "FLOODING",
	}
	FriendListResponse_Error_value = map[string]int32{
		"UNKNOWN":  0,
		"FLOODING": 1,
	}
)

func (x FriendListResponse_Error) Enum() *FriendListResponse_Error {
	p := new(FriendListResponse_Error)
	*p = x
	return p
}

func (x FriendListResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendListResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[6].Descriptor()
}

func (FriendListResponse_Error) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[6]
}

func (x FriendListResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendListResponse_Error.Descriptor instead.
func (FriendListResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{24, 0}
}

type AcquaintanceServersResponse_Error_Reason int32

const (
	AcquaintanceServersResponse_Error_UNKNOWN         AcquaintanceServersResponse_Error_Reason = 0
	AcquaintanceServersResponse_Error_NO_RESULT       AcquaintanceServersResponse_Error_Reason = 1
	AcquaintanceServersResponse_Error_FLOOD           AcquaintanceServersResponse_Error_Reason = 2
	AcquaintanceServersResponse_Error_INVALID_ACCOUNT AcquaintanceServersResponse_Error_Reason = 3
)

// Enum value maps for AcquaintanceServersResponse_Error_Reason.
var (
	AcquaintanceServersResponse_Error_Reason_name = map[int32]string{
		0: "UNKNOWN",
		1: "NO_RESULT",
		2: "FLOOD",
		3: "INVALID_ACCOUNT",
	}
	AcquaintanceServersResponse_Error_Reason_value = map[string]int32{
		"UNKNOWN":         0,
		"NO_RESULT":       1,
		"FLOOD":           2,
		"INVALID_ACCOUNT": 3,
	}
)

func (x AcquaintanceServersResponse_Error_Reason) Enum() *AcquaintanceServersResponse_Error_Reason {
	p := new(AcquaintanceServersResponse_Error_Reason)
	*p = x
	return p
}

func (x AcquaintanceServersResponse_Error_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AcquaintanceServersResponse_Error_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_connection_message_proto_enumTypes[7].Descriptor()
}

func (AcquaintanceServersResponse_Error_Reason) Type() protoreflect.EnumType {
	return &file_proto_connection_message_proto_enumTypes[7]
}

func (x AcquaintanceServersResponse_Error_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AcquaintanceServersResponse_Error_Reason.Descriptor instead.
func (AcquaintanceServersResponse_Error_Reason) EnumDescriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{26, 1, 0}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*Message_Request
	//	*Message_Response
	//	*Message_Event
	Content isMessage_Content `protobuf_oneof:"content"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{0}
}

func (m *Message) GetContent() isMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Message) GetRequest() *Request {
	if x, ok := x.GetContent().(*Message_Request); ok {
		return x.Request
	}
	return nil
}

func (x *Message) GetResponse() *Response {
	if x, ok := x.GetContent().(*Message_Response); ok {
		return x.Response
	}
	return nil
}

func (x *Message) GetEvent() *Event {
	if x, ok := x.GetContent().(*Message_Event); ok {
		return x.Event
	}
	return nil
}

type isMessage_Content interface {
	isMessage_Content()
}

type Message_Request struct {
	Request *Request `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type Message_Response struct {
	Response *Response `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type Message_Event struct {
	Event *Event `protobuf:"bytes,3,opt,name=event,proto3,oneof"`
}

func (*Message_Request) isMessage_Content() {}

func (*Message_Response) isMessage_Content() {}

func (*Message_Event) isMessage_Content() {}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to Content:
	//
	//	*Request_Ping
	//	*Request_Identification
	//	*Request_SelectServer
	//	*Request_ForceAccount
	//	*Request_ReleaseAccount
	//	*Request_CharactersRequest
	//	*Request_FriendListRequest
	//	*Request_AcquaintanceServersRequest
	Content isRequest_Content `protobuf_oneof:"content"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *Request) GetContent() isRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Request) GetPing() *Ping {
	if x, ok := x.GetContent().(*Request_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *Request) GetIdentification() *IdentificationRequest {
	if x, ok := x.GetContent().(*Request_Identification); ok {
		return x.Identification
	}
	return nil
}

func (x *Request) GetSelectServer() *SelectServerRequest {
	if x, ok := x.GetContent().(*Request_SelectServer); ok {
		return x.SelectServer
	}
	return nil
}

func (x *Request) GetForceAccount() *ForceAccountRequest {
	if x, ok := x.GetContent().(*Request_ForceAccount); ok {
		return x.ForceAccount
	}
	return nil
}

func (x *Request) GetReleaseAccount() *ReleaseAccountRequest {
	if x, ok := x.GetContent().(*Request_ReleaseAccount); ok {
		return x.ReleaseAccount
	}
	return nil
}

func (x *Request) GetCharactersRequest() *CharactersRequest {
	if x, ok := x.GetContent().(*Request_CharactersRequest); ok {
		return x.CharactersRequest
	}
	return nil
}

func (x *Request) GetFriendListRequest() *FriendListRequest {
	if x, ok := x.GetContent().(*Request_FriendListRequest); ok {
		return x.FriendListRequest
	}
	return nil
}

func (x *Request) GetAcquaintanceServersRequest() *AcquaintanceServersRequest {
	if x, ok := x.GetContent().(*Request_AcquaintanceServersRequest); ok {
		return x.AcquaintanceServersRequest
	}
	return nil
}

type isRequest_Content interface {
	isRequest_Content()
}

type Request_Ping struct {
	Ping *Ping `protobuf:"bytes,2,opt,name=ping,proto3,oneof"`
}

type Request_Identification struct {
	Identification *IdentificationRequest `protobuf:"bytes,3,opt,name=identification,proto3,oneof"`
}

type Request_SelectServer struct {
	SelectServer *SelectServerRequest `protobuf:"bytes,4,opt,name=selectServer,proto3,oneof"`
}

type Request_ForceAccount struct {
	ForceAccount *ForceAccountRequest `protobuf:"bytes,5,opt,name=forceAccount,proto3,oneof"`
}

type Request_ReleaseAccount struct {
	ReleaseAccount *ReleaseAccountRequest `protobuf:"bytes,6,opt,name=releaseAccount,proto3,oneof"`
}

type Request_CharactersRequest struct {
	CharactersRequest *CharactersRequest `protobuf:"bytes,7,opt,name=characters_request,json=charactersRequest,proto3,oneof"`
}

type Request_FriendListRequest struct {
	FriendListRequest *FriendListRequest `protobuf:"bytes,8,opt,name=friend_list_request,json=friendListRequest,proto3,oneof"`
}

type Request_AcquaintanceServersRequest struct {
	AcquaintanceServersRequest *AcquaintanceServersRequest `protobuf:"bytes,9,opt,name=acquaintance_servers_request,json=acquaintanceServersRequest,proto3,oneof"`
}

func (*Request_Ping) isRequest_Content() {}

func (*Request_Identification) isRequest_Content() {}

func (*Request_SelectServer) isRequest_Content() {}

func (*Request_ForceAccount) isRequest_Content() {}

func (*Request_ReleaseAccount) isRequest_Content() {}

func (*Request_CharactersRequest) isRequest_Content() {}

func (*Request_FriendListRequest) isRequest_Content() {}

func (*Request_AcquaintanceServersRequest) isRequest_Content() {}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to Content:
	//
	//	*Response_Pong
	//	*Response_Identification
	//	*Response_SelectServer
	//	*Response_ForceAccount
	//	*Response_CharacterListResponse
	//	*Response_FriendList
	//	*Response_AcquaintanceServersResponse
	Content isResponse_Content `protobuf_oneof:"content"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *Response) GetContent() isResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Response) GetPong() *Pong {
	if x, ok := x.GetContent().(*Response_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *Response) GetIdentification() *IdentificationResponse {
	if x, ok := x.GetContent().(*Response_Identification); ok {
		return x.Identification
	}
	return nil
}

func (x *Response) GetSelectServer() *SelectServerResponse {
	if x, ok := x.GetContent().(*Response_SelectServer); ok {
		return x.SelectServer
	}
	return nil
}

func (x *Response) GetForceAccount() *ForceAccountResponse {
	if x, ok := x.GetContent().(*Response_ForceAccount); ok {
		return x.ForceAccount
	}
	return nil
}

func (x *Response) GetCharacterListResponse() *CharacterListResponse {
	if x, ok := x.GetContent().(*Response_CharacterListResponse); ok {
		return x.CharacterListResponse
	}
	return nil
}

func (x *Response) GetFriendList() *FriendListResponse {
	if x, ok := x.GetContent().(*Response_FriendList); ok {
		return x.FriendList
	}
	return nil
}

func (x *Response) GetAcquaintanceServersResponse() *AcquaintanceServersResponse {
	if x, ok := x.GetContent().(*Response_AcquaintanceServersResponse); ok {
		return x.AcquaintanceServersResponse
	}
	return nil
}

type isResponse_Content interface {
	isResponse_Content()
}

type Response_Pong struct {
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type Response_Identification struct {
	Identification *IdentificationResponse `protobuf:"bytes,3,opt,name=identification,proto3,oneof"`
}

type Response_SelectServer struct {
	SelectServer *SelectServerResponse `protobuf:"bytes,4,opt,name=selectServer,proto3,oneof"`
}

type Response_ForceAccount struct {
	ForceAccount *ForceAccountResponse `protobuf:"bytes,5,opt,name=forceAccount,proto3,oneof"`
}

type Response_CharacterListResponse struct {
	CharacterListResponse *CharacterListResponse `protobuf:"bytes,6,opt,name=character_list_response,json=characterListResponse,proto3,oneof"`
}

type Response_FriendList struct {
	FriendList *FriendListResponse `protobuf:"bytes,7,opt,name=friend_list,json=friendList,proto3,oneof"`
}

type Response_AcquaintanceServersResponse struct {
	AcquaintanceServersResponse *AcquaintanceServersResponse `protobuf:"bytes,8,opt,name=acquaintance_servers_response,json=acquaintanceServersResponse,proto3,oneof"`
}

func (*Response_Pong) isResponse_Content() {}

func (*Response_Identification) isResponse_Content() {}

func (*Response_SelectServer) isResponse_Content() {}

func (*Response_ForceAccount) isResponse_Content() {}

func (*Response_CharacterListResponse) isResponse_Content() {}

func (*Response_FriendList) isResponse_Content() {}

func (*Response_AcquaintanceServersResponse) isResponse_Content() {}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*Event_Server
	//	*Event_UpdateServerEvent
	Content isEvent_Content `protobuf_oneof:"content"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{3}
}

func (m *Event) GetContent() isEvent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Event) GetServer() *Server {
	if x, ok := x.GetContent().(*Event_Server); ok {
		return x.Server
	}
	return nil
}

func (x *Event) GetUpdateServerEvent() *UpdateServerEvent {
	if x, ok := x.GetContent().(*Event_UpdateServerEvent); ok {
		return x.UpdateServerEvent
	}
	return nil
}

type isEvent_Content interface {
	isEvent_Content()
}

type Event_Server struct {
	Server *Server `protobuf:"bytes,1,opt,name=server,proto3,oneof"`
}

type Event_UpdateServerEvent struct {
	UpdateServerEvent *UpdateServerEvent `protobuf:"bytes,2,opt,name=update_server_event,json=updateServerEvent,proto3,oneof"`
}

func (*Event_Server) isEvent_Content() {}

func (*Event_UpdateServerEvent) isEvent_Content() {}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{4}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{5}
}

type UpdateServerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerInformation *ServerInformation `protobuf:"bytes,1,opt,name=serverInformation,proto3" json:"serverInformation,omitempty"`
}

func (x *UpdateServerEvent) Reset() {
	*x = UpdateServerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerEvent) ProtoMessage() {}

func (x *UpdateServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerEvent.ProtoReflect.Descriptor instead.
func (*UpdateServerEvent) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateServerEvent) GetServerInformation() *ServerInformation {
	if x != nil {
		return x.ServerInformation
	}
	return nil
}

type IdentificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIdentifier string `protobuf:"bytes,1,opt,name=device_identifier,json=deviceIdentifier,proto3" json:"device_identifier,omitempty"`
	ClientVersion    string `protobuf:"bytes,5,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	// Types that are assignable to IdentificationType:
	//
	//	*IdentificationRequest_TokenRequest
	//	*IdentificationRequest_LoginRequest
	IdentificationType isIdentificationRequest_IdentificationType `protobuf_oneof:"identification_type"`
}

func (x *IdentificationRequest) Reset() {
	*x = IdentificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentificationRequest) ProtoMessage() {}

func (x *IdentificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentificationRequest.ProtoReflect.Descriptor instead.
func (*IdentificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{7}
}

func (x *IdentificationRequest) GetDeviceIdentifier() string {
	if x != nil {
		return x.DeviceIdentifier
	}
	return ""
}

func (x *IdentificationRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (m *IdentificationRequest) GetIdentificationType() isIdentificationRequest_IdentificationType {
	if m != nil {
		return m.IdentificationType
	}
	return nil
}

func (x *IdentificationRequest) GetTokenRequest() *TokenRequest {
	if x, ok := x.GetIdentificationType().(*IdentificationRequest_TokenRequest); ok {
		return x.TokenRequest
	}
	return nil
}

func (x *IdentificationRequest) GetLoginRequest() *LoginRequest {
	if x, ok := x.GetIdentificationType().(*IdentificationRequest_LoginRequest); ok {
		return x.LoginRequest
	}
	return nil
}

type isIdentificationRequest_IdentificationType interface {
	isIdentificationRequest_IdentificationType()
}

type IdentificationRequest_TokenRequest struct {
	TokenRequest *TokenRequest `protobuf:"bytes,3,opt,name=tokenRequest,proto3,oneof"`
}

type IdentificationRequest_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,4,opt,name=loginRequest,proto3,oneof"`
}

func (*IdentificationRequest_TokenRequest) isIdentificationRequest_IdentificationType() {}

func (*IdentificationRequest_LoginRequest) isIdentificationRequest_IdentificationType() {}

type TokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string               `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Shield *TokenRequest_Shield `protobuf:"bytes,2,opt,name=shield,proto3,oneof" json:"shield,omitempty"`
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{8}
}

func (x *TokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenRequest) GetShield() *TokenRequest_Shield {
	if x != nil {
		return x.Shield
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{9}
}

func (x *LoginRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

type IdentificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*IdentificationResponse_Success_
	//	*IdentificationResponse_Error_
	Result isIdentificationResponse_Result `protobuf_oneof:"result"`
}

func (x *IdentificationResponse) Reset() {
	*x = IdentificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentificationResponse) ProtoMessage() {}

func (x *IdentificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentificationResponse.ProtoReflect.Descriptor instead.
func (*IdentificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{10}
}

func (m *IdentificationResponse) GetResult() isIdentificationResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *IdentificationResponse) GetSuccess() *IdentificationResponse_Success {
	if x, ok := x.GetResult().(*IdentificationResponse_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *IdentificationResponse) GetError() *IdentificationResponse_Error {
	if x, ok := x.GetResult().(*IdentificationResponse_Error_); ok {
		return x.Error
	}
	return nil
}

type isIdentificationResponse_Result interface {
	isIdentificationResponse_Result()
}

type IdentificationResponse_Success_ struct {
	Success *IdentificationResponse_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type IdentificationResponse_Error_ struct {
	Error *IdentificationResponse_Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*IdentificationResponse_Success_) isIdentificationResponse_Result() {}

func (*IdentificationResponse_Error_) isIdentificationResponse_Result() {}

type SelectServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server int32 `protobuf:"varint,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *SelectServerRequest) Reset() {
	*x = SelectServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectServerRequest) ProtoMessage() {}

func (x *SelectServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectServerRequest.ProtoReflect.Descriptor instead.
func (*SelectServerRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{11}
}

func (x *SelectServerRequest) GetServer() int32 {
	if x != nil {
		return x.Server
	}
	return 0
}

type SelectServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SelectServerResponse_Success_
	//	*SelectServerResponse_Error_
	Result isSelectServerResponse_Result `protobuf_oneof:"result"`
}

func (x *SelectServerResponse) Reset() {
	*x = SelectServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectServerResponse) ProtoMessage() {}

func (x *SelectServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectServerResponse.ProtoReflect.Descriptor instead.
func (*SelectServerResponse) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{12}
}

func (m *SelectServerResponse) GetResult() isSelectServerResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SelectServerResponse) GetSuccess() *SelectServerResponse_Success {
	if x, ok := x.GetResult().(*SelectServerResponse_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *SelectServerResponse) GetError() SelectServerResponse_Error {
	if x, ok := x.GetResult().(*SelectServerResponse_Error_); ok {
		return x.Error
	}
	return SelectServerResponse_REFUSED
}

type isSelectServerResponse_Result interface {
	isSelectServerResponse_Result()
}

type SelectServerResponse_Success_ struct {
	Success *SelectServerResponse_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type SelectServerResponse_Error_ struct {
	Error SelectServerResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=com.ankama.dofus.server.connection.protocol.SelectServerResponse_Error,oneof"`
}

func (*SelectServerResponse_Success_) isSelectServerResponse_Result() {}

func (*SelectServerResponse_Error_) isSelectServerResponse_Result() {}

type ServerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers       []*ServerInformation `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	MaxSlotByType int32                `protobuf:"varint,2,opt,name=max_slot_by_type,json=maxSlotByType,proto3" json:"max_slot_by_type,omitempty"`
}

func (x *ServerList) Reset() {
	*x = ServerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerList) ProtoMessage() {}

func (x *ServerList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerList.ProtoReflect.Descriptor instead.
func (*ServerList) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{13}
}

func (x *ServerList) GetServers() []*ServerInformation {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ServerList) GetMaxSlotByType() int32 {
	if x != nil {
		return x.MaxSlotByType
	}
	return 0
}

type ServerInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server        *Server                         `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Accessibility ServerInformation_Accessibility `protobuf:"varint,2,opt,name=accessibility,proto3,enum=com.ankama.dofus.server.connection.protocol.ServerInformation_Accessibility" json:"accessibility,omitempty"`
}

func (x *ServerInformation) Reset() {
	*x = ServerInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInformation) ProtoMessage() {}

func (x *ServerInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInformation.ProtoReflect.Descriptor instead.
func (*ServerInformation) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{14}
}

func (x *ServerInformation) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *ServerInformation) GetAccessibility() ServerInformation_Accessibility {
	if x != nil {
		return x.Accessibility
	}
	return ServerInformation_ACCESSIBLE
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status      Server_Status `protobuf:"varint,2,opt,name=status,proto3,enum=com.ankama.dofus.server.connection.protocol.Server_Status" json:"status,omitempty"`
	Limited     bool          `protobuf:"varint,3,opt,name=limited,proto3" json:"limited,omitempty"`
	Type        int32         `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	MonoAccount bool          `protobuf:"varint,5,opt,name=mono_account,json=monoAccount,proto3" json:"mono_account,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{15}
}

func (x *Server) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Server) GetStatus() Server_Status {
	if x != nil {
		return x.Status
	}
	return Server_OFFLINE
}

func (x *Server) GetLimited() bool {
	if x != nil {
		return x.Limited
	}
	return false
}

func (x *Server) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Server) GetMonoAccount() bool {
	if x != nil {
		return x.MonoAccount
	}
	return false
}

type ForceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *ForceAccountRequest) Reset() {
	*x = ForceAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceAccountRequest) ProtoMessage() {}

func (x *ForceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceAccountRequest.ProtoReflect.Descriptor instead.
func (*ForceAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{16}
}

func (x *ForceAccountRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ForceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*ForceAccountResponse_Success
	//	*ForceAccountResponse_Error
	Content isForceAccountResponse_Content `protobuf_oneof:"content"`
}

func (x *ForceAccountResponse) Reset() {
	*x = ForceAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceAccountResponse) ProtoMessage() {}

func (x *ForceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceAccountResponse.ProtoReflect.Descriptor instead.
func (*ForceAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{17}
}

func (m *ForceAccountResponse) GetContent() isForceAccountResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *ForceAccountResponse) GetSuccess() *ForceAccountStatus {
	if x, ok := x.GetContent().(*ForceAccountResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *ForceAccountResponse) GetError() *ForceAccountError {
	if x, ok := x.GetContent().(*ForceAccountResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isForceAccountResponse_Content interface {
	isForceAccountResponse_Content()
}

type ForceAccountResponse_Success struct {
	Success *ForceAccountStatus `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

type ForceAccountResponse_Error struct {
	Error *ForceAccountError `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ForceAccountResponse_Success) isForceAccountResponse_Content() {}

func (*ForceAccountResponse_Error) isForceAccountResponse_Content() {}

type ForceAccountStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForced              bool        `protobuf:"varint,1,opt,name=is_forced,json=isForced,proto3" json:"is_forced,omitempty"`
	ForcedAccountId       int64       `protobuf:"varint,2,opt,name=forced_account_id,json=forcedAccountId,proto3" json:"forced_account_id,omitempty"`
	ForcedAccountNickname string      `protobuf:"bytes,3,opt,name=forced_account_nickname,json=forcedAccountNickname,proto3" json:"forced_account_nickname,omitempty"`
	ForcedAccountTag      string      `protobuf:"bytes,4,opt,name=forced_account_tag,json=forcedAccountTag,proto3" json:"forced_account_tag,omitempty"`
	ServerList            *ServerList `protobuf:"bytes,5,opt,name=server_list,json=serverList,proto3" json:"server_list,omitempty"`
}

func (x *ForceAccountStatus) Reset() {
	*x = ForceAccountStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceAccountStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceAccountStatus) ProtoMessage() {}

func (x *ForceAccountStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceAccountStatus.ProtoReflect.Descriptor instead.
func (*ForceAccountStatus) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{18}
}

func (x *ForceAccountStatus) GetIsForced() bool {
	if x != nil {
		return x.IsForced
	}
	return false
}

func (x *ForceAccountStatus) GetForcedAccountId() int64 {
	if x != nil {
		return x.ForcedAccountId
	}
	return 0
}

func (x *ForceAccountStatus) GetForcedAccountNickname() string {
	if x != nil {
		return x.ForcedAccountNickname
	}
	return ""
}

func (x *ForceAccountStatus) GetForcedAccountTag() string {
	if x != nil {
		return x.ForcedAccountTag
	}
	return ""
}

func (x *ForceAccountStatus) GetServerList() *ServerList {
	if x != nil {
		return x.ServerList
	}
	return nil
}

type ForceAccountError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ForceAccountError) Reset() {
	*x = ForceAccountError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceAccountError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceAccountError) ProtoMessage() {}

func (x *ForceAccountError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceAccountError.ProtoReflect.Descriptor instead.
func (*ForceAccountError) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{19}
}

type ReleaseAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseAccountRequest) Reset() {
	*x = ReleaseAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseAccountRequest) ProtoMessage() {}

func (x *ReleaseAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseAccountRequest.ProtoReflect.Descriptor instead.
func (*ReleaseAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{20}
}

type CharactersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CharactersRequest) Reset() {
	*x = CharactersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharactersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharactersRequest) ProtoMessage() {}

func (x *CharactersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharactersRequest.ProtoReflect.Descriptor instead.
func (*CharactersRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{21}
}

type CharacterListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterInformation []*CharacterListResponse_CharacterInformation `protobuf:"bytes,1,rep,name=character_information,json=characterInformation,proto3" json:"character_information,omitempty"`
}

func (x *CharacterListResponse) Reset() {
	*x = CharacterListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterListResponse) ProtoMessage() {}

func (x *CharacterListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterListResponse.ProtoReflect.Descriptor instead.
func (*CharacterListResponse) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{22}
}

func (x *CharacterListResponse) GetCharacterInformation() []*CharacterListResponse_CharacterInformation {
	if x != nil {
		return x.CharacterInformation
	}
	return nil
}

type FriendListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FriendListRequest) Reset() {
	*x = FriendListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListRequest) ProtoMessage() {}

func (x *FriendListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListRequest.ProtoReflect.Descriptor instead.
func (*FriendListRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{23}
}

type FriendListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*FriendListResponse_Friends
	//	*FriendListResponse_Error_
	Result isFriendListResponse_Result `protobuf_oneof:"result"`
}

func (x *FriendListResponse) Reset() {
	*x = FriendListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListResponse) ProtoMessage() {}

func (x *FriendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListResponse.ProtoReflect.Descriptor instead.
func (*FriendListResponse) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{24}
}

func (m *FriendListResponse) GetResult() isFriendListResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *FriendListResponse) GetFriends() *FriendListResponse_FriendList {
	if x, ok := x.GetResult().(*FriendListResponse_Friends); ok {
		return x.Friends
	}
	return nil
}

func (x *FriendListResponse) GetError() FriendListResponse_Error {
	if x, ok := x.GetResult().(*FriendListResponse_Error_); ok {
		return x.Error
	}
	return FriendListResponse_UNKNOWN
}

type isFriendListResponse_Result interface {
	isFriendListResponse_Result()
}

type FriendListResponse_Friends struct {
	Friends *FriendListResponse_FriendList `protobuf:"bytes,1,opt,name=friends,proto3,oneof"`
}

type FriendListResponse_Error_ struct {
	Error FriendListResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=com.ankama.dofus.server.connection.protocol.FriendListResponse_Error,oneof"`
}

func (*FriendListResponse_Friends) isFriendListResponse_Result() {}

func (*FriendListResponse_Error_) isFriendListResponse_Result() {}

type AcquaintanceServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *AcquaintanceServersRequest) Reset() {
	*x = AcquaintanceServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquaintanceServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquaintanceServersRequest) ProtoMessage() {}

func (x *AcquaintanceServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquaintanceServersRequest.ProtoReflect.Descriptor instead.
func (*AcquaintanceServersRequest) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{25}
}

func (x *AcquaintanceServersRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AcquaintanceServersRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type AcquaintanceServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*AcquaintanceServersResponse_Servers_
	//	*AcquaintanceServersResponse_Error_
	Result isAcquaintanceServersResponse_Result `protobuf_oneof:"result"`
}

func (x *AcquaintanceServersResponse) Reset() {
	*x = AcquaintanceServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquaintanceServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquaintanceServersResponse) ProtoMessage() {}

func (x *AcquaintanceServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquaintanceServersResponse.ProtoReflect.Descriptor instead.
func (*AcquaintanceServersResponse) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{26}
}

func (m *AcquaintanceServersResponse) GetResult() isAcquaintanceServersResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *AcquaintanceServersResponse) GetServers() *AcquaintanceServersResponse_Servers {
	if x, ok := x.GetResult().(*AcquaintanceServersResponse_Servers_); ok {
		return x.Servers
	}
	return nil
}

func (x *AcquaintanceServersResponse) GetError() *AcquaintanceServersResponse_Error {
	if x, ok := x.GetResult().(*AcquaintanceServersResponse_Error_); ok {
		return x.Error
	}
	return nil
}

type isAcquaintanceServersResponse_Result interface {
	isAcquaintanceServersResponse_Result()
}

type AcquaintanceServersResponse_Servers_ struct {
	Servers *AcquaintanceServersResponse_Servers `protobuf:"bytes,1,opt,name=servers,proto3,oneof"`
}

type AcquaintanceServersResponse_Error_ struct {
	Error *AcquaintanceServersResponse_Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AcquaintanceServersResponse_Servers_) isAcquaintanceServersResponse_Result() {}

func (*AcquaintanceServersResponse_Error_) isAcquaintanceServersResponse_Result() {}

type TokenRequest_Shield struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateId   int64  `protobuf:"varint,1,opt,name=certificateId,proto3" json:"certificateId,omitempty"`
	CertificateHash string `protobuf:"bytes,2,opt,name=certificateHash,proto3" json:"certificateHash,omitempty"`
}

func (x *TokenRequest_Shield) Reset() {
	*x = TokenRequest_Shield{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRequest_Shield) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest_Shield) ProtoMessage() {}

func (x *TokenRequest_Shield) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest_Shield.ProtoReflect.Descriptor instead.
func (*TokenRequest_Shield) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{8, 0}
}

func (x *TokenRequest_Shield) GetCertificateId() int64 {
	if x != nil {
		return x.CertificateId
	}
	return 0
}

func (x *TokenRequest_Shield) GetCertificateHash() string {
	if x != nil {
		return x.CertificateHash
	}
	return ""
}

type IdentificationResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId                 int64                                  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountNickname           string                                 `protobuf:"bytes,2,opt,name=account_nickname,json=accountNickname,proto3" json:"account_nickname,omitempty"`
	AccountTag                string                                 `protobuf:"bytes,3,opt,name=account_tag,json=accountTag,proto3" json:"account_tag,omitempty"`
	ServerList                *ServerList                            `protobuf:"bytes,4,opt,name=server_list,json=serverList,proto3" json:"server_list,omitempty"`
	SubscriptionEndDate       string                                 `protobuf:"bytes,5,opt,name=subscription_end_date,json=subscriptionEndDate,proto3" json:"subscription_end_date,omitempty"`
	Rights                    *IdentificationResponse_Success_Rights `protobuf:"bytes,6,opt,name=rights,proto3" json:"rights,omitempty"`
	FightReconnectionServerId *int32                                 `protobuf:"varint,7,opt,name=fight_reconnection_server_id,json=fightReconnectionServerId,proto3,oneof" json:"fight_reconnection_server_id,omitempty"`
}

func (x *IdentificationResponse_Success) Reset() {
	*x = IdentificationResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentificationResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentificationResponse_Success) ProtoMessage() {}

func (x *IdentificationResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentificationResponse_Success.ProtoReflect.Descriptor instead.
func (*IdentificationResponse_Success) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{10, 0}
}

func (x *IdentificationResponse_Success) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *IdentificationResponse_Success) GetAccountNickname() string {
	if x != nil {
		return x.AccountNickname
	}
	return ""
}

func (x *IdentificationResponse_Success) GetAccountTag() string {
	if x != nil {
		return x.AccountTag
	}
	return ""
}

func (x *IdentificationResponse_Success) GetServerList() *ServerList {
	if x != nil {
		return x.ServerList
	}
	return nil
}

func (x *IdentificationResponse_Success) GetSubscriptionEndDate() string {
	if x != nil {
		return x.SubscriptionEndDate
	}
	return ""
}

func (x *IdentificationResponse_Success) GetRights() *IdentificationResponse_Success_Rights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *IdentificationResponse_Success) GetFightReconnectionServerId() int32 {
	if x != nil && x.FightReconnectionServerId != nil {
		return *x.FightReconnectionServerId
	}
	return 0
}

type IdentificationResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason          IdentificationResponse_Error_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=com.ankama.dofus.server.connection.protocol.IdentificationResponse_Error_Reason" json:"reason,omitempty"`
	BanEndDate      *string                             `protobuf:"bytes,2,opt,name=ban_end_date,json=banEndDate,proto3,oneof" json:"ban_end_date,omitempty"`
	RequiredVersion *string                             `protobuf:"bytes,3,opt,name=required_version,json=requiredVersion,proto3,oneof" json:"required_version,omitempty"`
}

func (x *IdentificationResponse_Error) Reset() {
	*x = IdentificationResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentificationResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentificationResponse_Error) ProtoMessage() {}

func (x *IdentificationResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentificationResponse_Error.ProtoReflect.Descriptor instead.
func (*IdentificationResponse_Error) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{10, 1}
}

func (x *IdentificationResponse_Error) GetReason() IdentificationResponse_Error_Reason {
	if x != nil {
		return x.Reason
	}
	return IdentificationResponse_Error_UNKNOWN_AUTH_ERROR
}

func (x *IdentificationResponse_Error) GetBanEndDate() string {
	if x != nil && x.BanEndDate != nil {
		return *x.BanEndDate
	}
	return ""
}

func (x *IdentificationResponse_Error) GetRequiredVersion() string {
	if x != nil && x.RequiredVersion != nil {
		return *x.RequiredVersion
	}
	return ""
}

type IdentificationResponse_Success_Rights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowForceAccount     bool `protobuf:"varint,1,opt,name=show_force_account,json=showForceAccount,proto3" json:"show_force_account,omitempty"`
	ShowConsole          bool `protobuf:"varint,2,opt,name=show_console,json=showConsole,proto3" json:"show_console,omitempty"`
	UnlimitedAccess      bool `protobuf:"varint,3,opt,name=unlimited_access,json=unlimitedAccess,proto3" json:"unlimited_access,omitempty"`
	InfiniteSubscription bool `protobuf:"varint,4,opt,name=infinite_subscription,json=infiniteSubscription,proto3" json:"infinite_subscription,omitempty"`
	Report               bool `protobuf:"varint,5,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *IdentificationResponse_Success_Rights) Reset() {
	*x = IdentificationResponse_Success_Rights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentificationResponse_Success_Rights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentificationResponse_Success_Rights) ProtoMessage() {}

func (x *IdentificationResponse_Success_Rights) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentificationResponse_Success_Rights.ProtoReflect.Descriptor instead.
func (*IdentificationResponse_Success_Rights) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *IdentificationResponse_Success_Rights) GetShowForceAccount() bool {
	if x != nil {
		return x.ShowForceAccount
	}
	return false
}

func (x *IdentificationResponse_Success_Rights) GetShowConsole() bool {
	if x != nil {
		return x.ShowConsole
	}
	return false
}

func (x *IdentificationResponse_Success_Rights) GetUnlimitedAccess() bool {
	if x != nil {
		return x.UnlimitedAccess
	}
	return false
}

func (x *IdentificationResponse_Success_Rights) GetInfiniteSubscription() bool {
	if x != nil {
		return x.InfiniteSubscription
	}
	return false
}

func (x *IdentificationResponse_Success_Rights) GetReport() bool {
	if x != nil {
		return x.Report
	}
	return false
}

type SelectServerResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Host  string  `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Ports []int32 `protobuf:"varint,3,rep,packed,name=ports,proto3" json:"ports,omitempty"`
}

func (x *SelectServerResponse_Success) Reset() {
	*x = SelectServerResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectServerResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectServerResponse_Success) ProtoMessage() {}

func (x *SelectServerResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectServerResponse_Success.ProtoReflect.Descriptor instead.
func (*SelectServerResponse_Success) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{12, 0}
}

func (x *SelectServerResponse_Success) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SelectServerResponse_Success) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SelectServerResponse_Success) GetPorts() []int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

type CharacterListResponse_CharacterInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string                                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Breed              CharacterListResponse_CharacterInformation_Breed  `protobuf:"varint,2,opt,name=breed,proto3,enum=com.ankama.dofus.server.connection.protocol.CharacterListResponse_CharacterInformation_Breed" json:"breed,omitempty"`
	Gender             CharacterListResponse_CharacterInformation_Gender `protobuf:"varint,3,opt,name=gender,proto3,enum=com.ankama.dofus.server.connection.protocol.CharacterListResponse_CharacterInformation_Gender" json:"gender,omitempty"`
	Level              int32                                             `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	LastConnectionDate string                                            `protobuf:"bytes,5,opt,name=last_connection_date,json=lastConnectionDate,proto3" json:"last_connection_date,omitempty"`
	ServerId           int32                                             `protobuf:"varint,6,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *CharacterListResponse_CharacterInformation) Reset() {
	*x = CharacterListResponse_CharacterInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterListResponse_CharacterInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterListResponse_CharacterInformation) ProtoMessage() {}

func (x *CharacterListResponse_CharacterInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterListResponse_CharacterInformation.ProtoReflect.Descriptor instead.
func (*CharacterListResponse_CharacterInformation) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{22, 0}
}

func (x *CharacterListResponse_CharacterInformation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterListResponse_CharacterInformation) GetBreed() CharacterListResponse_CharacterInformation_Breed {
	if x != nil {
		return x.Breed
	}
	return CharacterListResponse_CharacterInformation_FECA
}

func (x *CharacterListResponse_CharacterInformation) GetGender() CharacterListResponse_CharacterInformation_Gender {
	if x != nil {
		return x.Gender
	}
	return CharacterListResponse_CharacterInformation_MALE
}

func (x *CharacterListResponse_CharacterInformation) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CharacterListResponse_CharacterInformation) GetLastConnectionDate() string {
	if x != nil {
		return x.LastConnectionDate
	}
	return ""
}

func (x *CharacterListResponse_CharacterInformation) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type FriendListResponse_FriendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*FriendListResponse_FriendList_Friend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *FriendListResponse_FriendList) Reset() {
	*x = FriendListResponse_FriendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendListResponse_FriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListResponse_FriendList) ProtoMessage() {}

func (x *FriendListResponse_FriendList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListResponse_FriendList.ProtoReflect.Descriptor instead.
func (*FriendListResponse_FriendList) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{24, 0}
}

func (x *FriendListResponse_FriendList) GetFriends() []*FriendListResponse_FriendList_Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type FriendListResponse_FriendList_Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountName string  `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountTag  string  `protobuf:"bytes,2,opt,name=account_tag,json=accountTag,proto3" json:"account_tag,omitempty"`
	Servers     []int32 `protobuf:"varint,3,rep,packed,name=servers,proto3" json:"servers,omitempty"`
}

func (x *FriendListResponse_FriendList_Friend) Reset() {
	*x = FriendListResponse_FriendList_Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendListResponse_FriendList_Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListResponse_FriendList_Friend) ProtoMessage() {}

func (x *FriendListResponse_FriendList_Friend) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListResponse_FriendList_Friend.ProtoReflect.Descriptor instead.
func (*FriendListResponse_FriendList_Friend) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{24, 0, 0}
}

func (x *FriendListResponse_FriendList_Friend) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *FriendListResponse_FriendList_Friend) GetAccountTag() string {
	if x != nil {
		return x.AccountTag
	}
	return ""
}

func (x *FriendListResponse_FriendList_Friend) GetServers() []int32 {
	if x != nil {
		return x.Servers
	}
	return nil
}

type AcquaintanceServersResponse_Servers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []int32 `protobuf:"varint,1,rep,packed,name=servers,proto3" json:"servers,omitempty"`
}

func (x *AcquaintanceServersResponse_Servers) Reset() {
	*x = AcquaintanceServersResponse_Servers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquaintanceServersResponse_Servers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquaintanceServersResponse_Servers) ProtoMessage() {}

func (x *AcquaintanceServersResponse_Servers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquaintanceServersResponse_Servers.ProtoReflect.Descriptor instead.
func (*AcquaintanceServersResponse_Servers) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{26, 0}
}

func (x *AcquaintanceServersResponse_Servers) GetServers() []int32 {
	if x != nil {
		return x.Servers
	}
	return nil
}

type AcquaintanceServersResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason AcquaintanceServersResponse_Error_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse_Error_Reason" json:"reason,omitempty"`
}

func (x *AcquaintanceServersResponse_Error) Reset() {
	*x = AcquaintanceServersResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_connection_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquaintanceServersResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquaintanceServersResponse_Error) ProtoMessage() {}

func (x *AcquaintanceServersResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connection_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquaintanceServersResponse_Error.ProtoReflect.Descriptor instead.
func (*AcquaintanceServersResponse_Error) Descriptor() ([]byte, []int) {
	return file_proto_connection_message_proto_rawDescGZIP(), []int{26, 1}
}

func (x *AcquaintanceServersResponse_Error) GetReason() AcquaintanceServersResponse_Error_Reason {
	if x != nil {
		return x.Reason
	}
	return AcquaintanceServersResponse_Error_UNKNOWN
}

var File_proto_connection_message_proto protoreflect.FileDescriptor

var file_proto_connection_message_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x87, 0x02,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x8e, 0x07, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x6c, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66,
	0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x66, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6c,
	0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x70, 0x0a,
	0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x8b, 0x01, 0x0a, 0x1c, 0x61, 0x63, 0x71, 0x75, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x1a, 0x61, 0x63, 0x71, 0x75, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa6, 0x06, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x12, 0x6d, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x67, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x67, 0x0a, 0x0c, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x7c, 0x0a, 0x17, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x8e, 0x01, 0x0a, 0x1d, 0x61, 0x63, 0x71, 0x75, 0x61, 0x69,
	0x6e, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x71, 0x75,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x61, 0x63, 0x71, 0x75, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0xd3, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x70, 0x0a, 0x13, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22,
	0x06, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x6c, 0x0a,
	0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x02, 0x0a, 0x15,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x0c, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x5d, 0x0a, 0x06, 0x73, 0x68, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x68, 0x69, 0x65, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x1a, 0x58, 0x0a, 0x06, 0x53, 0x68, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x24, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x22, 0xd5, 0x0b, 0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x61, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa9, 0x05, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x12, 0x58, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x6a, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x52, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1c, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x19, 0x66, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x1a, 0xd1, 0x01, 0x0a, 0x06, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x69, 0x6e, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x1a, 0xb8, 0x04, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x68, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x50, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0c, 0x62, 0x61,
	0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x22, 0xc7, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4f,
	0x54, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49,
	0x41, 0x4c, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x57,
	0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53,
	0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x4e, 0x4f,
	0x4e, 0x59, 0x4d, 0x4f, 0x55, 0x53, 0x5f, 0x49, 0x50, 0x5f, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44,
	0x44, 0x45, 0x4e, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a,
	0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44,
	0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0c, 0x12, 0x1b,
	0x0a, 0x17, 0x4f, 0x55, 0x54, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x62, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x91, 0x03, 0x0a, 0x14, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x49, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10,
	0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x4f, 0x4e, 0x4c,
	0x59, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e,
	0x43, 0x45, 0x10, 0x03, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8f,
	0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x6c, 0x6f, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xae, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x72, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x58, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x4f, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x02, 0x22, 0xf1, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x52, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x6f, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x4f,
	0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41,
	0x4e, 0x43, 0x45, 0x10, 0x02, 0x22, 0x34, 0x0a, 0x13, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x14,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x56, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f,
	0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x9d, 0x02, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x58, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66,
	0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc6, 0x06, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x57, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64,
	0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x9d, 0x05, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x73, 0x0a,
	0x05, 0x62, 0x72, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x72, 0x65, 0x65, 0x64, 0x52, 0x05, 0x62, 0x72, 0x65,
	0x65, 0x64, 0x12, 0x76, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x1e, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c,
	0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x22,
	0xfe, 0x01, 0x0a, 0x05, 0x42, 0x72, 0x65, 0x65, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x45, 0x43,
	0x41, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x53, 0x41, 0x4d, 0x4f, 0x44, 0x41, 0x53, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x55, 0x54, 0x52, 0x4f, 0x46, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x52, 0x41, 0x4d, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x58, 0x45, 0x4c, 0x4f,
	0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x43, 0x41, 0x46, 0x4c, 0x49, 0x50, 0x10, 0x05,
	0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4e, 0x49, 0x52, 0x49, 0x50, 0x53, 0x41, 0x10, 0x06, 0x12, 0x07,
	0x0a, 0x03, 0x49, 0x4f, 0x50, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x52, 0x41, 0x10, 0x08,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x41, 0x44, 0x49, 0x44, 0x41, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x41, 0x43, 0x52, 0x49, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x4e,
	0x44, 0x41, 0x57, 0x41, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x4f, 0x47, 0x55, 0x45, 0x10,
	0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x53, 0x51, 0x55, 0x45, 0x52, 0x41, 0x49, 0x44, 0x45,
	0x52, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x4f, 0x47, 0x47, 0x45, 0x52, 0x4e, 0x41, 0x55,
	0x54, 0x53, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4c, 0x49, 0x4f, 0x54, 0x52, 0x4f, 0x50,
	0x45, 0x10, 0x0f, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x55, 0x50, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x47,
	0x45, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x55, 0x47, 0x49, 0x4e, 0x41, 0x4b, 0x10, 0x11,
	0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x12,
	0x22, 0x13, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xed, 0x03, 0x0a, 0x12, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x07,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x5d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0xe1, 0x01, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x6b, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x1a,
	0x66, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x46, 0x4c, 0x4f, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x1a, 0x41, 0x63, 0x71, 0x75, 0x61, 0x69, 0x6e,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0xe1, 0x03, 0x0a, 0x1b, 0x41, 0x63,
	0x71, 0x75, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x61, 0x69, 0x6e,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x66, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x23, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x1a, 0xbc, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x6d,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x6f, 0x66, 0x75,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x71,
	0x75, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x44, 0x0a,
	0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x10, 0x03, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x41, 0x5a,
	0x3f, 0x67, 0x6f, 0x2d, 0x78, 0x70, 0x2d, 0x64, 0x6f, 0x66, 0x75, 0x73, 0x2d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_connection_message_proto_rawDescOnce sync.Once
	file_proto_connection_message_proto_rawDescData = file_proto_connection_message_proto_rawDesc
)

func file_proto_connection_message_proto_rawDescGZIP() []byte {
	file_proto_connection_message_proto_rawDescOnce.Do(func() {
		file_proto_connection_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_connection_message_proto_rawDescData)
	})
	return file_proto_connection_message_proto_rawDescData
}

var file_proto_connection_message_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_proto_connection_message_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_connection_message_proto_goTypes = []any{
	(IdentificationResponse_Error_Reason)(0),               // 0: com.ankama.dofus.server.connection.protocol.IdentificationResponse.Error.Reason
	(SelectServerResponse_Error)(0),                        // 1: com.ankama.dofus.server.connection.protocol.SelectServerResponse.Error
	(ServerInformation_Accessibility)(0),                   // 2: com.ankama.dofus.server.connection.protocol.ServerInformation.Accessibility
	(Server_Status)(0),                                     // 3: com.ankama.dofus.server.connection.protocol.Server.Status
	(CharacterListResponse_CharacterInformation_Gender)(0), // 4: com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.Gender
	(CharacterListResponse_CharacterInformation_Breed)(0),  // 5: com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.Breed
	(FriendListResponse_Error)(0),                          // 6: com.ankama.dofus.server.connection.protocol.FriendListResponse.Error
	(AcquaintanceServersResponse_Error_Reason)(0),          // 7: com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Error.Reason
	(*Message)(nil),                                        // 8: com.ankama.dofus.server.connection.protocol.Message
	(*Request)(nil),                                        // 9: com.ankama.dofus.server.connection.protocol.Request
	(*Response)(nil),                                       // 10: com.ankama.dofus.server.connection.protocol.Response
	(*Event)(nil),                                          // 11: com.ankama.dofus.server.connection.protocol.Event
	(*Ping)(nil),                                           // 12: com.ankama.dofus.server.connection.protocol.Ping
	(*Pong)(nil),                                           // 13: com.ankama.dofus.server.connection.protocol.Pong
	(*UpdateServerEvent)(nil),                              // 14: com.ankama.dofus.server.connection.protocol.UpdateServerEvent
	(*IdentificationRequest)(nil),                          // 15: com.ankama.dofus.server.connection.protocol.IdentificationRequest
	(*TokenRequest)(nil),                                   // 16: com.ankama.dofus.server.connection.protocol.TokenRequest
	(*LoginRequest)(nil),                                   // 17: com.ankama.dofus.server.connection.protocol.LoginRequest
	(*IdentificationResponse)(nil),                         // 18: com.ankama.dofus.server.connection.protocol.IdentificationResponse
	(*SelectServerRequest)(nil),                            // 19: com.ankama.dofus.server.connection.protocol.SelectServerRequest
	(*SelectServerResponse)(nil),                           // 20: com.ankama.dofus.server.connection.protocol.SelectServerResponse
	(*ServerList)(nil),                                     // 21: com.ankama.dofus.server.connection.protocol.ServerList
	(*ServerInformation)(nil),                              // 22: com.ankama.dofus.server.connection.protocol.ServerInformation
	(*Server)(nil),                                         // 23: com.ankama.dofus.server.connection.protocol.Server
	(*ForceAccountRequest)(nil),                            // 24: com.ankama.dofus.server.connection.protocol.ForceAccountRequest
	(*ForceAccountResponse)(nil),                           // 25: com.ankama.dofus.server.connection.protocol.ForceAccountResponse
	(*ForceAccountStatus)(nil),                             // 26: com.ankama.dofus.server.connection.protocol.ForceAccountStatus
	(*ForceAccountError)(nil),                              // 27: com.ankama.dofus.server.connection.protocol.ForceAccountError
	(*ReleaseAccountRequest)(nil),                          // 28: com.ankama.dofus.server.connection.protocol.ReleaseAccountRequest
	(*CharactersRequest)(nil),                              // 29: com.ankama.dofus.server.connection.protocol.CharactersRequest
	(*CharacterListResponse)(nil),                          // 30: com.ankama.dofus.server.connection.protocol.CharacterListResponse
	(*FriendListRequest)(nil),                              // 31: com.ankama.dofus.server.connection.protocol.FriendListRequest
	(*FriendListResponse)(nil),                             // 32: com.ankama.dofus.server.connection.protocol.FriendListResponse
	(*AcquaintanceServersRequest)(nil),                     // 33: com.ankama.dofus.server.connection.protocol.AcquaintanceServersRequest
	(*AcquaintanceServersResponse)(nil),                    // 34: com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse
	(*TokenRequest_Shield)(nil),                            // 35: com.ankama.dofus.server.connection.protocol.TokenRequest.Shield
	(*IdentificationResponse_Success)(nil),                 // 36: com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success
	(*IdentificationResponse_Error)(nil),                   // 37: com.ankama.dofus.server.connection.protocol.IdentificationResponse.Error
	(*IdentificationResponse_Success_Rights)(nil),          // 38: com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success.Rights
	(*SelectServerResponse_Success)(nil),                   // 39: com.ankama.dofus.server.connection.protocol.SelectServerResponse.Success
	(*CharacterListResponse_CharacterInformation)(nil),     // 40: com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation
	(*FriendListResponse_FriendList)(nil),                  // 41: com.ankama.dofus.server.connection.protocol.FriendListResponse.FriendList
	(*FriendListResponse_FriendList_Friend)(nil),           // 42: com.ankama.dofus.server.connection.protocol.FriendListResponse.FriendList.Friend
	(*AcquaintanceServersResponse_Servers)(nil),            // 43: com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Servers
	(*AcquaintanceServersResponse_Error)(nil),              // 44: com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Error
}
var file_proto_connection_message_proto_depIdxs = []int32{
	9,  // 0: com.ankama.dofus.server.connection.protocol.Message.request:type_name -> com.ankama.dofus.server.connection.protocol.Request
	10, // 1: com.ankama.dofus.server.connection.protocol.Message.response:type_name -> com.ankama.dofus.server.connection.protocol.Response
	11, // 2: com.ankama.dofus.server.connection.protocol.Message.event:type_name -> com.ankama.dofus.server.connection.protocol.Event
	12, // 3: com.ankama.dofus.server.connection.protocol.Request.ping:type_name -> com.ankama.dofus.server.connection.protocol.Ping
	15, // 4: com.ankama.dofus.server.connection.protocol.Request.identification:type_name -> com.ankama.dofus.server.connection.protocol.IdentificationRequest
	19, // 5: com.ankama.dofus.server.connection.protocol.Request.selectServer:type_name -> com.ankama.dofus.server.connection.protocol.SelectServerRequest
	24, // 6: com.ankama.dofus.server.connection.protocol.Request.forceAccount:type_name -> com.ankama.dofus.server.connection.protocol.ForceAccountRequest
	28, // 7: com.ankama.dofus.server.connection.protocol.Request.releaseAccount:type_name -> com.ankama.dofus.server.connection.protocol.ReleaseAccountRequest
	29, // 8: com.ankama.dofus.server.connection.protocol.Request.characters_request:type_name -> com.ankama.dofus.server.connection.protocol.CharactersRequest
	31, // 9: com.ankama.dofus.server.connection.protocol.Request.friend_list_request:type_name -> com.ankama.dofus.server.connection.protocol.FriendListRequest
	33, // 10: com.ankama.dofus.server.connection.protocol.Request.acquaintance_servers_request:type_name -> com.ankama.dofus.server.connection.protocol.AcquaintanceServersRequest
	13, // 11: com.ankama.dofus.server.connection.protocol.Response.pong:type_name -> com.ankama.dofus.server.connection.protocol.Pong
	18, // 12: com.ankama.dofus.server.connection.protocol.Response.identification:type_name -> com.ankama.dofus.server.connection.protocol.IdentificationResponse
	20, // 13: com.ankama.dofus.server.connection.protocol.Response.selectServer:type_name -> com.ankama.dofus.server.connection.protocol.SelectServerResponse
	25, // 14: com.ankama.dofus.server.connection.protocol.Response.forceAccount:type_name -> com.ankama.dofus.server.connection.protocol.ForceAccountResponse
	30, // 15: com.ankama.dofus.server.connection.protocol.Response.character_list_response:type_name -> com.ankama.dofus.server.connection.protocol.CharacterListResponse
	32, // 16: com.ankama.dofus.server.connection.protocol.Response.friend_list:type_name -> com.ankama.dofus.server.connection.protocol.FriendListResponse
	34, // 17: com.ankama.dofus.server.connection.protocol.Response.acquaintance_servers_response:type_name -> com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse
	23, // 18: com.ankama.dofus.server.connection.protocol.Event.server:type_name -> com.ankama.dofus.server.connection.protocol.Server
	14, // 19: com.ankama.dofus.server.connection.protocol.Event.update_server_event:type_name -> com.ankama.dofus.server.connection.protocol.UpdateServerEvent
	22, // 20: com.ankama.dofus.server.connection.protocol.UpdateServerEvent.serverInformation:type_name -> com.ankama.dofus.server.connection.protocol.ServerInformation
	16, // 21: com.ankama.dofus.server.connection.protocol.IdentificationRequest.tokenRequest:type_name -> com.ankama.dofus.server.connection.protocol.TokenRequest
	17, // 22: com.ankama.dofus.server.connection.protocol.IdentificationRequest.loginRequest:type_name -> com.ankama.dofus.server.connection.protocol.LoginRequest
	35, // 23: com.ankama.dofus.server.connection.protocol.TokenRequest.shield:type_name -> com.ankama.dofus.server.connection.protocol.TokenRequest.Shield
	36, // 24: com.ankama.dofus.server.connection.protocol.IdentificationResponse.success:type_name -> com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success
	37, // 25: com.ankama.dofus.server.connection.protocol.IdentificationResponse.error:type_name -> com.ankama.dofus.server.connection.protocol.IdentificationResponse.Error
	39, // 26: com.ankama.dofus.server.connection.protocol.SelectServerResponse.success:type_name -> com.ankama.dofus.server.connection.protocol.SelectServerResponse.Success
	1,  // 27: com.ankama.dofus.server.connection.protocol.SelectServerResponse.error:type_name -> com.ankama.dofus.server.connection.protocol.SelectServerResponse.Error
	22, // 28: com.ankama.dofus.server.connection.protocol.ServerList.servers:type_name -> com.ankama.dofus.server.connection.protocol.ServerInformation
	23, // 29: com.ankama.dofus.server.connection.protocol.ServerInformation.server:type_name -> com.ankama.dofus.server.connection.protocol.Server
	2,  // 30: com.ankama.dofus.server.connection.protocol.ServerInformation.accessibility:type_name -> com.ankama.dofus.server.connection.protocol.ServerInformation.Accessibility
	3,  // 31: com.ankama.dofus.server.connection.protocol.Server.status:type_name -> com.ankama.dofus.server.connection.protocol.Server.Status
	26, // 32: com.ankama.dofus.server.connection.protocol.ForceAccountResponse.success:type_name -> com.ankama.dofus.server.connection.protocol.ForceAccountStatus
	27, // 33: com.ankama.dofus.server.connection.protocol.ForceAccountResponse.error:type_name -> com.ankama.dofus.server.connection.protocol.ForceAccountError
	21, // 34: com.ankama.dofus.server.connection.protocol.ForceAccountStatus.server_list:type_name -> com.ankama.dofus.server.connection.protocol.ServerList
	40, // 35: com.ankama.dofus.server.connection.protocol.CharacterListResponse.character_information:type_name -> com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation
	41, // 36: com.ankama.dofus.server.connection.protocol.FriendListResponse.friends:type_name -> com.ankama.dofus.server.connection.protocol.FriendListResponse.FriendList
	6,  // 37: com.ankama.dofus.server.connection.protocol.FriendListResponse.error:type_name -> com.ankama.dofus.server.connection.protocol.FriendListResponse.Error
	43, // 38: com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.servers:type_name -> com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Servers
	44, // 39: com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.error:type_name -> com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Error
	21, // 40: com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success.server_list:type_name -> com.ankama.dofus.server.connection.protocol.ServerList
	38, // 41: com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success.rights:type_name -> com.ankama.dofus.server.connection.protocol.IdentificationResponse.Success.Rights
	0,  // 42: com.ankama.dofus.server.connection.protocol.IdentificationResponse.Error.reason:type_name -> com.ankama.dofus.server.connection.protocol.IdentificationResponse.Error.Reason
	5,  // 43: com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.breed:type_name -> com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.Breed
	4,  // 44: com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.gender:type_name -> com.ankama.dofus.server.connection.protocol.CharacterListResponse.CharacterInformation.Gender
	42, // 45: com.ankama.dofus.server.connection.protocol.FriendListResponse.FriendList.friends:type_name -> com.ankama.dofus.server.connection.protocol.FriendListResponse.FriendList.Friend
	7,  // 46: com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Error.reason:type_name -> com.ankama.dofus.server.connection.protocol.AcquaintanceServersResponse.Error.Reason
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_proto_connection_message_proto_init() }
func file_proto_connection_message_proto_init() {
	if File_proto_connection_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_connection_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateServerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*IdentificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*IdentificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SelectServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SelectServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ServerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ServerInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ForceAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ForceAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ForceAccountStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ForceAccountError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CharactersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*FriendListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*FriendListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*AcquaintanceServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AcquaintanceServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*TokenRequest_Shield); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*IdentificationResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*IdentificationResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*IdentificationResponse_Success_Rights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*SelectServerResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CharacterListResponse_CharacterInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*FriendListResponse_FriendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*FriendListResponse_FriendList_Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*AcquaintanceServersResponse_Servers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_connection_message_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*AcquaintanceServersResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_connection_message_proto_msgTypes[0].OneofWrappers = []any{
		(*Message_Request)(nil),
		(*Message_Response)(nil),
		(*Message_Event)(nil),
	}
	file_proto_connection_message_proto_msgTypes[1].OneofWrappers = []any{
		(*Request_Ping)(nil),
		(*Request_Identification)(nil),
		(*Request_SelectServer)(nil),
		(*Request_ForceAccount)(nil),
		(*Request_ReleaseAccount)(nil),
		(*Request_CharactersRequest)(nil),
		(*Request_FriendListRequest)(nil),
		(*Request_AcquaintanceServersRequest)(nil),
	}
	file_proto_connection_message_proto_msgTypes[2].OneofWrappers = []any{
		(*Response_Pong)(nil),
		(*Response_Identification)(nil),
		(*Response_SelectServer)(nil),
		(*Response_ForceAccount)(nil),
		(*Response_CharacterListResponse)(nil),
		(*Response_FriendList)(nil),
		(*Response_AcquaintanceServersResponse)(nil),
	}
	file_proto_connection_message_proto_msgTypes[3].OneofWrappers = []any{
		(*Event_Server)(nil),
		(*Event_UpdateServerEvent)(nil),
	}
	file_proto_connection_message_proto_msgTypes[7].OneofWrappers = []any{
		(*IdentificationRequest_TokenRequest)(nil),
		(*IdentificationRequest_LoginRequest)(nil),
	}
	file_proto_connection_message_proto_msgTypes[8].OneofWrappers = []any{}
	file_proto_connection_message_proto_msgTypes[10].OneofWrappers = []any{
		(*IdentificationResponse_Success_)(nil),
		(*IdentificationResponse_Error_)(nil),
	}
	file_proto_connection_message_proto_msgTypes[12].OneofWrappers = []any{
		(*SelectServerResponse_Success_)(nil),
		(*SelectServerResponse_Error_)(nil),
	}
	file_proto_connection_message_proto_msgTypes[17].OneofWrappers = []any{
		(*ForceAccountResponse_Success)(nil),
		(*ForceAccountResponse_Error)(nil),
	}
	file_proto_connection_message_proto_msgTypes[24].OneofWrappers = []any{
		(*FriendListResponse_Friends)(nil),
		(*FriendListResponse_Error_)(nil),
	}
	file_proto_connection_message_proto_msgTypes[26].OneofWrappers = []any{
		(*AcquaintanceServersResponse_Servers_)(nil),
		(*AcquaintanceServersResponse_Error_)(nil),
	}
	file_proto_connection_message_proto_msgTypes[28].OneofWrappers = []any{}
	file_proto_connection_message_proto_msgTypes[29].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_connection_message_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_connection_message_proto_goTypes,
		DependencyIndexes: file_proto_connection_message_proto_depIdxs,
		EnumInfos:         file_proto_connection_message_proto_enumTypes,
		MessageInfos:      file_proto_connection_message_proto_msgTypes,
	}.Build()
	File_proto_connection_message_proto = out.File
	file_proto_connection_message_proto_rawDesc = nil
	file_proto_connection_message_proto_goTypes = nil
	file_proto_connection_message_proto_depIdxs = nil
}
